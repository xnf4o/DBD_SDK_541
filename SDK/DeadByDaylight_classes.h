#pragma once

// Name: DeadB, Version: 5


/*!!DEFINE!!*/

/*!!HELPER_DEF!!*/

/*!!HELPER_INC!!*/

#ifdef _MSC_VER
	#pragma pack(push, 0x01)
#endif

namespace CG
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class DeadByDaylight.InteractionDefinition
// 0x03A0 (FullSize[0x05B0] - InheritedSize[0x0210])
class UInteractionDefinition : public USceneComponent
{
public:
	unsigned char                                      UnknownData_29VC[0x40];                                    // 0x0210(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     InteractionID;                                             // 0x0250(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SnapTime;                                                  // 0x0260(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ResetCameraDuringSnap;                                     // 0x0264(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInteractionCancelled;                                    // 0x0265(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowStartInteractionFromHeldInput;                        // 0x0266(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AtlantaOverridePowerButtonImage;                           // 0x0267(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AtlantaInteractionID;                                      // 0x0268(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AtlantaOverrideItemUseToggleState;                         // 0x0274(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OverrideStopInteractionOnInputRelease;                     // 0x0275(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnMontageComplete;                          // 0x0276(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnMontageBlendingOut;                       // 0x0277(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnTimerExpire;                              // 0x0278(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnHeightDelta;                              // 0x0279(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopEnterMontageOnExit;                                    // 0x027A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopUpdateMontageOnExit;                                   // 0x027B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreStrafeAnimFix;                                       // 0x027C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EInteractionAnimation               InteractionAnimation;                                      // 0x027D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CamperCanInteract;                                         // 0x027E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SlasherCanInteract;                                        // 0x027F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowInputPersistence;                                     // 0x0280(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               snapPosition;                                              // 0x0281(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               snapRotation;                                              // 0x0282(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UK97[0x1];                                     // 0x0283(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SnapStopDistance;                                          // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TestClearPathDuringSnap;                                   // 0x0288(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CheckInteractableIsInPlayerView;                           // 0x0289(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HY60[0x2];                                     // 0x028A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CheckInteractableInViewSphereSweepRadius;                  // 0x028C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     CheckInteractableInViewOffset;                             // 0x0290(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CheckInteractableInViewOffsetDistanceToHitPoint;           // 0x029C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInterruptibleIfTestClearPathDuringSnapFails;             // 0x02A0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TestPlayerOrientationOnSnap;                               // 0x02A1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ScaleEnterAnimationToTime;                                 // 0x02A2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ScaleMainAnimationToTime;                                  // 0x02A3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ScaleExitAnimationToTime;                                  // 0x02A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_ESnapBackType                       SnapBackType;                                              // 0x02A5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_ESnapBackPositionType               SnapBackPositionType;                                      // 0x02A6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MAWG[0x1];                                     // 0x02A7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   SnapBackPositionOffset;                                    // 0x02A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SnapToInitialRotationDuringSnapBack;                       // 0x02B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseStartSnapTimeForSnapExitTime;                           // 0x02B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileIncapacitated;                             // 0x02B2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileCloaked;                                   // 0x02B3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileChainBlinking;                             // 0x02B4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileAttacking;                                 // 0x02B5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileChainLinked;                               // 0x02B6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileShocked;                                   // 0x02B7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileUnhookingSelf;                             // 0x02B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanInteractWhileCarrying;                                  // 0x02B9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowNavigation;                                           // 0x02BA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowNavigationInput;                                      // 0x02BB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowRotation;                                             // 0x02BC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseCameraMontageMode;                                      // 0x02BD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OwnerBlocksAttack;                                         // 0x02BE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsHighPriority;                                            // 0x02BF(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowOverridingWhenNotForced;                              // 0x02C0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IgnoreOverlapOnInteractable;                               // 0x02C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UseAuthoritativeMovement;                                  // 0x02C2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanBeAuthoritativePushedDuringEnter;                       // 0x02C3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanBeAuthoritativePushedDuringUpdate;                      // 0x02C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanBeAuthoritativePushedDuringExit;                        // 0x02C5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanAuthoritativePush;                                      // 0x02C6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CancelOnHit;                                               // 0x02C7(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CancelOnAttack;                                            // 0x02C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HideItem;                                                  // 0x02C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoBindToParentInteractor;                                // 0x02CA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AutoBindToParentZone;                                      // 0x02CB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CancelOnMoveInitialDelay;                                  // 0x02CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CancelOnMoveInput;                                         // 0x02D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CancelOnMoveInputOnlyWhenRunning;                          // 0x02D4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Q75F[0x3];                                     // 0x02D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      ProgressBasedSkillChecks;                                  // 0x02D8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               CanCrouch;                                                 // 0x02E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AffectsStillness;                                          // 0x02E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ConsideredIdle;                                            // 0x02EA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               BlockSelfInteract;                                         // 0x02EB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractionTime;                                           // 0x02EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowHighlightWhenActive;                                   // 0x02F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AtlantaAlwaysHighPriority;                                 // 0x02F1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowHighlightWhenAvailable;                                // 0x02F2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EPowerProgressBar                   ProgressBarToUpdate;                                       // 0x02F3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UpdateHighlightOpacityUsingCharge;                         // 0x02F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EInputInteractionType               interactionInputType;                                      // 0x02F5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnInputRelease;                             // 0x02F6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X3KB[0x1];                                     // 0x02F7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UInterruptionDefinition*>             _interruptionDefinitions;                                  // 0x02F8(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2WHZ[0x48];                                    // 0x0308(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnInteractionAnimNotify;                                   // 0x0350(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               DebugUnavailability;                                       // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EInputInteractionType               SecondaryActionInputType;                                  // 0x0361(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EInputInteractionType               AtlantaSecondaryActionInputType;                           // 0x0362(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C785[0x1D];                                    // 0x0363(0x001D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 NavigationSpeedCurveEnter;                                 // 0x0380(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 NavigationSpeedCurve;                                      // 0x0388(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 NavigationSpeedCurveExit;                                  // 0x0390(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EInputInteractionType               InteractionAtlantaInputType;                               // 0x0398(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AtlantaStopInteractionOnInputRelease;                      // 0x0399(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _shouldCheckInteractedUpon;                                // 0x039A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EInteractionOwnership               OwnershipUsability;                                        // 0x039B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ExitInteractionTime;                                       // 0x039C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ApplyModifiersToExitTime;                                  // 0x03A0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MD7C[0x7];                                     // 0x03A1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       InteractionDescriptionText;                                // 0x03A8(0x0018) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	DeadByDaylight_EButtonType                         AtlantaLastButtonPressed;                                  // 0x03C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BVL0[0x3];                                     // 0x03C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              InteractionHeightDeltaMax;                                 // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumVelocity;                                           // 0x03C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MOZ6[0x4];                                     // 0x03CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAnimationMontageDescriptor                 EnterMontage;                                              // 0x03D0(0x0020) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor                 UpdateMontage;                                             // 0x03F0(0x0020) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FAnimationMontageDescriptor                 ExitMontage;                                               // 0x0410(0x0020) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	struct FName                                       SnapSocketName;                                            // 0x0430(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _canBeAttachedToAnyZone;                                   // 0x043C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EButtonType                         CancelButtonType;                                          // 0x043D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EButtonType                         SecondaryActionButtonType;                                 // 0x043E(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EButtonType                         SecondaryAttackButtonType;                                 // 0x043F(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isInterruptibleBySacrifice;                               // 0x0440(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IgnoreStun;                                                // 0x0441(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LRMX[0x6];                                     // 0x0442(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       _tags;                                                     // 0x0448(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FGameplayTag                                _objectStateTag;                                           // 0x0468(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HB9E[0x4];                                     // 0x0474(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FSecondaryInteractionProperties> _secondaryInteractions;                                    // 0x0478(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	bool                                               _useHoldPrompt;                                            // 0x04C8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _allowInteractionInNarrowSpaces;                           // 0x04C9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _allowIKSensorDuringInteraction;                           // 0x04CA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _startUpdateMontageDuringEnter;                            // 0x04CB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_316V[0x4];                                     // 0x04CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInteractor*                                 _interactor;                                               // 0x04D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInteractionDefinition*>              _mutuallyExclusiveInteractionsClient;                      // 0x04D8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FActivationDefinition                       _activationDefinition;                                     // 0x04E8(0x0028) (Edit, NativeAccessSpecifierPrivate)
	class UPrimitiveComponent*                         _zone;                                                     // 0x0510(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EInputInteractionType               _cancelInputType;                                          // 0x0518(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O7LF[0x7];                                     // 0x0519(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       _preventingTags;                                           // 0x0520(0x0020) (Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _disablingTags;                                            // 0x0540(0x0020) (Edit, NativeAccessSpecifierPrivate)
	TArray<class UPlayerInteractionHandler*>           _evaluatingInteractionHandlers;                            // 0x0560(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSecondaryInteractionProperties             DEPRECATED_SecondaryInteractionProperties;                 // 0x0570(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LPF8[0x8];                                     // 0x05A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InteractionDefinition");
		return ptr;
	}



	bool ShouldStartUpdateMontageDuringEnter(class ADBDPlayer* Character);
	void SetSecondaryAttackButtonType(DeadByDaylight_EButtonType buttonType);
	void SetSecondaryActionInputType(DeadByDaylight_EInputInteractionType inputType);
	void SetSecondaryActionButtonType(DeadByDaylight_EButtonType buttonType);
	void SetCancelButtonType(DeadByDaylight_EButtonType buttonType);
	void SetAtlantaSecondaryActionInputType(DeadByDaylight_EInputInteractionType inputType);
	void RemoveDisablingTags(const struct FGameplayTag& tagToRemove);
	void OnUpdateMontageStart(class ADBDPlayer* Player);
	void OnInterruptorUpdateStart(class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
	void OnInteractionUpdateTick(class ADBDPlayer* Player, float DeltaTime);
	void OnInteractionUpdateStart(class ADBDPlayer* Player);
	void OnInteractionUpdateMontageReachedMiddle(class ADBDPlayer* Player);
	void OnInteractionUpdateEnd(class ADBDPlayer* Player);
	void OnInteractionInterruptStarted(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer);
	void OnInteractionInterruptStart(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer);
	void OnInteractionInterruptEnd(class ADBDPlayer* Player, class UInterruptionDefinition* currentInterruption, class ADBDPlayer* interruptingPlayer);
	void OnInteractionInit(class ADBDPlayer* Player);
	void OnInteractionFinished(class ADBDPlayer* Player, bool hasInteractionStarted);
	void OnInteractionExitTick(class ADBDPlayer* Player, float DeltaTime);
	void OnInteractionExitStart(class ADBDPlayer* Player);
	void OnInteractionExitEnd(class ADBDPlayer* Player);
	void OnInteractionEnterTick(class ADBDPlayer* Player, float DeltaTime);
	void OnInteractionEnterStart(class ADBDPlayer* Player, float actualSnapTime);
	void OnInteractionEnterEnd(class ADBDPlayer* Player);
	void OnInteractionCancelled(class ADBDPlayer* Player);
	void OnInteractionAnimNotifyEvent(const struct FName& NotifyId, class ADBDPlayer* Player);
	bool IsSupportedCharacterType(class ADBDPlayer* Player);
	bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInterruptionDefinition* interruption);
	bool IsInteractionUsingOffering(class ADBDPlayer* Player);
	bool IsInteractionPossibleClient(class ADBDPlayer* Player, DeadByDaylight_EInputInteractionType interactionType);
	bool IsInteractionPossibleBP(class ADBDPlayer* Player, DeadByDaylight_EInputInteractionType interactionType);
	bool IsInteractionDone(class ADBDPlayer* Player, DeadByDaylight_EInputInteractionType interactionType);
	bool IsInteractableInPlayerView(class ADBDPlayer* Player);
	bool IsInputPressed(class ADBDPlayer* Player);
	bool IsCharacterFacingInteractorDirection(class ADBDPlayer* Player);
	bool IsCancelable(class ADBDPlayer* Player);
	struct FAnimationMontageDescriptor GetUpdateMontage(class ADBDPlayer* Player);
	bool GetUpdateHighlightOpacityUsingCharge();
	float GetUpdateAnimationPlayRate(class ADBDPlayer* Player);
	struct FMontagePlaybackDefinition GetUpdateAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower);
	float GetSnapTimeAtStart(class ADBDPlayer* Player);
	float GetSnapTime(class ADBDPlayer* Player);
	struct FName GetSnapSocketName(class ADBDPlayer* Player);
	struct FVector GetSnapPointPositionAtStart(class ADBDPlayer* Player);
	struct FVector GetSnapPointPosition(class ADBDPlayer* Player);
	float GetSnapDistanceAtStart(class ADBDPlayer* Player);
	float GetSnapDistance(class ADBDPlayer* Player);
	DeadByDaylight_EButtonType GetSecondaryAttackButtonType();
	DeadByDaylight_EInputInteractionType GetSecondaryActionInputType(class UObject* WorldContextObject);
	DeadByDaylight_EButtonType GetSecondaryActionButtonType();
	struct FRotator GetRotationToSnapPointAtStart(class ADBDPlayer* Player);
	struct FRotator GetRotationToSnapPoint(class ADBDPlayer* Player);
	DeadByDaylight_EPowerProgressBar GetPowerProgressBar();
	class ADBDPlayer* GetPlayerDependancy(class ADBDPlayer* interactingPlayer);
	TArray<class UInterruptionDefinition*> GetInterruptionDefinitions();
	class UInteractor* GetInteractor();
	float GetInteractionTimeMultiplier(class ADBDPlayer* Character);
	float GetInteractionTime(class ADBDPlayer* Character);
	struct FString GetInteractionText(class ADBDPlayer* Player);
	float GetInteractionExitTime(class ADBDPlayer* Character);
	struct FText GetInteractionDescriptionText();
	class AInteractable* GetInteractable();
	struct FVector GetFocalPointPosition(class ADBDPlayer* Player);
	struct FAnimationMontageDescriptor GetExitMontage(class ADBDPlayer* Player);
	float GetExitAnimationPlayRate(class ADBDPlayer* Player);
	struct FMontagePlaybackDefinition GetExitAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower);
	struct FAnimationMontageDescriptor GetEnterMontage(class ADBDPlayer* Player);
	struct FMontagePlaybackDefinition GetEnterAnimationPlayBackDefinition(class ADBDPlayer* Player, bool Follower);
	float GetChargePercent();
	DeadByDaylight_EButtonType GetCancelButtonType();
	bool GetAllowNavigation(class ADBDPlayer* Player);
	struct FVector GetActualSnapPointPositionAtStart(class ADBDPlayer* Player);
	struct FVector GetActualSnapPointPosition(class ADBDPlayer* Player);
	TArray<class AActor*> GetActorsToIgnoreOverlap();
	float GetActorHeightDelta(class ADBDPlayer* Player);
	float GetActionSpeedMultiplier(class ADBDPlayer* Character);
	bool DoesPlayerHaveClearPath(class ADBDPlayer* Player);
	void CompleteCharge(class ADBDPlayer* Character);
	DeadByDaylight_EInteractionComparisonPriority ComparePriorityToInteraction(class UInteractionDefinition* Interaction);
	bool CanOverrideInteraction(class UInteractionDefinition* Interaction);
	float CalculateSnapTimeForConstantSpeed(class ADBDPlayer* Player, float Speed);
	float CalculateSnapTimeForConstantMaxNormalMovementSpeed(class ADBDPlayer* Player, float speedBoost);
	void AttachToZone(class UPrimitiveComponent* zone);
	void AttachToInteractor(class UInteractor* Interactor);
	bool AtlantaItemUseToggleState();
	void AddMutuallyExclusiveInteraction(class UInteractionDefinition* Interaction);
	void AddDisablingTags(const struct FGameplayTag& tagToAdd);
};

// Class DeadByDaylight.ChargeableInteractionDefinition
// 0x0128 (FullSize[0x06D8] - InheritedSize[0x05B0])
class UChargeableInteractionDefinition : public UInteractionDefinition
{
public:
	unsigned char                                      UnknownData_3F8B[0x18];                                    // 0x05B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    SkillCheckResponseAestheticDelegate;                       // 0x05C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SkillCheckResponseAuthorityDelegate;                       // 0x05D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               StopInteractionOnChargeComplete;                           // 0x05E8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasProgressivelyHarderSkillChecks;                         // 0x05E9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BYH3[0x2];                                     // 0x05EA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ProgressiveDifficultyModifier;                             // 0x05EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EChargeableInteractionBarType       ProgressBarType;                                           // 0x05F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VYO3[0x7];                                     // 0x05F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      ProgressPips;                                              // 0x05F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HideProgressBar;                                           // 0x0608(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowItemIcon;                                              // 0x0609(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AtlantaIsCancellableWhileCharging;                         // 0x060A(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MUP2[0x5];                                     // 0x060B(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChargeableComponent*                        _chargeableComponent;                                      // 0x0610(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _tutorialChargeableMultiplier;                             // 0x0618(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N63F[0x54];                                    // 0x061C(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               ShowSpeedProficiencyForMultipleInteractors;                // 0x0670(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YQLJ[0x7];                                     // 0x0671(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       _interactionSpecificActionSpeedTags;                       // 0x0678(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _interactionSpecificActionSpeedMultiplicativeTags;         // 0x0698(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _interactionSpecificActionSpeedAdditiveTags;               // 0x06B8(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChargeableInteractionDefinition");
		return ptr;
	}



	bool ShouldShowSpeedProficiencyForMultipleInteractors();
	void SetTutorialChargeableMultiplier(float multiplierValue);
	void SetSpeedBase(float speedBase);
	void SetChargeableComponent(class UChargeableComponent* ChargeableComponent);
	void OnSkillCheckResponseAuthorityBP(class ADBDPlayer* Player, bool success, bool Bonus, bool hadInput, DBDSharedTypes_ESkillCheckCustomType Type);
	void OnSkillCheckResponseAuthority(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, DBDSharedTypes_ESkillCheckCustomType Type);
	void OnSkillCheckResponseAestheticBP(class ADBDPlayer* Player, bool success, bool Bonus, bool hadInput, DBDSharedTypes_ESkillCheckCustomType Type);
	void OnSkillCheckResponseAesthetic(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, DBDSharedTypes_ESkillCheckCustomType Type);
	void OnInteractionCompletionStateChanged(class ADBDPlayer* Player, bool complete);
	bool HasSkillCheckHappened(class ADBDPlayer* Character);
	float GetTunableValue(const struct FName& TunableValueID, float defaultValue);
	float GetSuccessProbability();
	float GetSkillCheckProbability(class ADBDPlayer* interactingPlayer);
	float GetSkillCheckFailureTimePenalty();
	float GetSkillCheckFailurePercentPenalty(class ADBDPlayer* Player);
	float GetSkillCheckDifficulityModifier(class ADBDPlayer* Character);
	float GetSkillCheckCharge(class ADBDPlayer* Player, bool success, bool Bonus, DBDSharedTypes_ESkillCheckCustomType Type);
	int GetPipsPassed();
	float GetPerkMultiplier(class ADBDPlayer* Character);
	float GetMultiplicativeLuckBonus(class ADBDPlayer* Character);
	float GetMaxCharge();
	float GetItemEfficiencyModifier(class ADBDPlayer* Character);
	float GetInteractionChargeSpeedMultiplier(class ADBDPlayer* Character);
	float GetGoodSkillCheckSuccessPercentReward(class ADBDPlayer* Player);
	float GetChargeSpeedModifier(class ADBDPlayer* Character);
	float GetChargeAmountForTime(float DeltaSeconds, class ADBDPlayer* Character);
	class UChargeableComponent* GetChargeableComponent();
	float GetBonusSkillCheckZoneSizeModifier(class ADBDPlayer* Character);
	float GetBonusSkillCheckSuccessPercentReward(class ADBDPlayer* Player);
	float GetAdditiveLuckBonus(class ADBDPlayer* Character);
	float GetAdditiveChargeTimeReductionAsMultiplier(class ADBDPlayer* Character);
	void Authority_ChargeWithItem(float DeltaSeconds, class ACollectable* Item, class ADBDPlayer* Character);
	void Authority_AddCharge(float DeltaSeconds, class ADBDPlayer* Character);
};

// Class DeadByDaylight.Interactable
// 0x00F8 (FullSize[0x0328] - InheritedSize[0x0230])
class AInteractable : public AActor
{
public:
	unsigned char                                      UnknownData_7ZOL[0x60];                                    // 0x0230(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         _singleZone;                                               // 0x0290(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _useSingleZone;                                            // 0x0298(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VXH0[0x7];                                     // 0x0299(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UInteractor*>                         _interactors;                                              // 0x02A0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractableTransformOptimizer*             _transformOptimizer;                                       // 0x02B0(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NZQD[0x20];                                    // 0x02B8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UPrimitiveComponent*, struct FInteractionArray> _zoneToInteractions;                                       // 0x02D8(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Interactable");
		return ptr;
	}



	void SetSingleZone(class UPrimitiveComponent* zone);
	void SetInteractorsUsable(bool usable, class UInteractor* exception);
	void PreInterruptionEvent(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInterruptionDefinition* interruption);
	void OnLevelReadyToPlay_Native();
	void OnLevelReadyToPlay();
	void OnInteractorLockChanged(bool locked, class ADBDPlayer* interactingPlayer);
	bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInteractor* Interactor, class UInteractionDefinition* definition, class UInterruptionDefinition* interruption);
	bool IsInteractionDone(class ADBDPlayer* Player, class UInteractor* Interactor, class UInteractionDefinition* definition, DeadByDaylight_EInputInteractionType interactionType);
	bool IsInteractingWith(class ADBDPlayer* Player);
	bool HasAnOngoingInteraction();
	class ADBDPlayer* GetPlayerOwner();
	TArray<class UInteractor*> GetInteractors();
	TArray<class ADBDPlayer*> GetInteractingPlayersRaw();
	struct FVector GetFocalPointPosition(class ADBDPlayer* Player, class UInteractionDefinition* definition);
	void AuthorityRequestCancelOngoingInteractions(bool onlyOnHitCancelableInteractions);
	TArray<class ADBDPlayer*> Authority_GetInteractingPlayers();
	void AttachEveryInteractionToZone(class UPrimitiveComponent* zone);
};

// Class DeadByDaylight.OutlineUpdateStrategy
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UOutlineUpdateStrategy : public UActorComponent
{
public:
	class UDBDOutlineComponent*                        _outlineComponent;                                         // 0x00B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.QuestEventEvaluatorBase
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UQuestEventEvaluatorBase : public UObject
{
public:
	unsigned char                                      UnknownData_PYAS[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _dbdPlayer;                                                // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PI6P[0x18];                                    // 0x0058(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              _evaluatorConditionsClass;                                 // 0x0070(0x0010) (Edit, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UEvaluatorCondition*>                 _evaluatorConditions;                                      // 0x0080(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.QuestEventEvaluatorBase");
		return ptr;
	}



	void OnGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
};

// Class DeadByDaylight.EvaluatorCondition
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UEvaluatorCondition : public UObject
{
public:
	DeadByDaylight_EConditionSubject                   _conditionSubject;                                         // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NNJX[0x17];                                    // 0x0031(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EvaluatorCondition");
		return ptr;
	}



};

// Class DeadByDaylight.SpecialBehaviourInteractable
// 0x0008 (FullSize[0x0330] - InheritedSize[0x0328])
class ASpecialBehaviourInteractable : public AInteractable
{
public:
	TWeakObjectPtr<class ADBDPlayerState>              _specialBehaviourOwner;                                    // 0x0328(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SpecialBehaviourInteractable");
		return ptr;
	}



};

// Class DeadByDaylight.SourceBasedOutlineUpdateStrategy
// 0x0070 (FullSize[0x0130] - InheritedSize[0x00C0])
class USourceBasedOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _defaultColorForSurvivor;                                  // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _defaultColorForSlasher;                                   // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RF5U[0x50];                                    // 0x00E0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SourceBasedOutlineUpdateStrategy");
		return ptr;
	}



	void ResetReveal();
	void RemoveRevealSource(class UObject* Source);
	void ChangeDefaultColorForSurvivor(const struct FLinearColor& NewColor);
	void ChangeDefaultColorForSlasher(const struct FLinearColor& NewColor);
	void AddTimedReveal(class UObject* Source, const struct FLinearColor& HighlightColor, int Priority, TArray<class ADBDPlayer*> affectedCharacters, float Duration);
	void AddTimedAndRangedReveal(class UObject* Source, class AActor* sourceActor, const struct FLinearColor& HighlightColor, int Priority, TArray<class ADBDPlayer*> affectedCharacters, float Duration, float Range);
	void AddReveal(class UObject* Source, const struct FLinearColor& HighlightColor, int Priority, TArray<class ADBDPlayer*> affectedCharacters);
	void AddRangedReveal(class UObject* Source, class AActor* sourceActor, const struct FLinearColor& HighlightColor, int Priority, TArray<class ADBDPlayer*> affectedCharacters, float Range);
};

// Class DeadByDaylight.AbstractAnalyticsManager
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAbstractAnalyticsManager : public UGameInstanceSubsystem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AbstractAnalyticsManager");
		return ptr;
	}



};

// Class DeadByDaylight.ArmIKSensorComponent
// 0x0080 (FullSize[0x0138] - InheritedSize[0x00B8])
class UArmIKSensorComponent : public UActorComponent
{
public:
	class USkeletalMeshComponent*                      _mesh;                                                     // 0x00B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<DeadByDaylight_EArm, struct FArmIKSensorDatum> _arms;                                                     // 0x00C0(0x0050) (Edit, EditFixedSize, Protected, NativeAccessSpecifierProtected)
	float                                              _capsuleRadius;                                            // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _capsuleHalfHeight;                                        // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _traceLength;                                              // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X0W7[0x4];                                     // 0x011C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCameraComponent*                            _owningCamera;                                             // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RMBD[0x10];                                    // 0x0128(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArmIKSensorComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttack
// 0x02A8 (FullSize[0x0360] - InheritedSize[0x00B8])
class UDBDAttack : public UActorComponent
{
public:
	unsigned char                                      UnknownData_PIO8[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DBDSharedTypes_EAttackType                         _attackType;                                               // 0x00D0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _useMontage;                                               // 0x00D1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EDetectionZone                      _damageZone;                                               // 0x00D2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EDetectionZone                      _lockZone;                                                 // 0x00D3(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EDetectionZone                      _obstructionZone;                                          // 0x00D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5LJL[0x3];                                     // 0x00D5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FStatProperty                               _maxAccelerationMultiplier;                                // 0x00D8(0x0088) (Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDBDAttackTargetTracker                     _targetTracker;                                            // 0x0160(0x00B8) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<DBDSharedTypes_EAttackSubstate, class UClass*> _stateClasses;                                             // 0x0218(0x0050) (Edit, DisableEditOnInstance, Protected, UObjectWrapper, NativeAccessSpecifierProtected)
	TArray<class ACharacter*>                          _localAlreadyHitTargets;                                   // 0x0268(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X7EY[0x10];                                    // 0x0278(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<DBDSharedTypes_EAttackSubstate, class UDBDAttackSubstate*> _states;                                                   // 0x0288(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P1AD[0x20];                                    // 0x02D8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ADBDPlayer*>                          _hitTargets;                                               // 0x02F8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _targetsAwaitingServerValidation[0x50];                    // 0x0308(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_LDOB[0x4];                                     // 0x0358(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_EHitValidatorConfigName             _hitValidationConfigName;                                  // 0x035C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AHCR[0x3];                                     // 0x035D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAttack");
		return ptr;
	}



	void Server_RequestStateChange(DBDSharedTypes_EAttackSubstate State);
	void Server_HitTarget(class ADBDPlayer* Target, float TargetLocationTimestamp);
	void Server_HitAttackableComponent(class UAttackableComponent* AttackableComponent);
	void Server_ClearTargets();
	void Multicast_RequestStateChange(DBDSharedTypes_EAttackSubstate State);
	void Multicast_HitTarget(class ADBDPlayer* Target);
	void Multicast_HitAttackableComponent(class UAttackableComponent* AttackableComponent);
	void Multicast_ClearTargets();
	void Client_ReceiveHitResult(class ADBDPlayer* Target, bool IsValid);
	void Client_ReceiveAttackSubstateRequestResult(const struct FAttackSubstateRequestResult& Result);
};

// Class DeadByDaylight.DBDAttackSubstate
// 0x00E8 (FullSize[0x0118] - InheritedSize[0x0030])
class UDBDAttackSubstate : public UObject
{
public:
	struct FStatProperty                               _duration;                                                 // 0x0030(0x0088) (Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCurveFloat*                                 _speedCurve;                                               // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       _montage;                                                  // 0x00C0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6N1H[0x4];                                     // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _currentCurve;                                             // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TLYL[0x40];                                    // 0x00D8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAttackSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackOpenSubstate
// 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
class UDBDAttackOpenSubstate : public UDBDAttackSubstate
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAttackOpenSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackHittingSubstate
// 0x0088 (FullSize[0x01A0] - InheritedSize[0x0118])
class UDBDAttackHittingSubstate : public UDBDAttackSubstate
{
public:
	struct FStatProperty                               _hittingPercentDamageBegin;                                // 0x0118(0x0088) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAttackHittingSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackSuccessSubstate
// 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
class UDBDAttackSuccessSubstate : public UDBDAttackSubstate
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAttackSuccessSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackMissSubstate
// 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
class UDBDAttackMissSubstate : public UDBDAttackSubstate
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAttackMissSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackObstructSubstate
// 0x0000 (FullSize[0x0118] - InheritedSize[0x0118])
class UDBDAttackObstructSubstate : public UDBDAttackSubstate
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAttackObstructSubstate");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAIController
// 0x0298 (FullSize[0x05D8] - InheritedSize[0x0340])
class ADBDAIController : public AAIController
{
public:
	float                                              DefaultSightRange;                                         // 0x0340(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CloakedTargetSightRange;                                   // 0x0344(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<DeadByDaylight_EAIDifficultyLevel, int>       AIDifficultyMaxPlayerRanks;                                // 0x0348(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XE9D[0x10];                                    // 0x0398(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              RotateCameraOnStationaryWaitTime;                          // 0x03A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RotateCameraOnStationaryDegreePerSecond;                   // 0x03AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VITT[0x18];                                    // 0x03B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APawn*                                       _aiPawn;                                                   // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APawn*                                       _lastAiPawn;                                               // 0x03D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BWD7[0x8];                                     // 0x03D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UObject*, float>                        _contextualPathSpeedFactors;                               // 0x03E0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UObject*                                     _objOverridingDefaultNavigationFilter;                     // 0x0430(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _originalDefaultNavigationFilter;                          // 0x0438(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I2IG[0x18];                                    // 0x0440(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<DeadByDaylight_EPawnInputPressTypes, class UObject*> _inputLocks;                                               // 0x0458(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UObject*                                     _movementLock;                                             // 0x04A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KF2V[0x128];                                   // 0x04B0(0x0128) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAIController");
		return ptr;
	}



	void WiggleRequest(class UObject* Requester, float Input);
	void UseItemRequest(class UObject* Requester);
	void StruggleRequest(class UObject* Requester, float Input);
	bool SetCharacterMovement(DeadByDaylight_ECharacterMovementTypes movementTypes, class UObject* Requester);
	void Server_SetAIPlayerRank(int PlayerRank);
	void SecondAttackRequest(class UObject* Requester);
	void SecondaryActionRequest(class UObject* Requester);
	void InteractRequestRelease(class UObject* Requester);
	void InteractRequest(class UObject* Requester);
	void Gesture04Request(class UObject* Requester);
	void Gesture03Request(class UObject* Requester);
	void Gesture02Request(class UObject* Requester);
	void Gesture01Request(class UObject* Requester);
	void FastInteractRequest(class UObject* Requester);
	void EndUseItemRequest(class UObject* Requester);
	void EndSecondAttackRequest(class UObject* Requester);
	void EndInteractRequest(class UObject* Requester);
	void EndFastInteractRequest(class UObject* Requester);
	void EndDropItemRequest(class UObject* Requester);
	void EndActionRequest(class UObject* Requester);
	void DropItemRequest(class UObject* Requester);
	void AttackRequest(class UObject* Requester);
	void ActionRequest(class UObject* Requester);
};

// Class DeadByDaylight.DBDAIUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDAIUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAIUtilities");
		return ptr;
	}



	void STATIC_SetCanEverAffectNavigation(class UActorComponent* Component, bool affectNavigation);
	class UNavigationPath* STATIC_FindPathWithAgentRadiusToActorSynchronously(class UObject* WorldContextObject, const struct FVector& pathStart, class AActor* GoalActor, float AgentRadius, float tetherDistance, class AActor* pathfindingContext, class UClass* FilterClass);
	bool STATIC_DrawDebugAIPerception();
	bool STATIC_DrawDebugAINavigationFilter();
	bool STATIC_DrawDebugAINavigation();
};

// Class DeadByDaylight.GameplayModifierContainer
// 0x0128 (FullSize[0x0220] - InheritedSize[0x00F8])
class UGameplayModifierContainer : public UBaseModifierContainer
{
public:
	unsigned char                                      UnknownData_ACFV[0x90];                                    // 0x00F8(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FModifierTickableConditionReplicatedData    _tickableConditionsData;                                   // 0x0188(0x0018) (Net, Transient, RepNotify, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TArray<struct FName>                               _tags;                                                     // 0x01A0(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               UseApplyFunction;                                          // 0x01B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastStatusView;                                       // 0x01B1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6LLK[0x2];                                     // 0x01B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       StatusViewID;                                              // 0x01B4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _autoInitializeOnBeginPlay;                                // 0x01C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _canOptimizeTickActivation;                                // 0x01C1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1OCB[0x4E];                                    // 0x01C2(0x004E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _activationTimer;                                          // 0x0210(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_244Z[0x8];                                     // 0x0218(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameplayModifierContainer");
		return ptr;
	}



	void UpdateIsApplicable();
	void UnlistenToGameEvent(DeadByDaylight_EDBDScoreTypes EventType);
	void UnlistenToDispatcherGameEvent(const struct FGameplayTag& EventType);
	void UnlistenToAllGameEvents();
	void UnlistenToAllDispatcherGameEvents();
	void SetUseApplyFunction(bool Use);
	void SetModifierValue(const struct FGameplayTag& Type, float GameplayModifierValue);
	void SetFlag(const struct FGameplayTag& flag, bool flagValue);
	void RemoveModifier(const struct FGameplayTag& Type);
	void RemoveAllModifiers();
	void RemoveAllFlags();
	void OnRep_TickableConditionsData();
	void OnRep_ActivationTimer();
	void OnListenedGameEvent(DeadByDaylight_EDBDScoreTypes EventType, float amount, class AActor* Instigator, class AActor* Target);
	void OnLevelReadyToPlay();
	void OnInitialized_Internal();
	void OnInitialized();
	void OnGameplayEvent(DeadByDaylight_EDBDScoreTypes EventType, float amount, class AActor* Instigator, class AActor* Target);
	void OnGameEventDispatched(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void OnApplyEnd();
	void OnApplyBegin();
	void ListenToGameEvent(DeadByDaylight_EDBDScoreTypes EventType);
	void ListenToDispatcherGameEvent(const struct FGameplayTag& EventType);
	bool IsStatusViewActive();
	bool IsActivationTimerDone();
	bool IsActivationTimerActive();
	bool HasModifierOfType(const struct FGameplayTag& Type);
	bool HasFlag(const struct FGameplayTag& flag);
	float GetRemainingLifetime();
	float GetPercentageFill();
	class ADBDPlayer* GetOwningPlayer();
	class UGameplayModifierContainer* GetOriginatingEffect();
	float GetModifierValue(const struct FGameplayTag& Type);
	int GetLevelToDisplay();
	DeadByDaylight_EInventoryItemType GetInventoryItemType();
	int GetIconFilePathIndex();
	float GetActivationTimerRemainingTime();
	float GetActivationTimerPercentRemaining();
	float GetActivationTimerElapsedTimePercent();
	float GetActivationTimerElapsedTime();
	float GetActivationTimerDuration();
	void FireActiveStatusViewEvent(const struct FName& StatusViewID, const struct FName& uniqueSourceID, const struct FStatusViewSource& StatusViewSource);
	void Authority_TriggerActivationTimer(float activationTime);
	void Authority_SetActivationTimerPaused(bool paused);
	void Authority_InstantiateGameplayModifierConditions();
	void Authority_ClearActivationTimer();
	void Apply(float DeltaTime);
	class UBaseModifierCondition* AddCondition(class UClass* conditionType);
};

// Class DeadByDaylight.StatusEffect
// 0x0130 (FullSize[0x0350] - InheritedSize[0x0220])
class UStatusEffect : public UGameplayModifierContainer
{
public:
	unsigned char                                      UnknownData_99YB[0x48];                                    // 0x0220(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayModifierData                       ModifierData;                                              // 0x0268(0x0030) (Edit, Net, RepNotify, Protected, NativeAccessSpecifierProtected)
	bool                                               shouldDisplay;                                             // 0x0298(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z6HY[0x3];                                     // 0x0299(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              customParam;                                               // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _removeOnRemainingLifetimeEnded;                           // 0x02A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastAsStatusEffectWhenApplicable;                     // 0x02A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastAsStatusEffectByActivationTimer;                  // 0x02A2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastAsStatusEffectWhenLifeRemains;                    // 0x02A3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastAsStatusEffectByFunction;                         // 0x02A4(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastAsStatusEffectAlways;                             // 0x02A5(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BroadcastOriginatorGameEventNotificationWhenFirstApplicable; // 0x02A6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KI9E[0x1];                                     // 0x02A7(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FStatusEffectInitializationData             _statusInitializationData;                                 // 0x02A8(0x0028) (Net, Transient, RepNotify, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ER9M[0x38];                                    // 0x02D0(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _nonStackingEffects[0x10];                                 // 0x02D0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	unsigned char                                      UnknownData_8HRL[0x38];                                    // 0x0318(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StatusEffect");
		return ptr;
	}



	bool ShouldDisplayStatusEffectIcon();
	void SetStatusEffectIconPercentage(float value);
	void SetShouldDisplay(bool On);
	void OnShouldOriginatingPlayerChange();
	void OnShouldDisplayChanged(bool CurrentValue);
	void OnRep_StatusInitializationData();
	void OnRep_ShouldOriginatingPlayerChange();
	void OnRep_ShouldDisplay();
	void OnRep_ModifierData();
	void Multicast_SetRemainingLifetimeInitialized(bool remainingLifetimeInitialized);
	void Multicast_SetRemainingLifetime(float lifetime);
	bool IsOriginatorHooked();
	bool IsOriginatorAlive();
	bool IsKillerInOriginatorRange(float AdditiveRangeModifier);
	bool IsInOriginatorRange();
	void InitializeLifetime(float lifetime);
	DBDSharedTypes_EStatusEffectType GetStatusEffectType();
	float GetStatusEffectCooldownRate();
	bool GetShouldDisplay();
	class ADBDPlayer* GetOriginatingPlayer();
	float GetLifetimeDuration();
	float GetCustomParam();
	void FireActiveStatusEffectEvent(float Percentage, int levelToDisplay);
	void BroadcastOriginatorGameEventNotification();
	void BroadcastGameEventNotification(const struct FGameplayNotificationData& notificationData, bool addToHistory);
	void Authority_SetRemainingLifetime(float lifetime);
	void Authority_RemoveSelf();
	void Authority_OnOriginatingPlayerEndPlay(class AActor* Actor, TEnumAsByte<Engine_EEndPlayReason> EndPlayReason);
	void Authority_EndSelf();
};

// Class DeadByDaylight.Perk
// 0x01B0 (FullSize[0x03D0] - InheritedSize[0x0220])
class UPerk : public UGameplayModifierContainer
{
public:
	unsigned char                                      UnknownData_8KOS[0x60];                                    // 0x0220(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayModifierData                       PerkLevelData[0x3];                                        // 0x0280(0x0090) (Edit, Net, EditFixedSize, RepNotify, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_776N[0x30];                                    // 0x0310(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      PerkIconStrategyClass;                                     // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnTokenCountChangedBP;                                     // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_47GN[0x30];                                    // 0x0358(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isUsable;                                                 // 0x0388(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BroadcastWhenApplicable;                                   // 0x0389(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BroadcastOnTimer;                                          // 0x038A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BroadcastCooldownTimer;                                    // 0x038B(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BroadcastInactiveCooldownTimer;                            // 0x038C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BroadcastAlways;                                           // 0x038D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M2AW[0x2];                                     // 0x038E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBasePerkIconStrategy*                       _perkIconStrategy;                                         // 0x0390(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPerkInitializationData                     _perkInitializationData;                                   // 0x0398(0x0008) (Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PEN5[0x4];                                     // 0x03A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _tokenCount;                                               // 0x03A4(0x0004) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _maxTokenCount;                                            // 0x03A8(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YN9N[0x4];                                     // 0x03AC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _cooldownTimer;                                            // 0x03B0(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_57F8[0x8];                                     // 0x03B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _hudIconTimer;                                             // 0x03C0(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NSOV[0x8];                                     // 0x03C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Perk");
		return ptr;
	}



	void SetIsUsable(bool value);
	void OnRep_TokenCount(int oldCount);
	void OnRep_PerkLevelData();
	void OnRep_PerkInitializationData();
	void OnRep_IsUsable();
	void OnRep_CooldownTimer();
	bool IsHudIconTimerDone();
	bool IsCooldownTimerDone();
	int GetTokenCount();
	int GetPerkLevel();
	int GetMaxTokenCount();
	bool GetIsUsable();
	float GetHudIconTimerElapsedTimePercent();
	class UTimerObject* GetCooldownTimer();
	void FireActivePerkEvent(float Percentage, int chargeCount);
	void Authority_TriggerHudIconTimer(float Duration);
	void Authority_TriggerCooldownTimer(float coolddownTime);
	void Authority_SetTokenCount(int value);
	void Authority_SetMaxTokenCount(int value);
	void Authority_SetIsUsable(bool value);
	void Authority_IncrementToken();
	void Authority_DecrementToken();
};

// Class DeadByDaylight.TotemBoundPerk
// 0x0058 (FullSize[0x0428] - InheritedSize[0x03D0])
class UTotemBoundPerk : public UPerk
{
public:
	unsigned char                                      UnknownData_OIS5[0x18];                                    // 0x03D0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_ETotemState                         TotemBoundState;                                           // 0x03E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _doNotBindToTotemOnInit;                                   // 0x03E9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SLZK[0x6];                                     // 0x03EA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ATotem*>                              _boundTotems;                                              // 0x03F0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, RepNotify, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ATotem*>                              _local_boundTotems;                                        // 0x0400(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class ATotem*>                              _authorityPrevTotemActors;                                 // 0x0410(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _numTotemsToBind;                                          // 0x0420(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4XFE[0x4];                                     // 0x0424(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TotemBoundPerk");
		return ptr;
	}



	void OnRep_BoundTotems();
	TArray<class ATotem*> GetTotems();
	float GetDistanceToOwner(class AActor* OtherActor);
	TArray<class ATotem*> GetBoundTotems();
	void Authority_UnbindFromTotem(class ATotem* aTotemActor);
	bool Authority_BindToDullTotems(bool allowAdditionalBoundTotems);
};

// Class DeadByDaylight.GameplayModifierCondition
// 0x0000 (FullSize[0x00D0] - InheritedSize[0x00D0])
class UGameplayModifierCondition : public UBaseModifierCondition
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameplayModifierCondition");
		return ptr;
	}



	void SetOwningGameplayModifier(class UGameplayModifierContainer* OwningGameplayModifier);
	void OnOwningGameplayModifierSet();
	bool IsApplicable();
	class ADBDPlayer* GetOwningPlayer();
	class UGameplayModifierContainer* GetOwningGameplayModifier();
};

// Class DeadByDaylight.ItemModifier
// 0x0060 (FullSize[0x0280] - InheritedSize[0x0220])
class UItemModifier : public UGameplayModifierContainer
{
public:
	struct FGameplayModifierData                       ModifierData;                                              // 0x0220(0x0030) (Edit, Net, RepNotify, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2B1A[0x30];                                    // 0x0250(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ItemModifier");
		return ptr;
	}



	void OnRep_ModifierData();
	void HandleIncreaseMaxCharge();
	void HandleIncreaseItemCount();
	void HandleIncreaseCharge();
	float GetItemMaxEnergy();
	float GetItemEnergy();
	int GetItemCount();
	class ACollectable* GetBaseItem();
	void AuthoritySetItemMaxEnergy(float energy);
	void AuthoritySetItemEnergy(float energy);
	void AuthoritySetItemCount(int itemCount);
};

// Class DeadByDaylight.ItemAddon
// 0x0018 (FullSize[0x0298] - InheritedSize[0x0280])
class UItemAddon : public UItemModifier
{
public:
	class UClass*                                      BaseItemType;                                              // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _needsSetup;                                               // 0x0288(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FItemAddonInitializationData                _addonInitializationData;                                  // 0x0289(0x0002) (Net, Transient, RepNotify, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PTCD[0xD];                                     // 0x028B(0x000D) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ItemAddon");
		return ptr;
	}



	void SetUpAddon();
	void OnRep_AddonInitializationData();
	void OnPostItemAddonsCreation(class ADBDPlayer* Player, class ACollectable* Item);
	void Multicast_SetBaseItem(class ACollectable* baseItem);
	void Multicast_AddAddonToItem(class ACollectable* Item);
	bool IsSecondaryAction();
	bool IsReadyForSetUp();
	void DebugPrintStats();
	void Authority_OnCollectablePickedUp(class ADBDPlayer* Player);
	void Authority_OnCollectableDropped(class ADBDPlayer* Player);
	void Authority_ApplyMetaModifiers();
};

// Class DeadByDaylight.Collectable
// 0x01A0 (FullSize[0x04C8] - InheritedSize[0x0328])
class ACollectable : public AInteractable
{
public:
	unsigned char                                      UnknownData_LWCN[0x30];                                    // 0x0328(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               DisplayUsePercent;                                         // 0x0358(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EAtlantaItemProgressionBarEnum      ProgressBar;                                               // 0x0359(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               OverrideItemIndex;                                         // 0x035A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L3NV[0x1];                                     // 0x035B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                OverridenItemIndex;                                        // 0x035C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StrafeOnUse;                                               // 0x0360(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AimOnUse;                                                  // 0x0361(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               VisibleWhenEquipped;                                       // 0x0362(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StopRunningOnUse;                                          // 0x0363(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EItemHandPosition                   HandPosition;                                              // 0x0364(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DisableArmOverrideDuringInteractions;                      // 0x0365(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasUseInteraction;                                         // 0x0366(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_ECollectableCategory                Category;                                                  // 0x0367(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInUse;                                                   // 0x0368(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2L8A[0x3];                                     // 0x0369(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       ItemId;                                                    // 0x036C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FromPlayerSpawn;                                           // 0x0378(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6KWB[0x7];                                     // 0x0379(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UItemModifier*                               BaseItemModifier;                                          // 0x0380(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemModifier*                               ItemModifier1;                                             // 0x0388(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UItemModifier*                               ItemModifier2;                                             // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldRegisterToOnSurvivorAdded;                           // 0x0398(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QI1M[0x1F];                                    // 0x0399(0x001F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnCollectablePickedUpBP;                                   // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_T9EN[0x48];                                    // 0x03C8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               BeingCollected;                                            // 0x0410(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               BeingDropped;                                              // 0x0411(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _beingConsumedByEntity;                                    // 0x0412(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G1UT[0x5];                                     // 0x0413(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInteractor*                                 _itemInteractor;                                           // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USkeletalMeshComponent*                      _mesh;                                                     // 0x0420(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EInputInteractionType               _displayedInputType;                                       // 0x0428(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UWHM[0x7];                                     // 0x0429(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameplayTagContainerComponent*              _objectState;                                              // 0x0430(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_26SC[0x8];                                     // 0x0438(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _placementOrigin;                                          // 0x0440(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K1NR[0x10];                                    // 0x0448(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _collector;                                                // 0x0458(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                                  _firstCollector;                                           // 0x0460(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_ECollectableState                   _state;                                                    // 0x0468(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2OH2[0x7];                                     // 0x0469(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UItemAddon*>                          _itemAddons;                                               // 0x0470(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_25NP[0x10];                                    // 0x0480(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _itemCount;                                                // 0x0490(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AOFQ[0xC];                                     // 0x0494(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGuid                                       _begunPlayFenceName;                                       // 0x04A0(0x0010) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EAttachToSocketNameEnum             _attachToSocketName;                                       // 0x04B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EInventoryType                      _collectInInventoryType;                                   // 0x04B1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H3JG[0x2];                                     // 0x04B2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                _stateTagForCollector;                                     // 0x04B4(0x000C) (Edit, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DBDSharedTypes_ELoadoutItemType                    _itemType;                                                 // 0x04C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _discardWhenConsumed;                                      // 0x04C1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _disableAttachmentReplication;                             // 0x04C2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OQVC[0x5];                                     // 0x04C3(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Collectable");
		return ptr;
	}



	void SetVisibilityEvent(bool Visibility);
	void SetItemInteractor(class UInteractor* Interactor);
	void SetDisplayedInputType(DeadByDaylight_EInputInteractionType displayedInputType);
	void SetCount(int count);
	void Server_Discard();
	void OnUseReleased(class ADBDPlayer* collector);
	void OnUse();
	void OnRep_State();
	void OnRep_Collector();
	void OnRep_BegunPlayFenceName();
	void OnPostItemAddonsCreation(class ADBDPlayer* Player);
	void OnFenceInitialized();
	void OnDropped(class ADBDPlayer* droppingPlayer);
	void OnCustomizationChanged();
	void OnCollectorEndPlay(class AActor* Actor, TEnumAsByte<Engine_EEndPlayReason> EndPlayReason);
	void OnCollected(class ADBDPlayer* collector);
	void OnCollectablePickedUpBPDelegate__DelegateSignature(class ADBDPlayer* Player);
	void OnCollectablePickedUpBP__DelegateSignature(class ADBDPlayer* Player);
	void OnAddonsRemoved(TArray<class UItemAddon*> addons);
	void OnAddonsAdded(TArray<class UItemAddon*> addons);
	void OnActivateDissolveItem();
	void Multicast_UseReleased(class ADBDPlayer* collector);
	void Multicast_Use();
	void Multicast_RemoveItemAddon(class UItemAddon* addon);
	void Multicast_RemoveAllAddons();
	void Multicast_Dropped(class ADBDPlayer* droppedBy, const struct FVector& Location, const struct FRotator& Rotation);
	void Multicast_Collected(class ADBDPlayer* collector);
	void Local_Dropped_Location(class ADBDPlayer* droppedBy, const struct FVector& Location, const struct FRotator& Rotation);
	bool IsStored();
	bool IsRechargeable();
	bool IsPickable();
	bool IsOnGround();
	bool IsLocallyControlled();
	bool IsInSearchable();
	bool IsEquipped();
	bool IsCountDisplayForced();
	bool IsCollected();
	bool IsBeingUsed();
	bool HasGameplayModifierFlag(const struct FGameplayTag& modifierFlag);
	float GetUsePercentLeft();
	float GetModifierSum(const struct FGameplayTag& modifierType, float defaultValue);
	float GetModifierMax(const struct FGameplayTag& modifierType, float defaultValue);
	class UInteractor* GetItemInteractor();
	unsigned char GetItemIconIndex();
	TArray<class UItemAddon*> GetItemAddons();
	struct FString GetIconFilePath();
	DeadByDaylight_EInputInteractionType GetDisplayedInputType();
	int GetCount();
	class ADBDPlayer* GetCollector();
	void DebugPrintStats();
	bool CanUse();
	bool CanBeDropped(class ADBDPlayer* dropper);
	bool CanBeCollected(class ADBDPlayer* collector);
	void CallOnCollectablePickedUpBP(const struct FScriptDelegate& Callback);
	void BP_OnSurvivorAdded(class ACamperPlayer* survivor);
	void Authority_UseReleased();
	void Authority_Use();
	void Authority_RemoveItemAddon(class UItemAddon* addon);
	void Authority_OnConsumed(bool forceDiscard);
	void Authority_Discard();
	void Authority_AddItemAddon(class UItemAddon* addon);
};

// Class DeadByDaylight.UMGAtlEventItemWidget
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UUMGAtlEventItemWidget : public UMobileBaseUserWidget
{
public:
	class UImage*                                      SquareImageBackground;                                     // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      SquareRarityBackground;                                    // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      SquareIcon;                                                // 0x0310(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PortraitImageBackground;                                   // 0x0318(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PortraitRarityBackground;                                  // 0x0320(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PortraitIcon;                                              // 0x0328(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  NameText;                                                  // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  QuantityText;                                              // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                PortraitCanvas;                                            // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                SquareCanvas;                                              // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FEventItemsContentTypeUIData>        ContentTypeUIData;                                         // 0x0350(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlEventItemWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGBaseStorefrontWidget
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UUMGBaseStorefrontWidget : public UMobileBaseUserWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBaseStorefrontWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGBaseLandingPageStorefrontWidget
// 0x00F0 (FullSize[0x03F0] - InheritedSize[0x0300])
class UUMGBaseLandingPageStorefrontWidget : public UUMGBaseStorefrontWidget
{
public:
	class UHorizontalBox*                              BigButtonsSlot;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                SmallButtonsSlot1;                                         // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                SmallButtonsSlot2;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      SmallButtonClass[0x30];                                    // 0x0318(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      MediumButtonClass[0x30];                                   // 0x0348(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      BigButtonClass[0x30];                                      // 0x0378(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FLinearColor                                DisabledButtonColor;                                       // 0x03A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       DisabledButtonText;                                        // 0x03B8(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EULZ[0x10];                                    // 0x03D0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UUMGLandingPageButtonWidget*>         _landingPageTabs;                                          // 0x03E0(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBaseLandingPageStorefrontWidget");
		return ptr;
	}



	void HandleTabSelected(DeadByDaylight_EStorefrontState tabId);
};

// Class DeadByDaylight.UMGAtlLandingPageStorefrontWidget
// 0x0018 (FullSize[0x0408] - InheritedSize[0x03F0])
class UUMGAtlLandingPageStorefrontWidget : public UUMGBaseLandingPageStorefrontWidget
{
public:
	unsigned char                                      UnknownData_X5HK[0x10];                                    // 0x03F0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGBaseButtonWidget*                        AtlantaRedeemCodeBtn;                                      // 0x0400(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlLandingPageStorefrontWidget");
		return ptr;
	}



	void OnPromoCodeButtonPressed();
};

// Class DeadByDaylight.UMGBasePassStorefrontWidget
// 0x0038 (FullSize[0x0338] - InheritedSize[0x0300])
class UUMGBasePassStorefrontWidget : public UUMGBaseStorefrontWidget
{
public:
	class UUMGSubscriptionsPageScrollWidget*           SubscriptionsPageScroll;                                   // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JFV6[0x30];                                    // 0x0308(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBasePassStorefrontWidget");
		return ptr;
	}



	void HandleSubscriptionInfoButtonClickedEvent(const struct FString& subscriptionDetails);
	void HandleBuySubscriptionPackButtonClickedEvent(const struct FName& subscriptionPackID);
};

// Class DeadByDaylight.UMGAtlPassStorefrontWidget
// 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
class UUMGAtlPassStorefrontWidget : public UUMGBasePassStorefrontWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlPassStorefrontWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGBaseRootStorefrontWidget
// 0x00F0 (FullSize[0x03F0] - InheritedSize[0x0300])
class UUMGBaseRootStorefrontWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_ZRMH[0x48];                                    // 0x0300(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UNamedSlot*                                  StorePageSlot;                                             // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                        BackButton;                                                // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                                CurrencyButtonsPanel;                                      // 0x0358(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  StorefrontTitle;                                           // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7NLA[0x88];                                    // 0x0368(0x0088) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBaseRootStorefrontWidget");
		return ptr;
	}



	void OnPurchaseAuricCellButtonPressed();
	void OnCurrencyButtonLongPressed(const struct FTooltipPressedData& TooltipPressedData, DBDSharedTypes_ECurrencyType currencyType);
	void OnBackButtonPressed();
};

// Class DeadByDaylight.UMGAtlRootStorefrontWidget
// 0x0010 (FullSize[0x0400] - InheritedSize[0x03F0])
class UUMGAtlRootStorefrontWidget : public UUMGBaseRootStorefrontWidget
{
public:
	class UUMGCurrencyWidget*                          ShardWalletWidget;                                         // 0x03F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGAuricCellsButton*                        AuricWalletWidget;                                         // 0x03F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlRootStorefrontWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlStorePriceWidget
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGAtlStorePriceWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  PriceText;                                                 // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlStorePriceWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCurrencyWidget
// 0x0018 (FullSize[0x0448] - InheritedSize[0x0430])
class UUMGCurrencyWidget : public UUMGBaseButtonWidget
{
public:
	DBDSharedTypes_ECurrencyType                       currencyType;                                              // 0x0430(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7SUK[0x17];                                    // 0x0431(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCurrencyWidget");
		return ptr;
	}



	void HandleTooltipLongPressEvent();
};

// Class DeadByDaylight.UMGAuricCellsButton
// 0x0010 (FullSize[0x0458] - InheritedSize[0x0448])
class UUMGAuricCellsButton : public UUMGCurrencyWidget
{
public:
	class UImage*                                      PlusImage;                                                 // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K7ZF[0x8];                                     // 0x0450(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAuricCellsButton");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAuthentificationProviderListWidget
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGAuthentificationProviderListWidget : public UMobileBaseUserWidget
{
public:
	class UHorizontalBox*                              GuestButtonContainer;                                      // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAuthentificationProviderListWidget");
		return ptr;
	}



	void HideGuestButton();
};

// Class DeadByDaylight.UMGBankAndPlayerInfoWidget
// 0x00A8 (FullSize[0x03A8] - InheritedSize[0x0300])
class UUMGBankAndPlayerInfoWidget : public UMobileBaseUserWidget
{
public:
	class UUMGBankWidget*                              BankWidget;                                                // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  PlayerNameText;                                            // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSelectedCharacterWidget*                 SelectedCharacterWidget;                                   // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               RankWidgetVisibility;                                      // 0x0318(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S9M5[0x7];                                     // 0x0319(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGLevelBannerWidget*                       LevelBanner;                                               // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRankBanner*                              RankBanner;                                                // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGMainMenuMonthlyPassButton*               MonthlyPassButton;                                         // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3UJC[0x60];                                    // 0x0338(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    _onCancelPartyButtonClickedEvent;                          // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBankAndPlayerInfoWidget");
		return ptr;
	}



	void SetPlayerLevelBP(int Level, int devotion, int currentLevelXp, int totalLevelXp, bool IsSlasher, bool playUpdateAnim);
	void OnTooltipTriggeredByRankBanner(const struct FTooltipPressedData& TooltipPressedData);
	void OnTooltipTriggeredByLevelBannerWidget(const struct FTooltipPressedData& TooltipPressedData);
	void OnTooltipTriggeredByCurrency(const struct FTooltipPressedData& TooltipPressedData, DBDSharedTypes_ECurrencyType currencyType);
	void OnPurchaseAuricCellsButtonClicked();
	void OnPrestigeButtonClicked();
	void OnMainMenuSubscriptionClicked();
	void OnCancelPartyButtonClicked();
};

// Class DeadByDaylight.UMGBankWidget
// 0x0038 (FullSize[0x0338] - InheritedSize[0x0300])
class UUMGBankWidget : public UMobileBaseUserWidget
{
public:
	class UUMGCurrencyWidget*                          BloodPointsCurrency;                                       // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGAuricCellsButton*                        CellsButton;                                               // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCurrencyWidget*                          IridescentShardsCurrency;                                  // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WL22[0x20];                                    // 0x0318(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBankWidget");
		return ptr;
	}



	void OnPurchaseAuricCellsClicked();
	void OnCurrencyTooltipRequested(const struct FTooltipPressedData& TooltipPressedData, DBDSharedTypes_ECurrencyType currencyType);
};

// Class DeadByDaylight.UMGBaseAlertWidget
// 0x0030 (FullSize[0x0290] - InheritedSize[0x0260])
class UUMGBaseAlertWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_TO2K[0x30];                                    // 0x0260(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBaseAlertWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCustomizationItemPriceWidget
// 0x0100 (FullSize[0x0400] - InheritedSize[0x0300])
class UUMGCustomizationItemPriceWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  CurrencyValue;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DiscountPercentageContainer;                               // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DiscountPercentage;                                        // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CurrencyIcon;                                              // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      CurrencyTextures[0x50];                                    // 0x0320(0x0050) UNKNOWN PROPERTY: MapProperty
	struct FSlateColor                                 AffordableCurrencyTextColor;                               // 0x0370(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 AffordableSpecialCurrencyTextColor;                        // 0x0398(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 NonAffordableCurrencyTextColor;                            // 0x03C0(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FString                                     _itemId;                                                   // 0x03E8(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_ECurrencyType                       _currencyType;                                             // 0x03F8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _hasDiscountPercentage;                                    // 0x03F9(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4S8G[0x6];                                     // 0x03FA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCustomizationItemPriceWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCustomizationItemBuyButton
// 0x0088 (FullSize[0x0488] - InheritedSize[0x0400])
class UUMGCustomizationItemBuyButton : public UUMGCustomizationItemPriceWidget
{
public:
	unsigned char                                      UnknownData_X5YM[0x10];                                    // 0x0400(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      CurrencyColorStripe;                                       // 0x0410(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<DBDSharedTypes_ECurrencyType, struct FColor>  _currencyStripeColors;                                     // 0x0418(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                                _disabledOpacity;                                          // 0x0468(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _enabledOpacity;                                           // 0x0478(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCustomizationItemBuyButton");
		return ptr;
	}



	void BroadcastUnlockWithCurrency();
};

// Class DeadByDaylight.UMGCustomizationItemWidget
// 0x00A0 (FullSize[0x03A0] - InheritedSize[0x0300])
class UUMGCustomizationItemWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_1Z84[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      RarityBackground;                                          // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PaintOverlay;                                              // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      Icon;                                                      // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                NewIndicator;                                              // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                OutfitIndicator;                                           // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                PricesContainer;                                           // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ItemSelectedBorder;                                        // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                EquippedContainer;                                         // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _customizationItemPriceWidgetClass[0x30];                  // 0x0350(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<class UUMGCustomizationItemPriceWidget*>    _priceWidgets;                                             // 0x0380(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _itemIndex;                                                // 0x0390(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _itemId;                                                   // 0x0394(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCustomizationItemWidget");
		return ptr;
	}



	void BroadcastAvailableItemSelected();
};

// Class DeadByDaylight.UMGCustomizationPageScrollWidget
// 0x0068 (FullSize[0x04A0] - InheritedSize[0x0438])
class UUMGCustomizationPageScrollWidget : public UUMGGridPageScrollWidget
{
public:
	unsigned char                                      UnknownData_9ENV[0x10];                                    // 0x0438(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _customizationItemWidgetClass[0x30];                       // 0x0438(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FStoreItemSlotData>                  _availableItemsData;                                       // 0x0478(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGCustomizationItemWidget*>         _itemWidgets;                                              // 0x0488(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GUPP[0x8];                                     // 0x0498(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCustomizationPageScrollWidget");
		return ptr;
	}



	void OnAvailableItemSelectedCallback(int itemIndex);
};

// Class DeadByDaylight.UMGCustomizationScreenWidget
// 0x00B0 (FullSize[0x03B0] - InheritedSize[0x0300])
class UUMGCustomizationScreenWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_WQI0[0x30];                                    // 0x0300(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGCustomizationPageScrollWidget*           PageScrollWidget;                                          // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationCategoriesBar*              CustomizationCategoriesBar;                                // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CategoryLabel;                                             // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CurrentlyEquippedLabel;                                    // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                AvailableInOutfitsContainer;                               // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                UnlockItemContainer;                                       // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationItemWidget*                 OutfitItem;                                                // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                PriceContainer;                                            // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PriceButtonWidgetClass[0x30];                              // 0x0370(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_B7KR[0x4];                                     // 0x03A0(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _currentSelectedItem;                                      // 0x03A4(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCustomizationScreenWidget");
		return ptr;
	}



	void SetCategoryLabel(DeadByDaylight_ECustomizationCategory Category);
	void BroadcastUnlockWithCurrencyEvent(int currencyId, const struct FString& combinedItem);
	void BroadcastCustomizationCategoryButtonPressed(int categoryIndex);
	void BroadcastAvailableItemSelectedEvent(int itemIndex, const struct FStoreItemSlotData& SelectedItem, const struct FStoreItemSlotData& parentItem);
};

// Class DeadByDaylight.UMGCustomizationTooltipContentWidget
// 0x0030 (FullSize[0x0330] - InheritedSize[0x0300])
class UUMGCustomizationTooltipContentWidget : public UMobileBaseUserWidget
{
public:
	class UUMGHtmlRichText*                            ItemDescription;                                           // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationInfoWidget*                 OutfitInformation;                                         // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationInfoWidget*                 RoleInformation;                                           // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationInfoWidget*                 ReplacementInformation;                                    // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationItemPriceWidget*            AuricCellsPrice;                                           // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationItemPriceWidget*            IridescentShardsPrice;                                     // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCustomizationTooltipContentWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCustomizationTooltipHeaderWidget
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGCustomizationTooltipHeaderWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  Title;                                                     // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CollectionName;                                            // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CategoryAndRarityText;                                     // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCustomizationTooltipHeaderWidget");
		return ptr;
	}



	void SetOutfitComposition(bool IsUnbreakable, TArray<DeadByDaylight_ECustomizationCategory> composition);
};

// Class DeadByDaylight.UMGDailyRewardWidget
// 0x00A0 (FullSize[0x04D0] - InheritedSize[0x0430])
class UUMGDailyRewardWidget : public UUMGBaseButtonWidget
{
public:
	struct FScriptMulticastDelegate                    OnDailyRewardStateChanged;                                 // 0x0430(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	bool                                               IsMarkedSpecial;                                           // 0x0440(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EUMGDailyRewardWidgetState          State;                                                     // 0x0441(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UL7O[0x6];                                     // 0x0442(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  AmountText;                                                // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  ItemNameText;                                              // 0x0450(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  RewardNumberText;                                          // 0x0458(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             RewardTypeSwitcher;                                        // 0x0460(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ItemInfoPanel;                                             // 0x0468(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                OfferingInfoPanel;                                         // 0x0470(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                GenericInfoPanel;                                          // 0x0478(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                FreeTicketInfoPanel;                                       // 0x0480(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CrateKeyInfoPanel;                                         // 0x0488(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ItemIcon;                                                  // 0x0490(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      OfferingIcon;                                              // 0x0498(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      GenericRewardIcon;                                         // 0x04A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      FreeTicketRewardIcon;                                      // 0x04A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ParentItemIcon;                                            // 0x04B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CrateKeyRewardIcon;                                        // 0x04B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ParentItemPanel;                                           // 0x04C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U9BQ[0x8];                                     // 0x04C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGDailyRewardWidget");
		return ptr;
	}



	void StopIdleAnimationForState(DeadByDaylight_EUMGDailyRewardWidgetState inState);
	void SetStateVisuals(DeadByDaylight_EUMGDailyRewardWidgetState inState);
	void SetRarityColors(const struct FColor& BackgroundColor, const struct FColor& TintColor);
	void PlayIdleAnimationForState(DeadByDaylight_EUMGDailyRewardWidgetState inState);
	void HandleUnlockRewardAnimationFinished();
	void HandleUnlockMysteryRewardAnimationFinished();
	void HandleDiscoverRewardAnimationFinished();
	void HandleCollectRewardAnimationFinished();
	void HandleCollectButtonClick();
	void DiscoverMysteryReward();
	void CollectReward();
};

// Class DeadByDaylight.UMGDownloadProgressionWidget
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGDownloadProgressionWidget : public UMobileBaseUserWidget
{
public:
	class UProgressBar*                                ProgressBar;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DownloadPercentage;                                        // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DownloadDescription;                                       // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGDownloadProgressionWidget");
		return ptr;
	}



	void UpdateProgression(const struct FDownloadProgression& DownloadProgression);
};

// Class DeadByDaylight.UMGDragWidget
// 0x0020 (FullSize[0x0280] - InheritedSize[0x0260])
class UUMGDragWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_ZCJP[0x20];                                    // 0x0260(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGDragWidget");
		return ptr;
	}



	void SetClampToViewportDirty();
	TArray<class UCustomWidgetWrapper_HudEditor*> GetAllEditableWidgets();
};

// Class DeadByDaylight.UMGDragWidget_HudEditor
// 0x0060 (FullSize[0x02E0] - InheritedSize[0x0280])
class UUMGDragWidget_HudEditor : public UUMGDragWidget
{
public:
	unsigned char                                      UnknownData_03OE[0x20];                                    // 0x0280(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      OnSelectionWidgetClass;                                    // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DragLinkWidgetClass;                                       // 0x02A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomWidgetWrapper_HudEditor*              _customWrapper;                                            // 0x02B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 _selectionWidget;                                          // 0x02B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGHudEditorDragConstraintWidget*           _dragLinkWidget;                                           // 0x02C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGDragWidget_HudEditor*                    _parentLinkWidget;                                         // 0x02C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGDragWidget_HudEditor*                    _childLinkWidget;                                          // 0x02D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IJGI[0x8];                                     // 0x02D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGDragWidget_HudEditor");
		return ptr;
	}



	void SetOnSelection(bool IsSelected);
	class UCustomWidgetWrapper_HudEditor* GetCustomWrapper();
};

// Class DeadByDaylight.UMGEndGameCollapseProgressWidget
// 0x0040 (FullSize[0x0340] - InheritedSize[0x0300])
class UUMGEndGameCollapseProgressWidget : public UMobileBaseUserWidget
{
public:
	class UProgressBar*                                ProgressBar;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                MarkerLeftCanvas;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                MarkerRightCanvas;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBoxSlot*                          _markerLeftBox;                                            // 0x0318(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHorizontalBoxSlot*                          _markerRightBox;                                           // 0x0320(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KQLD[0x18];                                    // 0x0328(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGEndGameCollapseProgressWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGEndGameCollapseWidget
// 0x0080 (FullSize[0x0380] - InheritedSize[0x0300])
class UUMGEndGameCollapseWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_L2X1[0x8];                                     // 0x0300(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _progressBarInterpSpeed;                                   // 0x0308(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _slowMode;                                                 // 0x030C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U7I4[0x3];                                     // 0x030D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCanvasPanel*                                NormalBar;                                                 // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                SlowBar;                                                   // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGEndGameCollapseProgressWidget*           NormalProgressBar;                                         // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGEndGameCollapseProgressWidget*           SlowProgressBar;                                           // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U4R6[0x48];                                    // 0x0330(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGEndGameCollapseProgressWidget*           _topBar;                                                   // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGEndGameCollapseWidget");
		return ptr;
	}



	void PlayToZeroAnimation();
};

// Class DeadByDaylight.UMGFogWidget
// 0x0048 (FullSize[0x0348] - InheritedSize[0x0300])
class UUMGFogWidget : public UMobileBaseUserWidget
{
public:
	class UUMGBankAndPlayerInfoWidget*                 BankAndPlayerInfoWidget;                                   // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D106[0x40];                                    // 0x0308(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGFogWidget");
		return ptr;
	}



	void OnRankTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData);
	void OnLevelTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData);
	void OnCurrencyTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData, DBDSharedTypes_ECurrencyType currencyType);
	void HandleOnSettingButtonClick();
};

// Class DeadByDaylight.UMGGameModeSelector
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class UUMGGameModeSelector : public UUserWidget
{
public:
	unsigned char                                      UnknownData_UUG5[0x10];                                    // 0x0260(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGGameModeSelector");
		return ptr;
	}



	void SetGameplayMode(DeadByDaylight_EGameplayMode Mode);
	void SetActiveGameplayMode(DeadByDaylight_EGameplayMode Mode, bool visible);
};

// Class DeadByDaylight.UMGGameplayAlertWidget
// 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
class UUMGGameplayAlertWidget : public UUMGBaseAlertWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGGameplayAlertWidget");
		return ptr;
	}



	void UpdateWidget(const struct FStatusEffectSlotData& statusEffectData, const struct FInventorySlotData& originatorData);
};

// Class DeadByDaylight.UMGGhostfaceSpecific
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGGhostfaceSpecific : public UMobileBaseUserWidget
{
public:
	class UImage*                                      LeftLeanImage;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      RightLeanImage;                                            // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGGhostfaceSpecific");
		return ptr;
	}



};

// Class DeadByDaylight.UMGHtmlRichText
// 0x0000 (FullSize[0x06C8] - InheritedSize[0x06C8])
class UUMGHtmlRichText : public URichTextBlock
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGHtmlRichText");
		return ptr;
	}



	void SetHTMLText(const struct FString& InText);
};

// Class DeadByDaylight.UMGHtmlTextDecorator
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UUMGHtmlTextDecorator : public URichTextBlockDecorator
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGHtmlTextDecorator");
		return ptr;
	}



};

// Class DeadByDaylight.UMGHudEditorDragConstraintWidget
// 0x0040 (FullSize[0x02A0] - InheritedSize[0x0260])
class UUMGHudEditorDragConstraintWidget : public UUserWidget
{
public:
	class USizeBox*                                    LinkSizeBox;                                               // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 _childWidget;                                              // 0x0268(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUserWidget*                                 _parentWidget;                                             // 0x0270(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CNF7[0x28];                                    // 0x0278(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGHudEditorDragConstraintWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGHudEditorLayoutScreen
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class UUMGHudEditorLayoutScreen : public UUserWidget
{
public:
	TArray<class UUMGDragWidget_HudEditor*>            _editableWidgets;                                          // 0x0260(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGHudEditorLayoutScreen");
		return ptr;
	}



};

// Class DeadByDaylight.UMGHudEditorLayoutWidget
// 0x0078 (FullSize[0x02F8] - InheritedSize[0x0280])
class UUMGHudEditorLayoutWidget : public UUMGDragWidget
{
public:
	unsigned char                                      UnknownData_PQGP[0x10];                                    // 0x0280(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGHudEditorScreen*                         hudEditorScreen;                                           // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAkAudioEvent*                               _onSaveOverlapSound;                                       // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGDragWidget_HudEditor*                    _currentWidgetToEdit;                                      // 0x02A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UUMGHudEditorLayoutScreen*, bool>       _isSaveDirtyMap;                                           // 0x02A8(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGHudEditorLayoutWidget");
		return ptr;
	}



	void ShowSurvivorLayout();
	void ShowKillerLayout();
	void SetWidgetToEdit(class UUMGDragWidget_HudEditor* Widget);
	void SetSaveOverlapSound(class UAkAudioEvent* onSaveOverlapSound);
	void SetHudEditorScreen(class UUMGHudEditorScreen* hudEditorScreen);
	void SaveLayout();
	void ResetLayout();
	void OnSaveDirty(bool IsDirty);
	class UCustomWidgetWrapper_HudEditor* GetHudEditorWrapperToEdit();
	class UUMGDragWidget_HudEditor* GetCurrentDragWidget();
	void FlipLayout();
	void FlagSaveAsDirty();
};

// Class DeadByDaylight.UMGHudEditorScreen
// 0x0070 (FullSize[0x02D0] - InheritedSize[0x0260])
class UUMGHudEditorScreen : public UUserWidget
{
public:
	class UUMGHudEditorLayoutWidget*                   _hudEditorLayoutWidget;                                    // 0x0260(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGHudEditorVersionWidget*                  _versionSwapWidget;                                        // 0x0268(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<DBDSharedTypes_EPlayerRole, class UUMGHudEditorLayoutScreen*> _storedLayoutScreens;                                      // 0x0270(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UUMGHudEditorLayoutScreen*                   _currentLayoutScreen;                                      // 0x02C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _onDropOverlapSound;                                       // 0x02C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGHudEditorScreen");
		return ptr;
	}



	void ShowHudLayout(DBDSharedTypes_EPlayerRole Role);
	void SetWidgets(class UUMGHudEditorLayoutWidget* hudEditorLayoutWidget, class UUMGHudEditorVersionWidget* versionSwapWidget);
	void SetEditorDropErrorOverlapSound(class UAkAudioEvent* onDropOverlapSound);
	void RegisterEditorLayoutScreen(DBDSharedTypes_EPlayerRole Role, class UUMGHudEditorLayoutScreen* screen);
	void Quit();
	class UUMGHudEditorVersionWidget* GetVersionSwapWidget();
};

// Class DeadByDaylight.UMGHudEditorVersionWidget
// 0x0028 (FullSize[0x0288] - InheritedSize[0x0260])
class UUMGHudEditorVersionWidget : public UUserWidget
{
public:
	class UButton*                                     VersionButton;                                             // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGDragWidget_HudEditor*                    _onEditWidget;                                             // 0x0268(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PW43[0x18];                                    // 0x0270(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGHudEditorVersionWidget");
		return ptr;
	}



	void Show();
	void OnButtonClick();
	void Hide();
};

// Class DeadByDaylight.UMGInboxMessageEntryWidget
// 0x0068 (FullSize[0x02C8] - InheritedSize[0x0260])
class UUMGInboxMessageEntryWidget : public UUserWidget
{
public:
	struct FInboxMessageUIData                         _messageData;                                              // 0x0260(0x0060) (BlueprintVisible, ExposeOnSpawn, NativeAccessSpecifierPublic)
	bool                                               _isCurrentSelection;                                       // 0x02C0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BWM5[0x7];                                     // 0x02C1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGInboxMessageEntryWidget");
		return ptr;
	}



	void UpdateMessageData(const struct FInboxMessageUIData& messageData);
	void SetMessageData(const struct FInboxMessageUIData& messageData);
	struct FInboxMessageElapsedTime GetElapsedTime();
};

// Class DeadByDaylight.UMGInboxScreen
// 0x00A8 (FullSize[0x03A8] - InheritedSize[0x0300])
class UUMGInboxScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_1MNO[0xA8];                                    // 0x0300(0x00A8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGInboxScreen");
		return ptr;
	}



	void UpdateMessagesCount(DeadByDaylight_EInboxMessageUIType MessageType, int unclaimedCount, int unreadCount, int totalCount);
	void UpdateMessage(const struct FInboxMessageUIData& Message);
	void SetSocialMessages(TArray<struct FInboxMessageUIData> messages, int unreadCount, int totalCount);
	void SetRewardsMessages(TArray<struct FInboxMessageUIData> messages, int unclaimedCount, int unreadCount, int totalCount);
	void SetNewsMessages(TArray<struct FInboxMessageUIData> messages, int unreadCount, int totalCount);
	bool RemoveMessageFromPanel(class UPanelWidget* containingPanel, const struct FString& MessageId, bool hasSeparator);
	void RemoveMessage(const struct FString& MessageId);
	void ReadMessageEvent(const struct FString& MessageId);
	void ReadAllMessagesEvent(DeadByDaylight_EInboxMessageUIType MessageType);
	int FindWidgetIndexByMessageId(class UPanelWidget* containingPanel, const struct FString& MessageId);
	class UUMGInboxMessageEntryWidget* FindMessageWidgetById(class UPanelWidget* containingPanel, const struct FString& MessageId);
	void CleanMessageEvent(const struct FString& MessageId);
	void CleanAllMessagesEvent(DeadByDaylight_EInboxMessageUIType MessageType);
	void ClaimMessageEvent(const struct FString& MessageId);
	void ClaimAllMessagesEvent(DeadByDaylight_EInboxMessageUIType MessageType);
	void ButtonClickEvent(DeadByDaylight_EInboxScreenButton buttonID);
};

// Class DeadByDaylight.UmgPlayerHud
// 0x02C8 (FullSize[0x0528] - InheritedSize[0x0260])
class UUmgPlayerHud : public UUserWidget
{
public:
	class UCanvasPanel*                                GameStartingPanel;                                         // 0x0260(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                InGamePanel;                                               // 0x0268(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAtlantaSkillCheckWidget*                    SkillCheckWidget;                                          // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGMapThemeWidget*                          MapThemeWidget;                                            // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGAlertsWidget*                            AtlantaAlertsWidget;                                       // 0x0280(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGObjectivesWidget*                        AtlantaObjectivesWidget;                                   // 0x0288(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPerkHudWidget*                              AtlantaPerksWidget;                                        // 0x0290(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPerkActionButton*                           ActivablePerkActionButton;                                 // 0x0298(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGStatusEffectsWidget*                     AtlantaStatusEffectsWidget;                                // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGChargeableInteractionWidget*             AtlantaInteractionWidget;                                  // 0x02A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAtlantaPromptWidget*                        AtlantaPromptWidget;                                       // 0x02B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAtlantaPromptWidget*                        AtlantaTutorialPromptWidget;                               // 0x02B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGPlayersStatusWidget*                     AtlantaPlayersStatusWidget;                                // 0x02C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UVerticalBox*                                AtlantaObjectivesContainer;                                // 0x02C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActionButton*                               ActionButton;                                              // 0x02D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                ActionButtonContainer;                                     // 0x02D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPerkSoundHudWidget*                         PerkSoundHudWidget;                                        // 0x02E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMobileBaseUserWidget*                       CenterInteractionButton;                                   // 0x02E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                CenterInteractionContainer;                                // 0x02F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                CancelButtonContainer;                                     // 0x02F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGEndGameCollapseWidget*                   EndGameCollapseWidget;                                     // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPerkClickedEvent;                                        // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialLeaveClickedEvent;                               // 0x0318(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTutorialNextClickedEvent;                                // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSettingsClickedEvent;                                    // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class ADBDPlayerController*                        LocalController;                                           // 0x0348(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAtlantaHudDirectionalStick*                 AtlantaDirectionalStick;                                   // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                AtlantaDirectionalStickContainer;                          // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADBDPlayer*                                  _localPlayer;                                              // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OZ2S[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 _unlockedVirtualJoystickThumbImage;                        // 0x0370(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 _lockedVirtualJoystickThumbImage;                          // 0x0400(0x0090) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M9P7[0x98];                                    // 0x0490(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UmgPlayerHud");
		return ptr;
	}



	void TutorialTallyNextSelected();
	void TutorialTallyLeaveSelected();
	void SetVirtualJoystickThumbImage(bool locked);
	void OnSettingsButtonPressed();
	void OnPerkClicked(const struct FName& perkId, bool clickedOnPerksWidget);
	void OnInteractionStarted(class UInteractionDefinition* Interaction);
	void OnInteractionEnded(class UInteractionDefinition* Interaction);
	void OnInitializeHUD();
	bool IsInteractionAvailable(DeadByDaylight_EInputInteractionType interactionType);
	bool IsInteractionAllowed(class UInteractionDefinition* Interaction);
	bool IsInitialized();
	struct FSlateBrush GetInteractionIconByType(DeadByDaylight_EInputInteractionType interactionInputType);
	class UInteractionDefinition* GetCurrentOrAvailableInteractionOfType(DeadByDaylight_EInputInteractionType interactionInputType);
};

// Class DeadByDaylight.UmgPlayableHud
// 0x0000 (FullSize[0x0528] - InheritedSize[0x0528])
class UUmgPlayableHud : public UUmgPlayerHud
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UmgPlayableHud");
		return ptr;
	}



};

// Class DeadByDaylight.UmgKillerHud
// 0x0288 (FullSize[0x07B0] - InheritedSize[0x0528])
class UUmgKillerHud : public UUmgPlayableHud
{
public:
	class UPowerButton*                                PowerButton;                                               // 0x0528(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                PowerButtonContainer;                                      // 0x0530(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPowerButton*                                SecondAbilityButton;                                       // 0x0538(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                SecondAbilityButtonContainer;                              // 0x0540(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActionButton*                               AttackButton;                                              // 0x0548(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                AttackButtonContainer;                                     // 0x0550(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UActionButton*                               DropSurvivorButton;                                        // 0x0558(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                DropSurvivorButtonContainer;                               // 0x0560(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMobileBaseUserWidget*                       CancelButton;                                              // 0x0568(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGGhostfaceSpecific*                       GhostfaceSpecific;                                         // 0x0570(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                SecondAttackButtonContainer;                               // 0x0578(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAtlantaHudPowerAttackJoystick*              HudPowerAttackJoystick;                                    // 0x0580(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class ASlasherPlayer*                              killer;                                                    // 0x0588(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XNRB[0x8];                                     // 0x0590(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isCancelButtonPressed;                                    // 0x0598(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isAttackButtonPressed;                                    // 0x0599(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isAttackJoystickActivated;                                // 0x059A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isPowerAttackJoystickActivated;                           // 0x059B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V7MR[0x4];                                     // 0x059C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 _powerAttackJoystickBackgroundImage;                       // 0x05A0(0x0090) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 _DefaultAttackJoystickIconPressedImage;                    // 0x0630(0x0090) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 _DefaultAttackJoystickIconUnpressedImage;                  // 0x06C0(0x0090) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FVector2D                                   _powerAttackJoystickThumbPressedSize;                      // 0x0750(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   _powerAttackJoystickThumbUnpressedSize;                    // 0x0758(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F8F0[0x50];                                    // 0x0760(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UmgKillerHud");
		return ptr;
	}



	void UpdatePowerButtonTier(int previousTier, int currentTier, bool IsFirstTime);
	bool ShouldShowInteractionHighlight(DeadByDaylight_EInputInteractionType interactionType);
	void SetPowerIconFromItem(class ACollectable* Item, DeadByDaylight_EInventoryType inventoryType);
	void SetPowerAttackJoystickThumbImage(bool Pressed);
	void SetPowerAttackJoystickPosition(struct FVector2D* Position);
	void RespondToVirtualJoystickPressChanged(int controlIndex, bool Pressed);
	void OnSecondAbilityButtonPressed();
	void OnSecondAbilityButtonLongPressed();
	void OnPowerButtonReleased();
	void OnPowerButtonPressed();
	void OnCancelButtonReleased();
	void OnCancelButtonPressed();
	void OnAttackButtonReleased();
	void OnAttackButtonPressed();
	void OnActionButtonReleased();
	void OnActionButtonPressed();
	bool IsPowerButtonAvailable();
	bool IsCancelPowerButtonAvailable();
	bool IsAttackButtonVisible();
	void InitializePowerAttackJoystickPosition();
	void HandleOnAttackButtonReleased();
	void HandleOnAttackButtonPressed();
	class UInteractionDefinition* GetCurrentPowerUseInteraction();
};

// Class DeadByDaylight.UMGLacerationStatusEffectUI
// 0x0080 (FullSize[0x0380] - InheritedSize[0x0300])
class UUMGLacerationStatusEffectUI : public UMobileBaseUserWidget
{
public:
	class UImage*                                      LacerationDecoration;                                      // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      LacerationFill;                                            // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int>                                        _maximumLacerationDefinitions;                             // 0x0310(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UPaperSprite*>                        _lacerationDecorationImages;                               // 0x0320(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTexture2D*>                          _lacerationFillImages;                                     // 0x0330(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _lacerationDefaultColor;                                   // 0x0340(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _lacerationFillFullColor;                                  // 0x0350(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       _glassShatterDisintigrateAnimationName;                    // 0x0360(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_03CI[0x14];                                    // 0x036C(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLacerationStatusEffectUI");
		return ptr;
	}



	void OnFinishedBoomAnimation();
};

// Class DeadByDaylight.UMGLandingPageButtonWidget
// 0x0050 (FullSize[0x0480] - InheritedSize[0x0430])
class UUMGLandingPageButtonWidget : public UUMGBaseButtonWidget
{
public:
	class UCanvasPanel*                                BigTag;                                                    // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                SmallTag;                                                  // 0x0438(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TagText;                                                   // 0x0440(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              BannerTitleText;                                           // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      BannerImage;                                               // 0x0450(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      TitleColorBg;                                              // 0x0458(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      BorderColor;                                               // 0x0460(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OHWC[0x18];                                    // 0x0468(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLandingPageButtonWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGLevelBannerWidget
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UUMGLevelBannerWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_W87H[0x8];                                     // 0x0300(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UButton*                                     TooltipButton;                                             // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  PlayerLevelText;                                           // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  PlayerDevotionText;                                        // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  PlayerCurrentExperienceText;                               // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  PlayerNextLevelExperienceText;                             // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                                XPProgressBar;                                             // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              XPTextContainer;                                           // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               OnLongPressSound;                                          // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      TooltipHighlightPicture;                                   // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1OBQ[0x10];                                    // 0x0350(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLevelBannerWidget");
		return ptr;
	}



	void StopHighlight();
	void StartHighlight();
	void SetProgressbarValue(float Progress);
	void SetInfoBP(int PlayerLevel, int PlayerPrestige, int CurrentExperience, int NextLevelExperience);
	void SetInfo(int PlayerLevel, int PlayerPrestige, int CurrentExperience, int NextLevelExperience);
	void SetExperienceVisibilityBP(bool isExperienceVisible, bool isBig);
	void OnTooltipButtonLongPressEvent();
};

// Class DeadByDaylight.UMGLoadingScreenWidget
// 0x0030 (FullSize[0x0330] - InheritedSize[0x0300])
class UUMGLoadingScreenWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  Description;                                               // 0x0300(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      HintIcon;                                                  // 0x0308(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                                LoadingBar;                                                // 0x0310(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                                KillerPanel;                                               // 0x0318(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                                SurvivorPanel;                                             // 0x0320(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Title;                                                     // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLoadingScreenWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGLoadoutBaseWidget
// 0x0058 (FullSize[0x0358] - InheritedSize[0x0300])
class UUMGLoadoutBaseWidget : public UMobileBaseUserWidget
{
public:
	class UUMGLoadoutItemButton*                       ItemOrPowerButton;                                         // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       AddonFirstButton;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       AddonSecondButton;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       OfferingButton;                                            // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       PerkFirstButton;                                           // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       PerkSecondButton;                                          // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       PerkThirdButton;                                           // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutItemButton*                       PerkFourthButton;                                          // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGLoadoutItemButton*>               LoadoutItemButtons;                                        // 0x0340(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               usingMatchRules;                                           // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               perkSlotsLockedByAdmin;                                    // 0x0351(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsSlasher;                                                 // 0x0352(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7QMY[0x5];                                     // 0x0353(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLoadoutBaseWidget");
		return ptr;
	}



	void SetLoadoutData(TArray<struct FInventorySlotData> loadoutData, bool usingMatchRules, bool perkSlotsLockedByAdmin, DeadByDaylight_ELoadoutSlot LoadoutSlot, bool IsSlasher, bool isClickable);
	void SetIsSelectedLoadoutItemButton(DeadByDaylight_ELoadoutSlot LoadoutSlot);
	void SetDividerImageColor(const struct FLinearColor& Color);
};

// Class DeadByDaylight.UMGLoadoutFilterButton
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGLoadoutFilterButton : public UMobileBaseUserWidget
{
public:
	class UButton*                                     ActionButton;                                              // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLoadoutFilterButtonClicked;                              // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7SYI[0x10];                                    // 0x0318(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLoadoutFilterButton");
		return ptr;
	}



	void SetIsSelected(bool IsSelected);
	void SetIcon();
	void OnActionButtonClick();
	void InitFilterButton(const struct FName& filterName);
};

// Class DeadByDaylight.UMGLoadoutFilterWidget
// 0x0078 (FullSize[0x0378] - InheritedSize[0x0300])
class UUMGLoadoutFilterWidget : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnLoadoutFilterClicked;                                    // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      AtlantaLoadoutFilterButtonClass[0x30];                     // 0x0310(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UHorizontalBox*                              FilterContainerBox;                                        // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FName>                               Filters;                                                   // 0x0348(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGLoadoutFilterButton*>             FilterButtons;                                             // 0x0358(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutFilterButton*                     SelectedFilterButton;                                      // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LKLA[0x8];                                     // 0x0370(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLoadoutFilterWidget");
		return ptr;
	}



	void OnFilterButtonClicked(const struct FName& filterName);
	void InitFilterWidget();
	void ClearSelectedFilter();
};

// Class DeadByDaylight.UMGLoadoutPageScrollWidget
// 0x0110 (FullSize[0x0540] - InheritedSize[0x0430])
class UUMGLoadoutPageScrollWidget : public UUMGPageScrollWidget
{
public:
	bool                                               ShouldResizeWidget;                                        // 0x0430(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MV6G[0x7];                                     // 0x0431(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _itemWidgetClass[0x30];                                    // 0x0431(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	DeadByDaylight_EInventoryGridFormat                _gridFormat;                                               // 0x0468(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FE2Q[0x7];                                     // 0x0469(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FInventorySlotData>                  _inventoryData;                                            // 0x0470(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<int>                                        _inventorySelectedItemIndexes;                             // 0x0480(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     _subtitle;                                                 // 0x0490(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HVQ7[0xA0];                                    // 0x04A0(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLoadoutPageScrollWidget");
		return ptr;
	}



	void SetItemWidgetClass();
	void SetItemIsSelected(int Index, bool IsSelected);
	void SetInventoryData(DeadByDaylight_EInventoryGridFormat gridFormat, TArray<struct FInventorySlotData> InventoryData, TArray<int> selectedItemsIndexes, const struct FString& trackingItemName, const struct FString& subtitle);
	void HandleItemClicked(const struct FName& ItemId);
};

// Class DeadByDaylight.UMGLoadoutWidget
// 0x0068 (FullSize[0x03C0] - InheritedSize[0x0358])
class UUMGLoadoutWidget : public UUMGLoadoutBaseWidget
{
public:
	struct FText                                       InventoryItemTypeText;                                     // 0x0358(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       InventoryFilterText;                                       // 0x0370(0x0018) (BlueprintVisible, Transient, NativeAccessSpecifierPublic)
	class UUMGLoadoutPageScrollWidget*                 PageScrollWidget;                                          // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       LoadoutTitleText;                                          // 0x0390(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       InventoryPanelTitleText;                                   // 0x03A8(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLoadoutWidget");
		return ptr;
	}



	void SetInventoryData(DeadByDaylight_EInventoryGridFormat gridFormat, TArray<struct FInventorySlotData> InventoryData, TArray<int> selectedItemsIndexes, const struct FString& trackingItemName, const struct FString& subtitle);
};

// Class DeadByDaylight.UMGLobbyJoinedWidget
// 0x0080 (FullSize[0x0380] - InheritedSize[0x0300])
class UUMGLobbyJoinedWidget : public UMobileBaseUserWidget
{
public:
	bool                                               LocalPlayerIsSlasher;                                      // 0x0300(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CVB0[0x7];                                     // 0x0301(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       TextLeaveLobby;                                            // 0x0308(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       TextPlayerNotReadyYet;                                     // 0x0320(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       TextWaitingPlayers;                                        // 0x0338(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       TextToBeReady;                                             // 0x0350(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              CommandButtonsContainer;                                   // 0x0368(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_42CS[0x10];                                    // 0x0370(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLobbyJoinedWidget");
		return ptr;
	}



	void UpdatePlayersLatency(TMap<int, float> playersLatency, bool isHost);
	void SetWidgetsVisibility(bool widgetsVisibilty);
	void SetReadyStatus(TArray<struct FPlayerReadyStatusData> playersReadyStatusData);
	void SetLocalPlayerInfo(const struct FPlayerInfoData& PlayerInfoData);
	void SetLobbyTimer(int Seconds);
	void SetLoadoutDataForLocalPlayer(TArray<struct FInventorySlotData> loadoutData, bool usingMatchRules, bool perkSlotsLockedByAdmin, bool IsSlasher);
	void RemovePlayersInfo(int playerID);
	void HandleLeaveButtonClicked();
	void AddPlayerInfo(int playerID, const struct FPlayerInfoData& PlayerInfoData, bool IsPlayerReady, TArray<struct FInventorySlotData> loadoutData);
};

// Class DeadByDaylight.UMGLobbyOfferingItemWidget
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UUMGLobbyOfferingItemWidget : public UMobileBaseUserWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLobbyOfferingItemWidget");
		return ptr;
	}



	void SetOfferingData(const struct FInventorySlotData& Data);
	void HideOfferingItem();
	void GetOfferingIcons();
};

// Class DeadByDaylight.UMGLobbyOfferingWidget
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UUMGLobbyOfferingWidget : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                CanvasOffering;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LobbyOfferingItemClass[0x30];                              // 0x0308(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_305J[0x28];                                    // 0x0338(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLobbyOfferingWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGLobbyScreen
// 0x0048 (FullSize[0x0348] - InheritedSize[0x0300])
class UUMGLobbyScreen : public UMobileBaseUserWidget
{
public:
	class UUMGLobbySearchingWidget*                    LobbySearchingWidget;                                      // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnJoinedLobbyLeaved;                                       // 0x0308(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSearchingLobbyCancelled;                                 // 0x0318(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                             LobbySwitcher;                                             // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLobbyJoinedWidget*                       LobbyJoinedWidget;                                         // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLobbyOfferingWidget*                     OfferingWidget;                                            // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFogWidget*                               FogWidget;                                                 // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLobbyScreen");
		return ptr;
	}



	void HandleSearchingLobbyCancel();
	void HandleJoinedLobbyLeave();
};

// Class DeadByDaylight.UMGLobbySearchingWidget
// 0x00E8 (FullSize[0x0440] - InheritedSize[0x0358])
class UUMGLobbySearchingWidget : public UUMGLoadoutBaseWidget
{
public:
	class UUMGBankAndPlayerInfoWidget*                 BankAndPlayerInfoWidget;                                   // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       ItemOrPowerText;                                           // 0x0360(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       AddonText;                                                 // 0x0378(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       OfferingText;                                              // 0x0390(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       PerksText;                                                 // 0x03A8(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       TextWaitingForPlayers;                                     // 0x03C0(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	struct FText                                       TextEstimatedTimeTitle;                                    // 0x03D8(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	class UButton*                                     ButtonCancelSearching;                                     // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGPartySlotsWidget*                        PartySlots;                                                // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SQBS[0x40];                                    // 0x0400(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLobbySearchingWidget");
		return ptr;
	}



	void SetWaitingTimer(int Seconds);
	void SetEstimatedWaitingTimer(int Seconds);
	void OnRankTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData);
	void OnLevelTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData);
	void OnCurrencyTooltipTriggered(const struct FTooltipPressedData& TooltipPressedData, DBDSharedTypes_ECurrencyType currencyType);
	void HandleLeaveButtonClicked();
};

// Class DeadByDaylight.UMGGenericPopup
// 0x00E8 (FullSize[0x03E8] - InheritedSize[0x0300])
class UUMGGenericPopup : public UMobileBaseUserWidget
{
public:
	class URichTextBlock*                              Title;                                                     // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGHtmlRichText*                            Message;                                                   // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      TitleBackground;                                           // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      TitleSmoke;                                                // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGPopupButton*                             RegressionPopupButton;                                     // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGPopupButton*                             AlternativePopupButton;                                    // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUMGPopupButton*                             ProgressionPopupButton;                                    // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FSlateColor                                 ErrorTitleSmokeColor;                                      // 0x0338(0x0028) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                                 ErrorTitleBackgroundColor;                                 // 0x0360(0x0028) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                                 DefaultTitleSmokeColor;                                    // 0x0388(0x0028) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FSlateColor                                 DefaultTitleBackgroundColor;                               // 0x03B0(0x0028) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7H2O[0x10];                                    // 0x03D8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGGenericPopup");
		return ptr;
	}



	void OnPopupDisappearance();
	void OnPopupAppearance();
};

// Class DeadByDaylight.UMGLoginPopup
// 0x0018 (FullSize[0x0400] - InheritedSize[0x03E8])
class UUMGLoginPopup : public UUMGGenericPopup
{
public:
	class UUMGAuthentificationProviderListWidget*      AuthenticationProviderList;                                // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3Y48[0x10];                                    // 0x03F0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLoginPopup");
		return ptr;
	}



	void ChooseProvider(unsigned char Provider);
};

// Class DeadByDaylight.UMGMainMenuMonthlyPassButton
// 0x0050 (FullSize[0x0350] - InheritedSize[0x0300])
class UUMGMainMenuMonthlyPassButton : public UMobileBaseUserWidget
{
public:
	class UWidgetSwitcher*                             ButtonSwitcher;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     ActiveButton;                                              // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     NonActiveButton;                                           // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       playerName;                                                // 0x0318(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               OnClickSound;                                              // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WG2H[0x18];                                    // 0x0338(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGMainMenuMonthlyPassButton");
		return ptr;
	}



	void OnButtonClick();
};

// Class DeadByDaylight.UMGMapThemeWidget
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UUMGMapThemeWidget : public UMobileBaseUserWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGMapThemeWidget");
		return ptr;
	}



	void SetThemeName(const struct FString& ThemeName);
	void SetMapName(const struct FString& MapName);
};

// Class DeadByDaylight.UMGBaseSideMainMenuButton
// 0x0018 (FullSize[0x0448] - InheritedSize[0x0430])
class UUMGBaseSideMainMenuButton : public UUMGBaseButtonWidget
{
public:
	class UImage*                                      NotificationBadge;                                         // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _baseTextOpacity;                                          // 0x0438(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _highlightTextOpacity;                                     // 0x043C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _baseIconOpacity;                                          // 0x0440(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _highlightIconOpacity;                                     // 0x0444(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBaseSideMainMenuButton");
		return ptr;
	}



};

// Class DeadByDaylight.UMGMenuBaseBanner
// 0x0028 (FullSize[0x0470] - InheritedSize[0x0448])
class UUMGMenuBaseBanner : public UUMGBaseSideMainMenuButton
{
public:
	class UImage*                                      BannerImage;                                               // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Title;                                                     // 0x0450(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      DefaultBanner[0x10];                                       // 0x0458(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	unsigned char                                      UnknownData_1VAV[0x8];                                     // 0x0468(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGMenuBaseBanner");
		return ptr;
	}



};

// Class DeadByDaylight.UMGMenuEventsBanner
// 0x0018 (FullSize[0x0488] - InheritedSize[0x0470])
class UUMGMenuEventsBanner : public UUMGMenuBaseBanner
{
public:
	class UImage*                                      EventsIcon;                                                // 0x0470(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  FallbackTitle;                                             // 0x0478(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Y8QK[0x8];                                     // 0x0480(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGMenuEventsBanner");
		return ptr;
	}



	void SetDefaultWidgetLayout();
	void SetCustomWidgetLayout();
};

// Class DeadByDaylight.UMGMenuMarketingBanner
// 0x0008 (FullSize[0x0478] - InheritedSize[0x0470])
class UUMGMenuMarketingBanner : public UUMGMenuBaseBanner
{
public:
	class UTextBlock*                                  subtitle;                                                  // 0x0470(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGMenuMarketingBanner");
		return ptr;
	}



};

// Class DeadByDaylight.UMGMonthlyPassRewardItemWidget
// 0x0058 (FullSize[0x0358] - InheritedSize[0x0300])
class UUMGMonthlyPassRewardItemWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  ItemAmount;                                                // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  ItemName;                                                  // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ItemIcon;                                                  // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CheckIcon;                                                 // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ItemFrame;                                                 // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ItemRarityBackground;                                      // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ItemPaintPanel;                                            // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                ActiveItemFrameColor;                                      // 0x0338(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                NonActiveItemFrameColor;                                   // 0x0348(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGMonthlyPassRewardItemWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGMonthlyPassCurrencyWidget
// 0x0008 (FullSize[0x0360] - InheritedSize[0x0358])
class UUMGMonthlyPassCurrencyWidget : public UUMGMonthlyPassRewardItemWidget
{
public:
	class UImage*                                      CurrencyBackground;                                        // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGMonthlyPassCurrencyWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGMonthlyPassFreeTicketWidget
// 0x0000 (FullSize[0x0358] - InheritedSize[0x0358])
class UUMGMonthlyPassFreeTicketWidget : public UUMGMonthlyPassRewardItemWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGMonthlyPassFreeTicketWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGMonthlyPassRewardsPopup
// 0x0068 (FullSize[0x0450] - InheritedSize[0x03E8])
class UUMGMonthlyPassRewardsPopup : public UUMGGenericPopup
{
public:
	class UTextBlock*                                  SubscriptionLabel;                                         // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TitleLabel;                                                // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      SubscriptionIcon;                                          // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  RenewalDateLabel;                                          // 0x0400(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              RewardsContainer;                                          // 0x0408(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      RewardWidgetClass[0x30];                                   // 0x0410(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FMargin                                     _rewardsPadding;                                           // 0x0440(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGMonthlyPassRewardsPopup");
		return ptr;
	}



};

// Class DeadByDaylight.UMGNavigationButtonWidget
// 0x0010 (FullSize[0x0440] - InheritedSize[0x0430])
class UUMGNavigationButtonWidget : public UUMGBaseButtonWidget
{
public:
	class UWidget*                                     NotificationPanel;                                         // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0O43[0x8];                                     // 0x0438(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGNavigationButtonWidget");
		return ptr;
	}



	void SetIsSelected(bool IsSelected);
	void SetIcon(class UTexture2D* Icon);
};

// Class DeadByDaylight.UMGObjectivesWidget
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGObjectivesWidget : public UMobileBaseUserWidget
{
public:
	UMG_ESlateVisibility                               PanelEscapeRequirementsVisibility;                         // 0x0300(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               PanelGeneratorVisibility;                                  // 0x0301(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               PanelFindExitVisibility;                                   // 0x0302(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               PanelHatchVisibility;                                      // 0x0303(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7U52[0x4];                                     // 0x0304(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGObjectivesWidget");
		return ptr;
	}



	void UpdateTextMessage(const struct FText& textFind, const struct FText& textExit, const struct FText& textOr);
	void UpdateGeneratorCount(int count);
};

// Class DeadByDaylight.UMGPartyBotSlotWidget
// 0x00C8 (FullSize[0x03C8] - InheritedSize[0x0300])
class UUMGPartyBotSlotWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  RoleText;                                                  // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  BotDifficultyText;                                         // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CharacterNameText;                                         // 0x0310(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                        EditButton;                                                // 0x0318(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      EditIcon;                                                  // 0x0320(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                        InvitePartyButton;                                         // 0x0328(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                InvitePartyCanvas;                                         // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<DeadByDaylight_EAIDifficultyLevel, struct FSlateColor> DifficultyColors;                                          // 0x0338(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_E3R3[0x40];                                    // 0x0388(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPartyBotSlotWidget");
		return ptr;
	}



	void HandleInvitePartyButtonEvent();
	void HandleEditButtonEvent();
};

// Class DeadByDaylight.UMGBaseCountdownWidget
// 0x0068 (FullSize[0x0368] - InheritedSize[0x0300])
class UUMGBaseCountdownWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  TimerTextBlock;                                            // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _timerThreshold;                                           // 0x0308(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V3LL[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateColor                                 _timerColorBelowThreshold;                                 // 0x0310(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _timerColorBeyondThreshold;                                // 0x0338(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1R4U[0x8];                                     // 0x0360(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBaseCountdownWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPartyCountdownWidget
// 0x0020 (FullSize[0x0388] - InheritedSize[0x0368])
class UUMGPartyCountdownWidget : public UUMGBaseCountdownWidget
{
public:
	class UButton*                                     UnreadyButton;                                             // 0x0368(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                UnreadyButtonContainer;                                    // 0x0370(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3JZT[0x10];                                    // 0x0378(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPartyCountdownWidget");
		return ptr;
	}



	void OnUnreadyButtonClicked();
};

// Class DeadByDaylight.UMGPartyPlayerSlotWidget
// 0x0240 (FullSize[0x0540] - InheritedSize[0x0300])
class UUMGPartyPlayerSlotWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  playerName;                                                // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  AdditionalInformationText;                                 // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      FriendIcon;                                                // 0x0310(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                        KickPlayerButton;                                          // 0x0318(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                              CharacterNameStyle;                                        // 0x0320(0x0058) (Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateFontInfo                              PlayerInMatchStyle;                                        // 0x0378(0x0058) (Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PlayerInMatchOpacity;                                      // 0x03D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PlayerInLobbyOpacity;                                      // 0x03D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                     PlayerInformationContainer;                                // 0x03D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ReadyIconsCanvas;                                          // 0x03E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                RequestRoleIconsCanvas;                                    // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             RoleSwitcher;                                              // 0x03F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      LeaderIcon;                                                // 0x03F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YR2T[0x140];                                   // 0x0400(0x0140) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPartyPlayerSlotWidget");
		return ptr;
	}



	void SetVisualsFromState(DeadByDaylight_EPartyPlayerSlotWidgetState widgetState);
	void HandleKickPlayerButtonEvent();
};

// Class DeadByDaylight.UMGPartySlotsWidget
// 0x0100 (FullSize[0x0400] - InheritedSize[0x0300])
class UUMGPartySlotsWidget : public UMobileBaseUserWidget
{
public:
	class UPanelWidget*                                PartyPlayerSlotsContainer;                                 // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGPartyPlayerSlotWidget*>           _partyPlayerSlots;                                         // 0x0308(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0AV0[0x8];                                     // 0x0318(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVerticalBox*                                PartyBotSlotsContainer;                                    // 0x0320(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PartyBotSlotWidgetClass[0x30];                             // 0x0328(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	int                                                MaxSlotCount;                                              // 0x0358(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DZ87[0x4];                                     // 0x035C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateColor                                 ConflictingCharacterColor;                                 // 0x0360(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 NormalCharacterColor;                                      // 0x0388(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LWQA[0x50];                                    // 0x03B0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPartySlotsWidget");
		return ptr;
	}



	void SwapWidgets(int first, int second);
	void SetWidgetState(int Index, DeadByDaylight_EPartyPlayerSlotWidgetState State);
	void RearrangePartySlots();
	void HandleKickPlayerButtonClickEvent(const struct FString& friendKrakenID);
	void HandleInviteFriendButtonClickEvent();
	void HandleBotEditButtonClickEvent(int Index);
};

// Class DeadByDaylight.UMGPerkSelectionPopup
// 0x00D0 (FullSize[0x04B8] - InheritedSize[0x03E8])
class UUMGPerkSelectionPopup : public UUMGGenericPopup
{
public:
	class UPerkSelectionSlotWidget*                    LargePerkSelectionSlot;                                    // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPerkSelectionSlotWidget*                    FirstSmallSlot;                                            // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPerkSelectionSlotWidget*                    SecondSmallSlot;                                           // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PictureCharacterBackground;                                // 0x0400(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                SelectablePerksContainer;                                  // 0x0408(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UMGPerkSelectionSlotWidget[0x30];                          // 0x0410(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UVerticalBox*                                SmallSlotContainer;                                        // 0x0440(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              RewardSubTitle;                                            // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              PerkSelectionTitle;                                        // 0x0450(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                NoPerksContainer;                                          // 0x0458(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              AcquireMorePerksByText;                                    // 0x0460(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              AcquireMorePerksByOption1Text;                             // 0x0468(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              AcquireMorePerksByOption2Text;                             // 0x0470(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterPrestigeIcon*                   prestigeIcon;                                              // 0x0478(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OFDN[0x10];                                    // 0x0480(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPerkSelectionSlotWidget*>            _selectablePerk;                                           // 0x0490(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3N11[0x18];                                    // 0x04A0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPerkSelectionPopup");
		return ptr;
	}



	void OnSlotSelected(int Index);
};

// Class DeadByDaylight.UMGPlayerNameInputPopup
// 0x0018 (FullSize[0x0400] - InheritedSize[0x03E8])
class UUMGPlayerNameInputPopup : public UUMGGenericPopup
{
public:
	class UEditableTextBox*                            NameInputTextBox;                                          // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZTVA[0x10];                                    // 0x03F0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPlayerNameInputPopup");
		return ptr;
	}



	void NameCommitted(const struct FText& Name, TEnumAsByte<SlateCore_ETextCommit> commitType);
	void NameChanged(const struct FText& Name);
};

// Class DeadByDaylight.UMGPlayerRankInfo
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UUMGPlayerRankInfo : public UMobileBaseUserWidget
{
public:
	class UUMGTallyPipsContainer*                      PipsContainerWidget;                                       // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyRankFrame*                          RankFrameWidget;                                           // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      Background;                                                // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TitleLabel;                                                // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  RankLabel;                                                 // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  pipLabel;                                                  // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                HighlightContainer;                                        // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _survivorColorBackground;                                  // 0x0338(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _killerColorBackground;                                    // 0x0348(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _disableOpacity;                                           // 0x0358(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WAYU[0x4];                                     // 0x035C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPlayerRankInfo");
		return ptr;
	}



	void SetData(int Rank, int PipsRequiredForNextRank, int filledPips, const struct FText& TitleLabel, const struct FText& pipLabel, DBDSharedTypes_EPlayerRole PlayerRole, bool IsHighlight);
};

// Class DeadByDaylight.UMGPlayersStatusWidget
// 0x0100 (FullSize[0x0400] - InheritedSize[0x0300])
class UUMGPlayersStatusWidget : public UMobileBaseUserWidget
{
public:
	TMap<DBDSharedTypes_EPlayerRole, struct FCustomizedHudPlayerWrapperIdMapContainer> CustomizedHudWrapperIdMap;                                 // 0x0300(0x0050) (Edit, NativeAccessSpecifierPublic)
	unsigned char                                      PlayerStatusIconClass[0x30];                               // 0x0350(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UHorizontalBox*                              playersContainer;                                          // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FString, class UUMGPlayerStatusIcon*>  playerIconsByName;                                         // 0x0388(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N8VF[0x28];                                    // 0x03D8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPlayersStatusWidget");
		return ptr;
	}



	void OnPlayerStatusClicked(class UUMGPlayerStatusIcon* playerStatusIcon);
};

// Class DeadByDaylight.UMGPlayerStatusIcon
// 0x0268 (FullSize[0x0568] - InheritedSize[0x0300])
class UUMGPlayerStatusIcon : public UMobileBaseUserWidget
{
public:
	class UProgressBar*                                HealthBar;                                                 // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProgressBar*                                TimerBar;                                                  // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                HealthBarContainer;                                        // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                TimerBarContainer;                                         // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  playerName;                                                // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      StatusIconBloodTop;                                        // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      StatusIconBloodBottom;                                     // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      StatusIcon;                                                // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                ObsessionCanvas;                                           // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                BrokenIndicatorCanvas;                                     // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                AfflictionCanvas;                                          // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                AfflictionIntroCanvas;                                     // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                SleepStatusCanvas;                                         // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                SleepTimerCanvas;                                          // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                ReverseBearTrapCanvas;                                     // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      ReverseBearTrapArrow;                                      // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                SicknessCanvas;                                            // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      SicknessFill;                                              // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                SpectateCanvas;                                            // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                SelectedSpectatorCanvas;                                   // 0x0398(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                AgonyCanvas;                                               // 0x03A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                HandsGrabbing;                                             // 0x03A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SicknessFillHighOpacity;                                   // 0x03B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SicknessFillLowOpacity;                                    // 0x03B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                StatusEffectContainerCanvas;                               // 0x03B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialInstanceDynamic*                    SicknessFillMI;                                            // 0x03C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _hookedTexture;                                            // 0x03C8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _hookedBloodTexture;                                       // 0x03D0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _trappedTexture;                                           // 0x03D8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _trappedBloodTexture;                                      // 0x03E0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _deadTexture;                                              // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _deadBloodTexture;                                         // 0x03F0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _escapedTexture;                                           // 0x03F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _injuredTexture;                                           // 0x0400(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _injuredBloodTexture;                                      // 0x0408(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _crawlingTexture;                                          // 0x0410(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _crawlingBloodTexture;                                     // 0x0418(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _sacrificedTexture;                                        // 0x0420(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _sacrificedBloodTexture;                                   // 0x0428(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _disconnectedTexture;                                      // 0x0430(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _deathBedTexture;                                          // 0x0438(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  _defaultTexture;                                           // 0x0440(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UMGStalkingStatusEffectUIClass[0x30];                      // 0x0448(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGLacerationStatusEffectUIClass[0x30];                    // 0x0478(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	int                                                _maxNumberCharacterInName;                                 // 0x04A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JOJP[0xAC];                                    // 0x04AC(0x00AC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGStalkingStatusEffectUI*                  _stalkingStatusEffectUI;                                   // 0x0558(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGLacerationStatusEffectUI*                _lacerationStatusEffectUI;                                 // 0x0560(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPlayerStatusIcon");
		return ptr;
	}



	void SetSleepingTimer(float Progress);
	void SetReverseTrapProgressionTimer(float Seconds);
	void OnPlayerStatusButtonClicked();
};

// Class DeadByDaylight.UMGPopupButton
// 0x0038 (FullSize[0x0468] - InheritedSize[0x0430])
class UUMGPopupButton : public UUMGBaseButtonWidget
{
public:
	unsigned char                                      UnknownData_6TXN[0x14];                                    // 0x0430(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DisabledOpacity;                                           // 0x0444(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EnabledOpacity;                                            // 0x0448(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RT0Y[0x4];                                     // 0x044C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      VFXs;                                                      // 0x0450(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      Line;                                                      // 0x0458(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      FXSmoke;                                                   // 0x0460(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPopupButton");
		return ptr;
	}



	void OnButtonReleased();
	void OnButtonPressed();
	void OnButtonClicked();
};

// Class DeadByDaylight.UMGPromoPackItemWidget
// 0x0038 (FullSize[0x0468] - InheritedSize[0x0430])
class UUMGPromoPackItemWidget : public UUMGBaseButtonWidget
{
public:
	class UCanvasPanel*                                SelectedPanel;                                             // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                BackgroundPanel;                                           // 0x0438(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                AmountPanel;                                               // 0x0440(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S5UX[0x20];                                    // 0x0448(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPromoPackItemWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPromoPackCharacterWidget
// 0x0008 (FullSize[0x0470] - InheritedSize[0x0468])
class UUMGPromoPackCharacterWidget : public UUMGPromoPackItemWidget
{
public:
	class UCanvasPanel*                                OwnedPanel;                                                // 0x0468(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPromoPackCharacterWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPromoPackContentWidget
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGPromoPackContentWidget : public UMobileBaseUserWidget
{
public:
	class UHorizontalBox*                              Content;                                                   // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPromoPackContentDataAsset*                  WidgetPerContentType;                                      // 0x0308(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                                  ScrollBox;                                                 // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<TWeakObjectPtr<class UVerticalBox>>         _itemsContainer;                                           // 0x0318(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPromoPackContentWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPromoPackCurrencyWidget
// 0x0000 (FullSize[0x0468] - InheritedSize[0x0468])
class UUMGPromoPackCurrencyWidget : public UUMGPromoPackItemWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPromoPackCurrencyWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGBaseCurrencyButtonWidget
// 0x00A8 (FullSize[0x04D8] - InheritedSize[0x0430])
class UUMGBaseCurrencyButtonWidget : public UUMGBaseButtonWidget
{
public:
	class UImage*                                      FXImage;                                                   // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CurrencyColorImage;                                        // 0x0438(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CurrencyIcon;                                              // 0x0440(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  PriceText;                                                 // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                                 AffordableColor;                                           // 0x0450(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 NotAffordableColor;                                        // 0x0478(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                                DisabledOpacity;                                           // 0x04A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                EnabledOpacity;                                            // 0x04B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5JIQ[0x18];                                    // 0x04C0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBaseCurrencyButtonWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPromoPackPurchaseCurrencyButtonWidget
// 0x0020 (FullSize[0x04F8] - InheritedSize[0x04D8])
class UUMGPromoPackPurchaseCurrencyButtonWidget : public UUMGBaseCurrencyButtonWidget
{
public:
	class UTextBlock*                                  PercentageDiscountText;                                    // 0x04D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  UndiscountedPrice;                                         // 0x04E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                PercentageDiscountCanvas;                                  // 0x04E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                                    OverlayUndiscountedPrice;                                  // 0x04F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPromoPackPurchaseCurrencyButtonWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPromoPackSelectedItemWidget
// 0x0038 (FullSize[0x0338] - InheritedSize[0x0300])
class UUMGPromoPackSelectedItemWidget : public UMobileBaseUserWidget
{
public:
	class UUMGHtmlRichText*                            ItemDescription;                                           // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ItemTypeIcon;                                              // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  ItemName;                                                  // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  ItemSubTitle;                                              // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UNamedSlot*                                  SelectedItemSlot;                                          // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGPromoPackItemWidget*                     SelectedItem;                                              // 0x0328(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScrollBox*                                  ScrollBox;                                                 // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPromoPackSelectedItemWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPromoPackSuggestionButton
// 0x0010 (FullSize[0x0440] - InheritedSize[0x0430])
class UUMGPromoPackSuggestionButton : public UUMGBaseButtonWidget
{
public:
	class URichTextBlock*                              RichTextButtonLabel;                                       // 0x0430(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      LineGlow;                                                  // 0x0438(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPromoPackSuggestionButton");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPurchaseBuyButton
// 0x0008 (FullSize[0x0438] - InheritedSize[0x0430])
class UUMGPurchaseBuyButton : public UUMGBaseButtonWidget
{
public:
	class UTextBlock*                                  PriceText;                                                 // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPurchaseBuyButton");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPurchaseCurrencyWidget
// 0x0088 (FullSize[0x0388] - InheritedSize[0x0300])
class UUMGPurchaseCurrencyWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  PercentageDiscountText;                                    // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CurrencyIcon;                                              // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  PriceText;                                                 // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  UndiscountedPrice;                                         // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CurrencyColorImage;                                        // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                                    OriginalPriceOverlay;                                      // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                DiscountCanvas;                                            // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                                 AffordableColor;                                           // 0x0338(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 NotAffordableColor;                                        // 0x0360(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPurchaseCurrencyWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPurchaseItemsInfo
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGPurchaseItemsInfo : public UMobileBaseUserWidget
{
public:
	class UImage*                                      Icon;                                                      // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Quantity;                                                  // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  ItemName;                                                  // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPurchaseItemsInfo");
		return ptr;
	}



};

// Class DeadByDaylight.UMGPurchaseSticker
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGPurchaseSticker : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  TextDiscount;                                              // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGPurchaseSticker");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGameState
// 0x0568 (FullSize[0x0810] - InheritedSize[0x02A8])
class ADBDGameState : public AGameState
{
public:
	unsigned char                                      UnknownData_P9LL[0x20];                                    // 0x02A8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnEscapeDoorActivated;                                     // 0x02C8(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5EOK[0x90];                                    // 0x02D8(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLevelReadyToPlay;                                        // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIntroCompleted;                                          // 0x0378(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnKillerIntroCompletePercentChanged;                       // 0x0388(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLightingGenerated;                                       // 0x0398(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RKXD[0x30];                                    // 0x03A8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USpecialEventGameplaySpawnerComponent*       _specialEventGameplaySpawnerComponent;                     // 0x03D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    AuthorityOnAllPlayerLoaded;                                // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TBUV[0x18];                                    // 0x03F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnActivatedGeneratorCountChangedDynamic;                   // 0x0408(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSlasherSet;                                              // 0x0418(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1USA[0x18];                                    // 0x0428(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnObsessionChanged;                                        // 0x0440(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                CamperDeadCount;                                           // 0x0450(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CamperInMeatLockerCount;                                   // 0x0454(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CamperEscaped;                                             // 0x0458(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WaitingForEscape;                                          // 0x045C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CamperCount;                                               // 0x0460(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               LeaveSpectateRequested;                                    // 0x0464(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XJM2[0x3];                                     // 0x0465(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SecondsLeftInLobby;                                        // 0x0468(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_COUA[0x34];                                    // 0x046C(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASlasherPlayer*                              Slasher;                                                   // 0x04A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URenderingFeaturesSequencer*                 _renderingSequencer;                                       // 0x04A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DQN5[0x10];                                    // 0x04B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _camperHookedInBasementCount;                              // 0x04C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YQO0[0x8];                                     // 0x04C4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _playersReadyToStart;                                      // 0x04CC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AHSP[0x3];                                     // 0x04CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBuiltLevelData                             _builtLevelData;                                           // 0x04D0(0x00A8) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	struct FOfferingData                               _levelOfferings;                                           // 0x0578(0x0018) (Net, Transient, NativeAccessSpecifierPrivate)
	class AClipManager*                                _clipManager;                                              // 0x0590(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                       _sessionId;                                                // 0x0598(0x0010) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGuid                                       _lobbyId;                                                  // 0x05A8(0x0010) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _activatedGeneratorCount;                                  // 0x05B8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _requiredActivatedGeneratorCount;                          // 0x05BC(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _escapeDoorActivated;                                      // 0x05C0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _escapeDoorOpened;                                         // 0x05C1(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isHatchOpen;                                              // 0x05C2(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _levelReadyToPlay;                                         // 0x05C3(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _playerDistributionReady;                                  // 0x05C4(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _usingWeakenedMechanic;                                    // 0x05C5(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VJON[0x2];                                     // 0x05C6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _survivorLeft;                                             // 0x05C8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4X2J[0x4];                                     // 0x05CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AMeatHook*>                           _meatHooks;                                                // 0x05D0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ASearchable*>                         _searchables;                                              // 0x05E0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AGenerator*>                          _generators;                                               // 0x05F0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AEscapeDoor*>                         _escapeDoors;                                              // 0x0600(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AHatch*>                              _hatches;                                                  // 0x0610(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AReverseBearTrapRemover*>             _reverseBearTrapRemovers;                                  // 0x0620(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ABaseTrap*>                           _baseTraps;                                                // 0x0630(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class APallet*>                             _pallets;                                                  // 0x0640(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AWindow*>                             _windows;                                                  // 0x0650(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ALocker*>                             _lockers;                                                  // 0x0660(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ABreakableBase*>                      _breakableWalls;                                           // 0x0670(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ATotem*>                              _totems;                                                   // 0x0680(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBoxSphereBounds                            _mapBoxSphereBounds;                                       // 0x0690(0x001C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TNHB[0x18];                                    // 0x06AC(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _camperEscapedThroughHatch;                                // 0x06C4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACamperPlayer*                               _obsessionTarget;                                          // 0x06C8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _cachedObsessionEscaped;                                   // 0x06D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CMPC[0x7];                                     // 0x06D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AInteractable*>                       _traps;                                                    // 0x06D8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IZWY[0x8];                                     // 0x06E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGamePresetData                             _gamePresetData;                                           // 0x06F0(0x0088) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	bool                                               _gameLevelLoaded;                                          // 0x0778(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _gameLevelCreated;                                         // 0x0779(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _gameLevelEnded;                                           // 0x077A(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EEndGameReason                      _gameEndedReason;                                          // 0x077B(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U882[0x4];                                     // 0x077C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UEndGameStateComponent*                      _endGameState;                                             // 0x0780(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScourgeHookManagerComponent*                _scourgeHookManager;                                       // 0x0788(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UActorPairQueryEvaluatorComponent*           _actorPairQueryEvaluatorComponent;                         // 0x0790(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7YLY[0x8];                                     // 0x0798(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterCollection*                        _characterCollection;                                      // 0x07A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCollectableCollection*                      _collectableCollection;                                    // 0x07A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UServerTimeProviderComponent*                _serverTimeProvider;                                       // 0x07B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInGameAssetPreloaderComponent*              _inGameAssetPreloaderComponent;                            // 0x07B8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U43J[0x28];                                    // 0x07C0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDateTime                                   _matchStartTime;                                           // 0x07E8(0x0008) (Net, ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isServerDedicated;                                        // 0x07F0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3CYP[0x3];                                     // 0x07F1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _maxSurvivorCount;                                         // 0x07F4(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     _serverBuildVersion;                                       // 0x07F8(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1EV9[0x8];                                     // 0x0808(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGameState");
		return ptr;
	}



	void SortOfferings();
	void SetPlayersReadyToStart(bool playersReadyToStart);
	void SetKillerIntroCompletedNormalized(float completedAmount);
	void SetGameLevelEnded(DeadByDaylight_EEndGameReason endGameReason);
	void SetDisplayMapName(bool Display);
	void SetBuiltLevelData(const struct FName& ThemeName, const struct FName& ThemeWeather, const struct FName& AudioStateThemes, const struct FName& AudioStateWeather, const struct FName& AudioThemeEvent, const struct FString& MapName, int TileCount, TArray<struct FDependency> levelDependencies, const struct FName& SpecialEventId);
	void Server_UpdateGameRole();
	void ResetGameLevelStatus();
	void RemoveTrap(class AInteractable* toRemove);
	void OnSlasherSetMultiDelegate__DelegateSignature(class ASlasherPlayer* SlasherPlayer);
	void OnRep_SurvivorLeft(int OldValue);
	void OnRep_SessionId();
	void OnRep_SecondsLeftInLobby(int OldValue);
	void OnRep_RequiredActivatedGeneratorCount(int oldRequiredActivatedGeneratorCount);
	void OnRep_PlayersReadyToStart(bool OldValue);
	void OnRep_OnLevelReadyToPlay(bool OldValue);
	void OnRep_OnGameLevelCreated();
	void OnRep_ObsessionTarget(class ACamperPlayer* previousObsessionTarget);
	void OnRep_LobbyId();
	void OnRep_HatchOpened(bool OldValue);
	void OnRep_GamePresetData();
	void OnRep_EscapeDoorActivated(bool OldValue);
	void OnRep_BuildLevelData();
	void OnRep_ActivatedGeneratorCount(int OldValue);
	void OnLevelReadyToPlayDelegate__DelegateSignature();
	void OnIntroCompleteDelegate__DelegateSignature();
	void Multicast_UpdateCharacterFromGamePreset(class ADBDPlayerState_Menu* playerState_Menu, const struct FGamePresetData& GamePresetData);
	void Multicast_SetServerLeftGame(bool hasServerLeftGame);
	void Multicast_SetLostServerConnection(bool hasLostServerConnection);
	void Multicast_SetGameLevelLoaded(bool gameLevelLoaded);
	void Multicast_SetGameLevelEnded(DeadByDaylight_EEndGameReason endGameReason);
	void Multicast_SetGameEnded(bool hasServerLeftGame);
	void Multicast_SetBuiltLevelData(const struct FName& ThemeName, const struct FName& ThemeWeather, const struct FName& AudioStateThemes, const struct FName& AudioStateWeather, const struct FName& AudioThemeEvent, const struct FString& MapName, int TileCount, TArray<struct FDependency> levelDependencies, const struct FName& SpecialEventId);
	void Multicast_SendHVSPlusState(bool Enabled);
	void Multicast_SendEnsureToClients(const struct FString& ensure);
	void Multicast_OnGameStarted();
	bool IsPlayerDistributionReady();
	bool IsOnePlayerLeft();
	bool IsOfferingReceived();
	bool IsObsessionTargetAliveInLevel();
	bool IsObsessionTargetAlive();
	bool IsLightingGenerated();
	bool IsLevelSetupDone();
	bool IsLevelReadyToPlay();
	bool IsIntroCompleted();
	bool IsHatchVisible();
	bool IsEscapeRequirementCompleted();
	bool IsEscapeDoorOpen();
	bool IsEscapeDoorActivated();
	void IntroCompleted();
	TArray<class AInteractable*> GetTraps();
	TArray<class ATotem*> GetTotems();
	int GetSurvivorLeft();
	class USpecialEventGameplaySpawnerComponent* GetSpecialEventGameplaySpawnerComponent();
	TArray<struct FSelectedOffering> GetSelectedOfferings();
	bool GetSelectedOffering(int Index, struct FSelectedOffering* SelectedOffering);
	int GetRequiredActivatedGeneratorCount();
	int GetRemainingGeneratorsNeeded();
	class ADBDPlayerState* GetPlayerStateByMirrorsID(const struct FString& ID);
	class ADBDPlayerState* GetPlayerStateByIDString(const struct FString& ID);
	bool GetPlayersReadyToStart();
	void GetPlayerRoleCounts(int* survivorCount, int* killerCount, int* spectatorCount);
	class ACamperPlayer* GetObsessionTarget();
	int GetNumberOfOtherActiveSurvivors(class ADBDPlayer* exception);
	int GetNumberOfActiveSurvivors();
	struct FName GetMapThemeName();
	class ADBDPlayerState* GetLocalPlayerState();
	class ADBDPlayer* GetLocalPlayerPawn();
	class APawn* GetLocalPlayerBasePawn();
	void GetLevelThemeAudioSoundBankAssetPtr();
	struct FBuiltLevelData GetLevelData();
	float GetKillerIntroCompletedNormalized();
	class ASlasherPlayer* GetKiller();
	bool GetIsGameEnded();
	TArray<class AWindow*> GetInGameWindows();
	TArray<class ASearchable*> GetInGameSearchables();
	TArray<class AReverseBearTrapRemover*> GetInGameReverseBearTrapRemovers();
	TArray<class APallet*> GetInGamePallets();
	TArray<class AMeatHook*> GetInGameMeatHooks();
	TArray<class AHatch*> GetInGameHatches();
	TArray<class AGenerator*> GetInGameGenerators();
	TArray<class AEscapeDoor*> GetInGameEscapeDoors();
	TArray<class ABaseTrap*> GetInGameBaseTraps();
	bool GetGameLevelLoaded();
	class UEndGameStateComponent* GetEndGameStateComponent();
	class UCollectableCollection* GetCollectableCollection();
	class UCharacterCollection* GetCharacterCollection();
	void CallOnSlasherSet(const struct FScriptDelegate& Callback);
	void CallOnLevelReadyToPlay(const struct FScriptDelegate& Callback);
	void CallOnIntroComplete(const struct FScriptDelegate& Callback);
	void BroadcastOnSetBuildLevelData();
	void Authority_SetSurvivorLeft(int survivorRemaining);
	void Authority_SetLevelReadyToPlay();
	void Authority_SetHatchOpen(bool OPENED);
	void Authority_SetGameSelectedOffering(TArray<struct FSelectedOffering> offerings);
	void Authority_SetGameLevelLoaded();
	void Authority_SetGameLevelEnded(DeadByDaylight_EEndGameReason endGameReason);
	void Authority_SetGameLevelCreated();
	void Authority_SetEscapeDoorOpened(bool OPENED);
	void Authority_SetAllPlayerLoaded();
	void Authority_EvaluateObsessionTarget(class ADBDPlayer* potentialTarget);
	void Authority_EscapeThroughHatch();
	void Authority_EnableObsession();
	void Authority_DeactivateAI();
	void AddTrap(class AInteractable* toAdd);
};

// Class DeadByDaylight.PresentationItemProgressComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UPresentationItemProgressComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PresentationItemProgressComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDEmblem
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UDBDEmblem : public UActorComponent
{
public:
	float                                              _points;                                                   // 0x00B8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WRB9[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FProgressionPoints>                  _progressionPoints;                                        // 0x00C0(0x0010) (Net, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDataTableRowHandle                         _definition;                                               // 0x00D0(0x0018) (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_APVV[0x20];                                    // 0x00E8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDEmblem");
		return ptr;
	}



	void Client_FinalizeReplication(float Points, TArray<struct FProgressionPoints> ProgressionPoints);
};

// Class DeadByDaylight.AbstractGameFlowHandler
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UAbstractGameFlowHandler : public UGameInstanceSubsystem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AbstractGameFlowHandler");
		return ptr;
	}



};

// Class DeadByDaylight.ScreenBase
// 0x00F0 (FullSize[0x0120] - InheritedSize[0x0030])
class UScreenBase : public UObject
{
public:
	bool                                               isAnimationDone;                                           // 0x0030(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3RR4[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGFxObject*                                  ScreenObject;                                              // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UScreenController*                           _screenController;                                         // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D4L6[0xD8];                                    // 0x0048(0x00D8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ScreenBase");
		return ptr;
	}



	void SetFadesOut(bool fadesOut);
	void OnTextInputMouseClicked(bool IsPassword);
	void OnStart();
	void OnNavKey(const struct FString& navKey);
	void OnHideVirtualKeyboardRequested();
	void OnEscape();
	void OnBack();
	void OnAnyKey(float Code);
	void OnAnimationUpdate(int isAnimationDone);
	void BroadcastOnHighlightedElementClickedEvent(const struct FName& onBoardingID);
};

// Class DeadByDaylight.BasePopupScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UBasePopupScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BasePopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.GenericPopupScreen
// 0x0020 (FullSize[0x0140] - InheritedSize[0x0120])
class UGenericPopupScreen : public UBasePopupScreen
{
public:
	class UUMGGenericPopup*                            _popup;                                                    // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_D1T5[0x18];                                    // 0x0128(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GenericPopupScreen");
		return ptr;
	}



	void OnChoiceSelected(int selectedButtonType);
};

// Class DeadByDaylight.AccountLinkPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UAccountLinkPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AccountLinkPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.AchievementHandlerComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UAchievementHandlerComponent : public UActorComponent
{
public:
	class UGeneratorRepairWithGenericPerksEscapeAchievement* _generatorRepairWithGenericPerksOnlyEscapeAchievement;     // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCamperKONextToRaisedPalletAchievement*      _camperKONextToRaisedPalletAchievement;                    // 0x00C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AchievementHandlerComponent");
		return ptr;
	}



	void ReceiveGameEvent(DeadByDaylight_EDBDScoreTypes scoreType, float amount, class AActor* Instigator, class AActor* Target);
	void OnGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
};

// Class DeadByDaylight.ActionButton
// 0x0270 (FullSize[0x0570] - InheritedSize[0x0300])
class UActionButton : public UMobileBaseUserWidget
{
public:
	struct FSlateBrush                                 DefaultImage;                                              // 0x0300(0x0090) (Edit, DisableEditOnTemplate, NativeAccessSpecifierPublic)
	class UImage*                                      IconImage;                                                 // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      ToggleSmokeImage;                                          // 0x0398(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UButton*                                     Button;                                                    // 0x03A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DefaultOpacity;                                            // 0x03A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ToggledOpacity;                                            // 0x03AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DisabledOpacity;                                           // 0x03B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WFM7[0x4];                                     // 0x03B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 Normal;                                                    // 0x03B8(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 Toggled;                                                   // 0x0448(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 Disabled;                                                  // 0x04D8(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	DeadByDaylight_EActionButtonState                  _currentState;                                             // 0x0568(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EActionButtonState                  _previousState;                                            // 0x0569(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KCQ8[0x6];                                     // 0x056A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActionButton");
		return ptr;
	}



	void SetState(DeadByDaylight_EActionButtonState State);
	void SetSlateBrush(const struct FSlateBrush& InBrush);
	void SetPreviousState();
	void SetIcon(const struct FSlateBrush& SlateBrush);
	void PlayBecameAvailableAnimation();
};

// Class DeadByDaylight.BasePerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBasePerkIconStrategy : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BasePerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActivationTimerElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActivationTimerElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActivationTimerIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActivationTimerIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActivationTimerIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActivationTimerRemainingCooldownElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActivationTimerRemainingCooldownElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActivationTimerRemainingPercentIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActivationTimerRemainingPercentIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActivationTimerRemainingPercentIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveOnTimerOrApplicablePerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActiveOnTimerOrApplicablePerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActiveOnTimerOrApplicablePerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveOnTimerPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActiveOnTimerPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActiveOnTimerPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActiveWhenApplicableAndActivationAndCooldownPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveWhenApplicableAndNotCampingPerkIconStrategy
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UActiveWhenApplicableAndNotCampingPerkIconStrategy : public UBasePerkIconStrategy
{
public:
	unsigned char                                      UnknownData_PJGM[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActiveWhenApplicableAndNotCampingPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveWhenApplicablePerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActiveWhenApplicablePerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActiveWhenApplicablePerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActiveWhenKOdAndCooldownTimerPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActiveWhenKOdAndCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActiveWhenKOdAndCooldownTimerPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ActorClipperComponent
// 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
class UActorClipperComponent : public UActorComponent
{
public:
	class USphereComponent*                            Shape;                                                     // 0x00B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class AActor*, struct FClippedActor>          _clippedActors;                                            // 0x00C0(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UPrimitiveCollection>         _clippables;                                               // 0x0110(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OIWR[0x10];                                    // 0x0118(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActorClipperComponent");
		return ptr;
	}



	void SetPrimitiveCollection(class UPrimitiveCollection* clippables);
	void SetClippingEnabled(bool Enabled);
	void OnOwnerLocallyObservedChanged(bool locallyObserved);
};

// Class DeadByDaylight.ActorComponentExt
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UActorComponentExt : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActorComponentExt");
		return ptr;
	}



	bool STATIC_IsLocallyObserved(class UActorComponent* ActorComponent, bool recursiveSearch);
	bool STATIC_IsLocallyControlled(class UActorComponent* ActorComponent, bool recursiveSearch);
	bool STATIC_HasAuthority(class UActorComponent* ActorComponent);
	class AActor* STATIC_GetValidatedOwner(class UActorComponent* ActorComponent);
	class ACamperPlayer* STATIC_GetOwningSurvivorChecked(class UActorComponent* ActorComponent, bool recursiveSearch);
	class ACamperPlayer* STATIC_GetOwningSurvivor(class UActorComponent* ActorComponent, bool recursiveSearch);
	class ADBDPlayer* STATIC_GetOwningPlayerInHierarchy(class UActorComponent* ActorComponent);
	class ADBDPlayer* STATIC_GetOwningPlayerChecked(class UActorComponent* ActorComponent, bool recursiveSearch);
	class ADBDPlayer* STATIC_GetOwningPlayer(class UActorComponent* ActorComponent, bool recursiveSearch);
	class APawn* STATIC_GetOwningPawnChecked(class UActorComponent* ActorComponent, bool recursiveSearch);
	class APawn* STATIC_GetOwningPawn(class UActorComponent* ActorComponent, bool recursiveSearch);
	class ASlasherPlayer* STATIC_GetOwningKiller(class UActorComponent* ActorComponent, bool recursiveSearch);
	class ACharacter* STATIC_GetOwningCharacterChecked(class UActorComponent* ActorComponent, bool recursiveSearch);
	class ACharacter* STATIC_GetOwningCharacter(class UActorComponent* ActorComponent, bool recursiveSearch);
};

// Class DeadByDaylight.ActorDependency
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UActorDependency : public UActorComponent
{
public:
	TArray<struct FDependency>                         Dependencies;                                              // 0x00B8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActorDependency");
		return ptr;
	}



};

// Class DeadByDaylight.ActorDetectorComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UActorDetectorComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnActorDetected;                                           // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              CollectedTypes;                                            // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                         _primitive;                                                // 0x00D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActorDetectorComponent");
		return ptr;
	}



	void SetDetectionPrimitive(class UPrimitiveComponent* Primitive);
	void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class DeadByDaylight.ActorKnowledgeCollection
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UActorKnowledgeCollection : public UActorComponent
{
public:
	TArray<class AActor*>                              _actors;                                                   // 0x00B8(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _available;                                                // 0x00C8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NPHM[0x7];                                     // 0x00C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ACharacter*                                  _possessor;                                                // 0x00D0(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EKnowledgeSharingType               _sharing;                                                  // 0x00D8(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3ZM4[0x7];                                     // 0x00D9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActorKnowledgeCollection");
		return ptr;
	}



	void Local_SetAvailable(bool value);
	bool IsAvailable(class ACharacter* Character);
	bool Contains(class AActor* Actor);
	void Authority_SetSharingType(DeadByDaylight_EKnowledgeSharingType value);
	void Authority_SetPossessor(class ACharacter* possessor);
	void Authority_SetAvailable(bool value);
	void Authority_Remove(class AActor* Actor);
	void Authority_Empty();
	void Authority_Append(TArray<class AActor*> Actors);
	bool Authority_Add(class AActor* Actor);
};

// Class DeadByDaylight.ActorSpawner
// 0x00B8 (FullSize[0x02C8] - InheritedSize[0x0210])
class UActorSpawner : public USceneComponent
{
public:
	unsigned char                                      UnknownData_MOVS[0x10];                                    // 0x0210(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_EGameplayElementType                Type;                                                      // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9FVP[0x7];                                     // 0x0221(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      Visualization[0x30];                                       // 0x0221(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	bool                                               ActivatedByDefault;                                        // 0x0258(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_38LQ[0x7];                                     // 0x0259(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FActorSpawnerProperties>             ActivatedSceneElement;                                     // 0x0260(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FActorSpawnerProperties>             DeactivatedSceneElement;                                   // 0x0270(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Weight;                                                    // 0x0280(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnCountMax;                                             // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SpawnPriorityTier;                                         // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_70KR[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAsyncActorSpawned;                                       // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8HAW[0x8];                                     // 0x02A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               WeightInfluenceable;                                       // 0x02A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               WeightInfluencer;                                          // 0x02A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YW6S[0x2];                                     // 0x02AA(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Cost;                                                      // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _toSpawn;                                                  // 0x02B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RKN4[0x8];                                     // 0x02B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class AActor>                       _spawnedActorOnAuthority;                                  // 0x02C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActorSpawner");
		return ptr;
	}



	bool UseActivatedElement();
	bool IsEnabled();
	void EditorForceSpawnVisualization();
	void AuthoritySelect(bool selected);
	class AActor* AuthorityGetSpawnedActor();
	void Authority_SpawnActorAsyncEvent();
};

// Class DeadByDaylight.ObjectRandomizer
// 0x0018 (FullSize[0x0228] - InheritedSize[0x0210])
class UObjectRandomizer : public USceneComponent
{
public:
	TArray<class UActorSpawner*>                       Spawners;                                                  // 0x0210(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MinPopulation;                                             // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxPopulation;                                             // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ObjectRandomizer");
		return ptr;
	}



};

// Class DeadByDaylight.ActorSpawnerRandomizer
// 0x0028 (FullSize[0x0250] - InheritedSize[0x0228])
class UActorSpawnerRandomizer : public UObjectRandomizer
{
public:
	TArray<struct FSpawnerElement>                     ActivatedSpawnerContentLists;                              // 0x0228(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FSpawnerElement>                     DeactivatedSpawnerContentLists;                            // 0x0238(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TQPI[0x8];                                     // 0x0248(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActorSpawnerRandomizer");
		return ptr;
	}



};

// Class DeadByDaylight.ActorVariationSpawner
// 0x0060 (FullSize[0x0270] - InheritedSize[0x0210])
class UActorVariationSpawner : public USceneComponent
{
public:
	unsigned char                                      Visualization[0x30];                                       // 0x0210(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FActorVariationElements>             Variations;                                                // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F3S7[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _toSpawn;                                                  // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QMBM[0x10];                                    // 0x0260(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ActorVariationSpawner");
		return ptr;
	}



};

// Class DeadByDaylight.AIBotsManager
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UAIBotsManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_OYVO[0x20];                                    // 0x0038(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AIBotsManager");
		return ptr;
	}



};

// Class DeadByDaylight.AICharacterBehaviourData
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAICharacterBehaviourData : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterBehaviourData");
		return ptr;
	}



};

// Class DeadByDaylight.AICharacterBehaviour
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UAICharacterBehaviour : public UObject
{
public:
	unsigned char                                      UnknownData_EO8J[0x28];                                    // 0x0030(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterBehaviour");
		return ptr;
	}



	void Update(float DeltaTime);
	void Stop();
	void Start();
	void SetEnable(bool enable);
	void Resume();
	void Pause();
	bool IsEnabled();
};

// Class DeadByDaylight.AICharacterBehaviourInteractWithActor
// 0x0038 (FullSize[0x0090] - InheritedSize[0x0058])
class UAICharacterBehaviourInteractWithActor : public UAICharacterBehaviour
{
public:
	class ADBDPlayer*                                  _aiPlayer;                                                 // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADBDAIPlayerController*                      _aiPlayerController;                                       // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAICharacterBehaviourInteractWithActorData*  _behaviourData;                                            // 0x0068(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LK9A[0x20];                                    // 0x0070(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterBehaviourInteractWithActor");
		return ptr;
	}



	void OnMovementFinished(const struct FAIRequestID& RequestID, TEnumAsByte<AIModule_EPathFollowingResult> Result);
};

// Class DeadByDaylight.AICharacterBehaviourDropPallet
// 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
class UAICharacterBehaviourDropPallet : public UAICharacterBehaviourInteractWithActor
{
public:
	unsigned char                                      UnknownData_QFQ8[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterBehaviourDropPallet");
		return ptr;
	}



};

// Class DeadByDaylight.AICharacterBehaviourInteractWithActorData
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UAICharacterBehaviourInteractWithActorData : public UAICharacterBehaviourData
{
public:
	class AActor*                                      TargetActor;                                               // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VUYH[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_ECharacterMovementTypes             characterMovementType;                                     // 0x0048(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               usePathfinding;                                            // 0x0049(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2A9M[0x6];                                     // 0x004A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterBehaviourInteractWithActorData");
		return ptr;
	}



	void WatchGameEventTypes(TArray<struct FGameplayTag> gameEventTypes);
	void WatchGameEventType(const struct FGameplayTag& gameEventType);
	void Init(class AActor* Actor, DeadByDaylight_ECharacterMovementTypes characterMovementType, bool usePathfinding);
};

// Class DeadByDaylight.AICharacterBehaviourInteractWithHook
// 0x0008 (FullSize[0x0098] - InheritedSize[0x0090])
class UAICharacterBehaviourInteractWithHook : public UAICharacterBehaviourInteractWithActor
{
public:
	unsigned char                                      UnknownData_AHQC[0x8];                                     // 0x0090(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterBehaviourInteractWithHook");
		return ptr;
	}



};

// Class DeadByDaylight.AICharacterEscapeCarriedData
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UAICharacterEscapeCarriedData : public UAICharacterBehaviourData
{
public:
	bool                                               _preventWiggleSuccess;                                     // 0x0030(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2UY2[0x7];                                     // 0x0031(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterEscapeCarriedData");
		return ptr;
	}



	void Init(bool preventWiggleSuccess);
};

// Class DeadByDaylight.AICharacterEscapeCarried
// 0x0010 (FullSize[0x0068] - InheritedSize[0x0058])
class UAICharacterEscapeCarried : public UAICharacterBehaviour
{
public:
	class ACamperPlayer*                               _camperPlayer;                                             // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAICharacterEscapeCarriedData*               _behaviourData;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterEscapeCarried");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterEvasionBehaviourData
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UCharacterEvasionBehaviourData : public UAICharacterBehaviourData
{
public:
	class AActor*                                      _hunter;                                                   // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                              _escapePoints;                                             // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minEscapeDist;                                            // 0x0048(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T0F7[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterEvasionBehaviourData");
		return ptr;
	}



	void Init(class AActor* Hunter, TArray<class AActor*> escapePoints, float minEscapeDist);
};

// Class DeadByDaylight.AICharacterEvasionBehaviour
// 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
class UAICharacterEvasionBehaviour : public UAICharacterBehaviour
{
public:
	class ADBDPlayer*                                  _prey;                                                     // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDAIPlayerController*                      _preyAIController;                                         // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      _currentEscapePoint;                                       // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterEvasionBehaviourData*              _characterEvasionData;                                     // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LG42[0x8];                                     // 0x0078(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterEvasionBehaviour");
		return ptr;
	}



	void EscapeDestinationReached(const struct FAIRequestID& RequestID, TEnumAsByte<AIModule_EPathFollowingResult> Result);
};

// Class DeadByDaylight.AICharacterHideInLockerBehaviourData
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UAICharacterHideInLockerBehaviourData : public UAICharacterBehaviourData
{
public:
	unsigned char                                      UnknownData_TGHJ[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_ECharacterMovementTypes             characterMovementType;                                     // 0x0038(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UN5W[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterHideInLockerBehaviourData");
		return ptr;
	}



	void Init(class ALocker* Locker, DeadByDaylight_ECharacterMovementTypes characterMovementType);
};

// Class DeadByDaylight.AICharacterHideInLockerBehaviour
// 0x0038 (FullSize[0x0090] - InheritedSize[0x0058])
class UAICharacterHideInLockerBehaviour : public UAICharacterBehaviour
{
public:
	class ADBDPlayer*                                  _aiPlayer;                                                 // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDAIPlayerController*                      _aiPlayerController;                                       // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KBYN[0x18];                                    // 0x0068(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAICharacterHideInLockerBehaviourData*       _characterHideInLockerData;                                // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F1RC[0x8];                                     // 0x0088(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterHideInLockerBehaviour");
		return ptr;
	}



	void OnMovementFinished(const struct FAIRequestID& RequestID, TEnumAsByte<AIModule_EPathFollowingResult> Result);
};

// Class DeadByDaylight.AICharacterRepairGeneratorBehaviourData
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UAICharacterRepairGeneratorBehaviourData : public UAICharacterBehaviourData
{
public:
	class AGenerator*                                  _generator;                                                // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_ECharacterMovementTypes             _characterMovementType;                                    // 0x0038(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BKKT[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterRepairGeneratorBehaviourData");
		return ptr;
	}



	void Init(class AGenerator* Generator, DeadByDaylight_ECharacterMovementTypes characterMovementType);
};

// Class DeadByDaylight.AICharacterRepairGeneratorBehaviour
// 0x0040 (FullSize[0x0098] - InheritedSize[0x0058])
class UAICharacterRepairGeneratorBehaviour : public UAICharacterBehaviour
{
public:
	unsigned char                                      UnknownData_5SXC[0x10];                                    // 0x0058(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _aiPlayer;                                                 // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDAIPlayerController*                      _aiPlayerController;                                       // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractor*                                 _targetInteractor;                                         // 0x0078(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAICharacterRepairGeneratorBehaviourData*    _characterRepairGeneratorData;                             // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J2IN[0x10];                                    // 0x0088(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AICharacterRepairGeneratorBehaviour");
		return ptr;
	}



	void OnMovementFinished(const struct FAIRequestID& RequestID, TEnumAsByte<AIModule_EPathFollowingResult> Result);
	void OnGeneratorRepairedEventHandler(bool isAutoCompleted);
};

// Class DeadByDaylight.AIHealAllyBehaviourData
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UAIHealAllyBehaviourData : public UAICharacterBehaviourData
{
public:
	class ACamperPlayer*                               _targetAlly;                                               // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AIHealAllyBehaviourData");
		return ptr;
	}



	void Init(class ACamperPlayer* allyToHealTarget);
};

// Class DeadByDaylight.AIHealAllyBehaviour
// 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
class UAIHealAllyBehaviour : public UAICharacterBehaviour
{
public:
	class UAIHealAllyBehaviourData*                    _behaviourData;                                            // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDAIPlayerController*                      _aiController;                                             // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                                  _aiPlayer;                                                 // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AVU6[0x10];                                    // 0x0070(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AIHealAllyBehaviour");
		return ptr;
	}



	void TargetPositionReached(const struct FAIRequestID& RequestID, TEnumAsByte<AIModule_EPathFollowingResult> Result);
	void Init(class ADBDPlayer* Character, class UAICharacterBehaviourData* behaviourData);
};

// Class DeadByDaylight.AimableInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAimableInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AimableInterface");
		return ptr;
	}



};

// Class DeadByDaylight.AimAssistComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UAimAssistComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_UCTQ[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AimAssistComponent");
		return ptr;
	}



};

// Class DeadByDaylight.AIMoveToInteractData
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UAIMoveToInteractData : public UAICharacterBehaviourData
{
public:
	class AActor*                                      _interactActor;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      _targetPositionActor;                                      // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_ECharacterMovementTypes             _characterMovementTypes;                                   // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QE6T[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AIMoveToInteractData");
		return ptr;
	}



	void Init(class AActor* interactActor, DeadByDaylight_ECharacterMovementTypes characterMovementTypes, class AActor* targetPositionActor);
};

// Class DeadByDaylight.AIMoveToInteract
// 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
class UAIMoveToInteract : public UAICharacterBehaviour
{
public:
	class UAIMoveToInteractData*                       _aiMoveToInteractData;                                     // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDAIPlayerController*                      _aiController;                                             // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XHJC[0x8];                                     // 0x0068(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AIMoveToInteract");
		return ptr;
	}



	void InteractionPointReached(const struct FAIRequestID& RequestID, TEnumAsByte<AIModule_EPathFollowingResult> Result);
	void Init(class ADBDPlayer* Character, class UAICharacterBehaviourData* behaviourData);
};

// Class DeadByDaylight.AIMoveToPositionData
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UAIMoveToPositionData : public UAICharacterBehaviourData
{
public:
	class AActor*                                      _positionActor;                                            // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_ECharacterMovementTypes             _movementType;                                             // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _usePathfinding;                                           // 0x0039(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OM3Y[0x6];                                     // 0x003A(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AIMoveToPositionData");
		return ptr;
	}



	void Init(class AActor* positionActor, DeadByDaylight_ECharacterMovementTypes movementType, bool usePathfinding);
};

// Class DeadByDaylight.AIMoveToPosition
// 0x0018 (FullSize[0x0070] - InheritedSize[0x0058])
class UAIMoveToPosition : public UAICharacterBehaviour
{
public:
	class UAIMoveToPositionData*                       _aiBehaviourData;                                          // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDAIPlayerController*                      _aiController;                                             // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QLKS[0x8];                                     // 0x0068(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AIMoveToPosition");
		return ptr;
	}



	void TargetPositionReached(const struct FAIRequestID& RequestID, TEnumAsByte<AIModule_EPathFollowingResult> Result);
	void Init(class ADBDPlayer* Character, class UAICharacterBehaviourData* behaviourData);
};

// Class DeadByDaylight.AIPointOfInterestTargetInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAIPointOfInterestTargetInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AIPointOfInterestTargetInterface");
		return ptr;
	}



};

// Class DeadByDaylight.AISenseConfig_PointOfInterest
// 0x0010 (FullSize[0x0060] - InheritedSize[0x0050])
class UAISenseConfig_PointOfInterest : public UAISenseConfig
{
public:
	class UClass*                                      Implementation;                                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinGeneratorRepairSoundRange;                              // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxGeneratorRepairSoundRange;                              // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISenseConfig_PointOfInterest");
		return ptr;
	}



};

// Class DeadByDaylight.AISense_PointOfInterest
// 0x0010 (FullSize[0x00A0] - InheritedSize[0x0090])
class UAISense_PointOfInterest : public UAISense
{
public:
	TArray<class AActor*>                              _sources;                                                  // 0x0090(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISense_PointOfInterest");
		return ptr;
	}



};

// Class DeadByDaylight.AISenseConfig_Terror
// 0x0068 (FullSize[0x00B8] - InheritedSize[0x0050])
class UAISenseConfig_Terror : public UAISenseConfig
{
public:
	class UClass*                                      Implementation;                                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxBreathingSoundRange;                                    // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PV25[0x4];                                     // 0x005C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<DeadByDaylight_EAITerrorLevel, float>         TerrorRanges;                                              // 0x0060(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FAISenseAffiliationFilter                   DetectionByAffiliation;                                    // 0x00B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8GTD[0x4];                                     // 0x00B4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISenseConfig_Terror");
		return ptr;
	}



};

// Class DeadByDaylight.AISenseEvent_Terror
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UAISenseEvent_Terror : public UAISenseEvent
{
public:
	struct FAITerrorEvent                              Event;                                                     // 0x0030(0x0028) (Edit, BlueprintVisible, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISenseEvent_Terror");
		return ptr;
	}



};

// Class DeadByDaylight.AISense_Terror
// 0x0060 (FullSize[0x00F0] - InheritedSize[0x0090])
class UAISense_Terror : public UAISense
{
public:
	TArray<struct FAITerrorEvent>                      _events;                                                   // 0x0090(0x0010) (ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_S7LP[0x50];                                    // 0x00A0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISense_Terror");
		return ptr;
	}



	void STATIC_ReportTerrorEvent(class UObject* worldContextObj, const struct FVector& Location, class AActor* Instigator, class UTerrorRadiusEmitterComponent* TerrorEmitter);
};

// Class DeadByDaylight.AISenseConfig_Trail
// 0x0018 (FullSize[0x0068] - InheritedSize[0x0050])
class UAISenseConfig_Trail : public UAISenseConfig
{
public:
	class UClass*                                      Implementation;                                            // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRange;                                                  // 0x0058(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PeripheralVisionAngleDegrees;                              // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAISenseAffiliationFilter                   DetectionByAffiliation;                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ENBC[0x4];                                     // 0x0064(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISenseConfig_Trail");
		return ptr;
	}



};

// Class DeadByDaylight.AISenseEvent_Trail
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UAISenseEvent_Trail : public UAISenseEvent
{
public:
	struct FAITrailEvent                               Event;                                                     // 0x0030(0x0030) (Edit, BlueprintVisible, NoDestructor, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISenseEvent_Trail");
		return ptr;
	}



};

// Class DeadByDaylight.AISense_Trail
// 0x0060 (FullSize[0x00F0] - InheritedSize[0x0090])
class UAISense_Trail : public UAISense
{
public:
	TArray<struct FAITrailEvent>                       Events;                                                    // 0x0090(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YOV7[0x50];                                    // 0x00A0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISense_Trail");
		return ptr;
	}



	void STATIC_ReportTrailEvent(class UObject* worldContextObj, const struct FVector& Location, class AActor* Instigator, const struct FGameplayTag& IgnoreOnPerkTag, float lifetime);
};

// Class DeadByDaylight.AISlasherChaseAndAttackBehaviourData
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UAISlasherChaseAndAttackBehaviourData : public UAICharacterBehaviourData
{
public:
	class ACamperPlayer*                               _targetSurvivor;                                           // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sqrtAttackRangeDistance;                                  // 0x0038(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sqrtMaxTargetPositionDiff;                                // 0x003C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISlasherChaseAndAttackBehaviourData");
		return ptr;
	}



	void Init(class ACamperPlayer* targetSurvivor, float attackRangeDistance, float locationDistance);
};

// Class DeadByDaylight.AISlasherChaseAndAttackBehaviour
// 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
class UAISlasherChaseAndAttackBehaviour : public UAICharacterBehaviour
{
public:
	class UAISlasherChaseAndAttackBehaviourData*       _behaviourData;                                            // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASlasherPlayer*                              _slasherPlayer;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDAIPlayerController*                      _slasherAIPlayerController;                                // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3DBK[0x10];                                    // 0x0070(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISlasherChaseAndAttackBehaviour");
		return ptr;
	}



};

// Class DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviourData
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UAISlasherMoveToGrabSurvivorBehaviourData : public UAICharacterBehaviourData
{
public:
	class ACamperPlayer*                               _targetSurvivor;                                           // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviourData");
		return ptr;
	}



	void Init(class ACamperPlayer* targetSurvivor);
};

// Class DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviour
// 0x0028 (FullSize[0x0080] - InheritedSize[0x0058])
class UAISlasherMoveToGrabSurvivorBehaviour : public UAICharacterBehaviour
{
public:
	class UAISlasherMoveToGrabSurvivorBehaviourData*   _behaviourData;                                            // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ASlasherPlayer*                              _slasherPlayer;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDAIPlayerController*                      _slasherAIPlayerController;                                // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z0AB[0x10];                                    // 0x0070(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AISlasherMoveToGrabSurvivorBehaviour");
		return ptr;
	}



};

// Class DeadByDaylight.AlertsScreen
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class UAlertsScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_BDWY[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AlertsScreen");
		return ptr;
	}



	void RewardAlertSequenceCompleted();
};

// Class DeadByDaylight.AlwaysVisiblePerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAlwaysVisiblePerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AlwaysVisiblePerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.Gate
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class AGate : public AActor
{
public:
	TArray<float>                                      InteractionInputs;                                         // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InteractionOutput;                                         // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WUGD[0x4];                                     // 0x0244(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Gate");
		return ptr;
	}



};

// Class DeadByDaylight.AndGate
// 0x0000 (FullSize[0x0248] - InheritedSize[0x0248])
class AAndGate : public AGate
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AndGate");
		return ptr;
	}



};

// Class DeadByDaylight.AnimationMontageSlave
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UAnimationMontageSlave : public UActorComponent
{
public:
	unsigned char                                      UnknownData_421C[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AnimationMontageSlave");
		return ptr;
	}



	void SetLeader(class UMontagePlayer* Leader);
	void OnMontageStopped(const struct FAnimationMontageDescriptor& ID);
	void OnMontageStarted(const struct FAnimationMontageDescriptor& ID, float Rate);
};

// Class DeadByDaylight.AnimNotifyState_HideCustomizationAttachments
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UAnimNotifyState_HideCustomizationAttachments : public UAnimNotifyState
{
public:
	DeadByDaylight_ECustomizationCategory              Category;                                                  // 0x0038(0x0001) (Edit, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W42Y[0x7];                                     // 0x0039(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AnimNotifyState_HideCustomizationAttachments");
		return ptr;
	}



};

// Class DeadByDaylight.AnimTagProvider
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAnimTagProvider : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AnimTagProvider");
		return ptr;
	}



};

// Class DeadByDaylight.ApplicableActivationTimerElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UApplicableActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ApplicableActivationTimerElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ApplicableActivationTimerRemainingCooldownElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UApplicableActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ApplicableActivationTimerRemainingCooldownElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ApplicableActivationTimerRemainingIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UApplicableActivationTimerRemainingIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ApplicableActivationTimerRemainingIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ArchiveBaseScreen
// 0x0030 (FullSize[0x0150] - InheritedSize[0x0120])
class UArchiveBaseScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_RWLI[0x30];                                    // 0x0120(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchiveBaseScreen");
		return ptr;
	}



	void OnTabSelected(int Index);
	void OnSelectHelpButton();
};

// Class DeadByDaylight.ArchiveIntroScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UArchiveIntroScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchiveIntroScreen");
		return ptr;
	}



};

// Class DeadByDaylight.ArchivePassPurchasePopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UArchivePassPurchasePopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchivePassPurchasePopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.ArchivePastStoriesScreen
// 0x0018 (FullSize[0x0168] - InheritedSize[0x0150])
class UArchivePastStoriesScreen : public UArchiveBaseScreen
{
public:
	unsigned char                                      UnknownData_86IN[0x18];                                    // 0x0150(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchivePastStoriesScreen");
		return ptr;
	}



	void OnStorySelected(const struct FString& storyId);
};

// Class DeadByDaylight.ArchiveRewardsScreen
// 0x0078 (FullSize[0x01C8] - InheritedSize[0x0150])
class UArchiveRewardsScreen : public UArchiveBaseScreen
{
public:
	unsigned char                                      UnknownData_ZE2W[0x78];                                    // 0x0150(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchiveRewardsScreen");
		return ptr;
	}



	void OnRotateCharacter(float mouseDistanceChange);
	void OnRewardItemClicked(const struct FString& ItemId);
	void OnRewardCurrencyClicked(int currencyType);
	void OnPurchaseTier();
	void OnPurchasePremiumPass();
};

// Class DeadByDaylight.ArchivesHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UArchivesHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchivesHelper");
		return ptr;
	}



};

// Class DeadByDaylight.ArchivesManager
// 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
class UArchivesManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_CXHB[0x20];                                    // 0x0038(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UArchiveStoriesContainer*                    _storiesContainer;                                         // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UArchiveVignettesContainer*                  _vignettesContainer;                                       // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URewardTrackContainer*                       _rewardTrackContainer;                                     // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchivesManager");
		return ptr;
	}



};

// Class DeadByDaylight.ArchivesSpecialBehavioursHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UArchivesSpecialBehavioursHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchivesSpecialBehavioursHelper");
		return ptr;
	}



};

// Class DeadByDaylight.ArchiveStoriesContainer
// 0x0278 (FullSize[0x02A8] - InheritedSize[0x0030])
class UArchiveStoriesContainer : public UObject
{
public:
	unsigned char                                      UnknownData_O1DF[0x180];                                   // 0x0030(0x0180) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URewardTrackContainer*                       _rewardTrackContainer;                                     // 0x01B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4I9R[0xC8];                                    // 0x01B8(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWalletHandler*                              _wallet;                                                   // 0x0280(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UArchiveVignettesContainer*                  _vignettesContainer;                                       // 0x0288(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1TQQ[0x18];                                    // 0x0290(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchiveStoriesContainer");
		return ptr;
	}



};

// Class DeadByDaylight.ArchiveStoryScreen
// 0x0130 (FullSize[0x0280] - InheritedSize[0x0150])
class UArchiveStoryScreen : public UArchiveBaseScreen
{
public:
	unsigned char                                      UnknownData_ZX4E[0x130];                                   // 0x0150(0x0130) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchiveStoryScreen");
		return ptr;
	}



	void OnVignetteSelected(const struct FString& VignetteId);
	void OnStoryMapCreated();
	void OnStoryLevelCompletedOrMasteredAnimationDone(bool wasJustCompleted);
	void OnReceiveNodeCoordinates(const struct FString& nodeID, int PosX, int PosY);
	void OnReceiveNeighbor(const struct FString& nodeID, const struct FString& neighborId);
	void OnQuestsSelected();
	void OnPlayVoiceOver(bool startPlaying, int entryIndex);
	void OnPlayCinematic(int Index);
	void OnNodeSelected(const struct FString& nodeID);
	void OnLevelSelected(int levelIndex);
	void OnJournalSelected();
	void OnEntrySelected(int Index);
	void OnAutoplayChanged(bool autoplayActive, int entryIndex);
	void OnAllNodesReceived();
};

// Class DeadByDaylight.ArchiveTierPurchasePopupScreen
// 0x0018 (FullSize[0x0158] - InheritedSize[0x0140])
class UArchiveTierPurchasePopupScreen : public UGenericPopupScreen
{
public:
	unsigned char                                      UnknownData_OL0U[0x18];                                    // 0x0140(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchiveTierPurchasePopupScreen");
		return ptr;
	}



	void OnConfirmPurchase(int tiersToPurchaseNumber);
};

// Class DeadByDaylight.ArchiveVignettesContainer
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class UArchiveVignettesContainer : public UObject
{
public:
	unsigned char                                      UnknownData_72SS[0xC0];                                    // 0x0030(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchiveVignettesContainer");
		return ptr;
	}



};

// Class DeadByDaylight.ArchiveWidgetScreen
// 0x0030 (FullSize[0x0150] - InheritedSize[0x0120])
class UArchiveWidgetScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_H1MZ[0x30];                                    // 0x0120(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ArchiveWidgetScreen");
		return ptr;
	}



	void OnRewardsButtonClick();
	void OnQuestsButtonClick();
};

// Class DeadByDaylight.AssetLibrary
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UAssetLibrary : public UObject
{
public:
	unsigned char                                      UnknownData_ETX4[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObjectLibrary*                              _objectLibrary;                                            // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9S1N[0x64];                                    // 0x0040(0x0064) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              SecondsDelayBetweenBatch;                                  // 0x00A4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V2RX[0x8];                                     // 0x00A8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.AssetLibraryManager
// 0x00D0 (FullSize[0x0100] - InheritedSize[0x0030])
class UAssetLibraryManager : public UObject
{
public:
	unsigned char                                      UnknownData_1TTT[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObject*                                     _worldContextObject;                                       // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<int, class UCharacterItemsAssetLibrary*>      _characterItemsAssetLibrary;                               // 0x0048(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UIniAssetLibrary*                            _globalAssetLibrary;                                       // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMenuAssetLibrary*                           _menuAssetLibrary;                                         // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameAssetLibrary*                           _gameAssetLibrary;                                         // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTutorialAssetLibrary*                       _tutorialAssetLibrary;                                     // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XW1Z[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class Ushopmanager*                                _shopManager;                                              // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4VOW[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAssetLibraryLoader>                 _loadingList;                                              // 0x00D8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                CharacterItemsAssetLoadCountPerChunk;                      // 0x00E8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                BlindPackAssetLoadCountPerChunk;                           // 0x00EC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MenuAssetLoadCountPerChunk;                                // 0x00F0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                GlobalAssetLoadCountPerChunk;                              // 0x00F4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                GameAssetLoadCountPerChunk;                                // 0x00F8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4J48[0x4];                                     // 0x00FC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AssetLibraryManager");
		return ptr;
	}



};

// Class DeadByDaylight.AssetUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAssetUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AssetUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaCamperInitializer
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UAtlantaCamperInitializer : public UActorComponent
{
public:
	struct FVector                                     HeartbeatOffset;                                           // 0x00B8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5LSW[0xC];                                     // 0x00C4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaCamperInitializer");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaCustomGameUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAtlantaCustomGameUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaCustomGameUtilities");
		return ptr;
	}



	bool STATIC_IsInCustomGameLobby(class UDBDGameInstance* GameInstance);
	bool STATIC_IsCustomGameEnabled();
};

// Class DeadByDaylight.BaseTooltipWidget
// 0x0038 (FullSize[0x0338] - InheritedSize[0x0300])
class UBaseTooltipWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  TitleLabel;                                                // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                TooltipContainer;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGHtmlRichText*                            DescriptionLabel;                                          // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     CloseButton;                                               // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R57J[0x10];                                    // 0x0320(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               TooltipOpeningSound;                                       // 0x0330(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BaseTooltipWidget");
		return ptr;
	}



	void OnQuitButtonClicked();
};

// Class DeadByDaylight.AtlantaCustomizationTooltipWidget
// 0x0018 (FullSize[0x0350] - InheritedSize[0x0338])
class UAtlantaCustomizationTooltipWidget : public UBaseTooltipWidget
{
public:
	class UImage*                                      SmokeImage;                                                // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationTooltipHeaderWidget*        Header;                                                    // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCustomizationTooltipContentWidget*       Content;                                                   // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaCustomizationTooltipWidget");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaDeepLinkSubsystem
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
class UAtlantaDeepLinkSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_NBX4[0x28];                                    // 0x0038(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaDeepLinkSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.DisplayStand
// 0x0170 (FullSize[0x03A0] - InheritedSize[0x0230])
class ADisplayStand : public AActor
{
public:
	unsigned char                                      UnknownData_FYHH[0x18];                                    // 0x0230(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      _currentActorDisplayed;                                    // 0x0248(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CTWN[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _currentActorDisplayedClass;                               // 0x0258(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _nextActorToDisplayClass;                                  // 0x0260(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U7T9[0x28];                                    // 0x0268(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UClass*, struct FTransform>             _offsetByClass;                                            // 0x0290(0x0050) (Edit, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	TMap<class UClass*, bool>                          _enableRotationByClass;                                    // 0x02E0(0x0050) (Edit, DisableEditOnTemplate, NativeAccessSpecifierPrivate)
	unsigned char                                      _defaultCharmClassDisplayable[0x30];                       // 0x0330(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_7TQJ[0x29];                                    // 0x0360(0x0029) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _useOffsetMenuAnimations;                                  // 0x0389(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _displayDummyCharacter;                                    // 0x038A(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_00KM[0x1];                                     // 0x038B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCharacterDropdown                          _characterDropdown;                                        // 0x038C(0x0008) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KEAD[0xC];                                     // 0x0394(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DisplayStand");
		return ptr;
	}



	void OnCurrentActorDestroyed(class AActor* DestroyedActor);
};

// Class DeadByDaylight.AtlantaDisplayStand
// 0x0010 (FullSize[0x03B0] - InheritedSize[0x03A0])
class AAtlantaDisplayStand : public ADisplayStand
{
public:
	class USceneComponent*                             SurvivorPositionMarker;                                    // 0x03A0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             KillerPositionMarker;                                      // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaDisplayStand");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaEventsTemplateDataAsset
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UAtlantaEventsTemplateDataAsset : public UPrimaryDataAsset
{
public:
	TMap<DeadByDaylight_EEventsType, class UClass*>    Data;                                                      // 0x0038(0x0050) (Edit, Protected, UObjectWrapper, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaEventsTemplateDataAsset");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaFriendsListScreenUMG
// 0x0080 (FullSize[0x01A0] - InheritedSize[0x0120])
class UAtlantaFriendsListScreenUMG : public UScreenBase
{
public:
	unsigned char                                      UnknownData_4U7L[0x78];                                    // 0x0120(0x0078) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGAtlantaFriendListScreen*                 _atlantaFriendListScreen;                                  // 0x0198(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaFriendsListScreenUMG");
		return ptr;
	}



	void HandleResearchButtonClicked(const struct FText& searchInput);
	void HandleClosedButtonClicked();
};

// Class DeadByDaylight.AtlantaHeartbeatActor
// 0x0048 (FullSize[0x0278] - InheritedSize[0x0230])
class AAtlantaHeartbeatActor : public AActor
{
public:
	bool                                               IsHeartbeatShown;                                          // 0x0230(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N4X6[0x47];                                    // 0x0231(0x0047) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaHeartbeatActor");
		return ptr;
	}



	void ShowHeartbeat();
	void SetHeartbeatIntensity(float heartbeatIntensity);
	void SetHeartbeatAnimationSpeedRate(float speedRate);
	void OnLocallyObservedChanged(class ADBDPlayer* Player);
	void HideHeartbeat();
};

// Class DeadByDaylight.AtlantaHudDirectionalStick
// 0x0048 (FullSize[0x0348] - InheritedSize[0x0300])
class UAtlantaHudDirectionalStick : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                JoystickAnimationPanel;                                    // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ContainerToRotate;                                         // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ArrowsContainer;                                           // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      JoystickLockImage;                                         // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      JoystickOn;                                                // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                AutoRunContainer;                                          // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isMovementLockAnimationActive;                            // 0x0330(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AM6N[0x17];                                    // 0x0331(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaHudDirectionalStick");
		return ptr;
	}



	void SetMovementLockAnimationStatus(bool value);
};

// Class DeadByDaylight.AtlantaHudLookBackJoystick
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UAtlantaHudLookBackJoystick : public UMobileBaseUserWidget
{
public:
	class UGridPanel*                                  TutorialAnimContainer;                                     // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaHudLookBackJoystick");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaHudPowerAttackJoystick
// 0x0050 (FullSize[0x0350] - InheritedSize[0x0300])
class UAtlantaHudPowerAttackJoystick : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_MSB1[0x8];                                     // 0x0300(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCanvasPanel*                                AnimationContainer;                                        // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       _availableAnimationName;                                   // 0x0310(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       _fadeOutAnimationName;                                     // 0x031C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       _tutoStartAnimationName;                                   // 0x0328(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       _tutoLoopAnimationName;                                    // 0x0334(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      Icon;                                                      // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LWVF[0x8];                                     // 0x0348(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaHudPowerAttackJoystick");
		return ptr;
	}



	void OnFinishedTutorialAnimationIn();
	void OnFinishedAvailableAnimation();
};

// Class DeadByDaylight.LobbyLevel
// 0x0078 (FullSize[0x02B0] - InheritedSize[0x0238])
class ALobbyLevel : public ALevelScriptActor
{
public:
	unsigned char                                      UnknownData_7QVY[0x48];                                    // 0x0238(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ADisplayStand*>                       _registeredDisplayStands;                                  // 0x0280(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EWorldFlowEvent                     LobbyLoadedEvent;                                          // 0x0290(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JHET[0x1F];                                    // 0x0291(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LobbyLevel");
		return ptr;
	}



	void OnShopSubLevelLoaded();
	void OnLobbySubLevelLoaded();
};

// Class DeadByDaylight.AtlantaLobbyLevel
// 0x0040 (FullSize[0x02F0] - InheritedSize[0x02B0])
class AAtlantaLobbyLevel : public ALobbyLevel
{
public:
	unsigned char                                      UnknownData_24O7[0x10];                                    // 0x02B0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLightingChannels                           ForefrontLightingChannel;                                  // 0x02C0(0x0001) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	struct FLightingChannels                           BackgroundLightingChannel;                                 // 0x02C1(0x0001) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O0L9[0x6];                                     // 0x02C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AAtlantaOfflineLobbyCamera*                  _offlineLobbyCamera;                                       // 0x02C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      _roleSelectionLobbyCameraPosition;                         // 0x02D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      _characterSelectionLobbyCameraPosition;                    // 0x02D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      _loadoutSelectionLobbyCameraPosition;                      // 0x02E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_21FH[0x8];                                     // 0x02E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaLobbyLevel");
		return ptr;
	}



	void OnFrontPawnSpawned(class AActor* forefrontPawn);
	void OnBackPawnSpawned(class AActor* backgroundPawn);
};

// Class DeadByDaylight.AtlantaNavigationScreen
// 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
class UAtlantaNavigationScreen : public UScreenBase
{
public:
	class UUMGAtlantaNavigationScreen*                 _umgScreen;                                                // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaNavigationScreen");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaObjectiveWidget
// 0x0068 (FullSize[0x0368] - InheritedSize[0x0300])
class UAtlantaObjectiveWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  ObjectiveLabel;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0U8J[0x54];                                    // 0x0308(0x0054) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _totalFadeOutTime;                                         // 0x035C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _polynomialOrder;                                          // 0x0360(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J675[0x4];                                     // 0x0364(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaObjectiveWidget");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaOfflineLobbyCamera
// 0x0010 (FullSize[0x07B0] - InheritedSize[0x07A0])
class AAtlantaOfflineLobbyCamera : public ACameraActor
{
public:
	float                                              ZCameraPositionOffsetMultiplier;                           // 0x07A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4C2T[0x4];                                     // 0x07A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _kDefaultAspectRatio;                                      // 0x07A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C5GW[0x4];                                     // 0x07AC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaOfflineLobbyCamera");
		return ptr;
	}



	void SetCameraRotation(const struct FRotator& rotationVector);
	void SetCameraPosition(const struct FVector& positionVector);
};

// Class DeadByDaylight.AtlantaPartyFlowHandler
// 0x0248 (FullSize[0x0278] - InheritedSize[0x0030])
class UAtlantaPartyFlowHandler : public UObject
{
public:
	unsigned char                                      UnknownData_NCSD[0x248];                                   // 0x0030(0x0248) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaPartyFlowHandler");
		return ptr;
	}



	void DisplayPartyFlowHandlerInfo();
};

// Class DeadByDaylight.AtlantaPartyFlowUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAtlantaPartyFlowUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaPartyFlowUtilities");
		return ptr;
	}



	bool STATIC_IsCurrentPlayerInParty();
	bool STATIC_IsCurrentPlayerAloneInParty();
};

// Class DeadByDaylight.AtlantaInstalledContent
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UAtlantaInstalledContent : public UObject
{
public:
	unsigned char                                      UnknownData_Q7WJ[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaInstalledContent");
		return ptr;
	}



	bool Mount(int PakOrder, const struct FString& MountPoint);
	float GetInstalledContentSize();
	float GetFreeDiskSpace();
};

// Class DeadByDaylight.AtlantaPendingContent
// 0x0040 (FullSize[0x0090] - InheritedSize[0x0050])
class UAtlantaPendingContent : public UAtlantaInstalledContent
{
public:
	unsigned char                                      UnknownData_YSHT[0x40];                                    // 0x0050(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaPendingContent");
		return ptr;
	}



	void StartInstall(const struct FScriptDelegate& OnSucceeded, const struct FScriptDelegate& OnFailed);
	float GetTotalDownloadedSize();
	float GetRequiredDiskSpace();
	bool GetIsDownloading();
	float GetInstallProgress();
	struct FText GetDownloadStatusText();
	float GetDownloadSpeed();
	float GetDownloadSize();
};

// Class DeadByDaylight.AtlantaPatchingLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAtlantaPatchingLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaPatchingLibrary");
		return ptr;
	}



	void STATIC_RequestContent(const struct FString& RemoteManifestURL, const struct FString& CloudURL, const struct FString& InstallDirectory, const struct FScriptDelegate& OnSucceeded, const struct FScriptDelegate& OnFailed, class UAtlantaPendingContent* MobilePendingContent);
	void STATIC_PrintPakLocations();
	bool STATIC_HasActiveWiFiConnection();
	TArray<struct FString> STATIC_GetSupportedPlatformNames();
	class UAtlantaInstalledContent* STATIC_GetInstalledContent(const struct FString& InstallDirectory, const struct FString& ManifestFilename);
	struct FString STATIC_GetActiveDeviceProfileName();
};

// Class DeadByDaylight.AtlantaPromptWidget
// 0x0068 (FullSize[0x0368] - InheritedSize[0x0300])
class UAtlantaPromptWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  PromptLabel;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Y1D6[0x10];                                    // 0x0308(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<DeadByDaylight_EPromptType, struct FString>   AudioCues;                                                 // 0x0318(0x0050) (Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaPromptWidget");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaRitualsManager
// 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
class UAtlantaRitualsManager : public UObject
{
public:
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EL7Z[0x90];                                    // 0x0038(0x0090) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaRitualsManager");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaRitualsScreen
// 0x0068 (FullSize[0x0188] - InheritedSize[0x0120])
class UAtlantaRitualsScreen : public UScreenBase
{
public:
	class UUMGAtlantaRitualsScreen*                    _umgScreen;                                                // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8277[0x60];                                    // 0x0128(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaRitualsScreen");
		return ptr;
	}



	void OnRefreshRitual();
	void OnExitRequested();
	void OnClaimRewards(int ritualId);
};

// Class DeadByDaylight.AtlantaRoleSelectionScreen
// 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
class UAtlantaRoleSelectionScreen : public UScreenBase
{
public:
	class UUMGRoleSelectionScreen*                     _umgScreen;                                                // 0x0120(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaRoleSelectionScreen");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaSaveGame
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UAtlantaSaveGame : public USaveGame
{
public:
	struct FString                                     SaveSlotName;                                              // 0x0030(0x0010) (Edit, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint32_t                                           UserIndex;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LastGenericLoadingImageId;                                 // 0x0044(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       LastSpecificLoadingImageId;                                // 0x0050(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsLastSpecificImage;                                       // 0x005C(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_RI43[0x3];                                     // 0x005D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaSaveGame");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaSkillCheckWidget
// 0x0090 (FullSize[0x0390] - InheritedSize[0x0300])
class UAtlantaSkillCheckWidget : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                SkillCheckArea;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      HitArea;                                                   // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      Hit;                                                       // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      OrangeSmoke;                                               // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      BonusArea;                                                 // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      StartMarker;                                               // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      EndMarker;                                                 // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                HitAreaContainer;                                          // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                BonusAreaContainer;                                        // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                HitAreaStartMarkerContainer;                               // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                HitAreaEndMarkerContainer;                                 // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                MarkerContainer;                                           // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                HexColor;                                                  // 0x0360(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FLinearColor                                DefaultColor;                                              // 0x0370(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _isPlayAnimation;                                          // 0x0380(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_95P1[0x3];                                     // 0x0381(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PathCoveredAngle;                                          // 0x0384(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7QOR[0x8];                                     // 0x0388(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaSkillCheckWidget");
		return ptr;
	}



	void SetHexed(bool IsHexed);
	void SetActive(bool Active);
	void OnIsActiveChanged(bool IsActive);
	bool IsActive();
};

// Class DeadByDaylight.AtlantaTooltipManager
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UAtlantaTooltipManager : public UObject
{
public:
	class UBaseTooltipWidget*                          _activeTooltip;                                            // 0x0030(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGCloseTooltipWidget*                      _closeTooltipWidget;                                       // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2XG7[0x28];                                    // 0x0040(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaTooltipManager");
		return ptr;
	}



	void TryCloseActiveTooltipWithWidget();
	bool TryCloseActiveTooltip();
};

// Class DeadByDaylight.AtlantaTooltipUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAtlantaTooltipUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaTooltipUtilities");
		return ptr;
	}



	bool STATIC_TryCloseActiveTooltip();
};

// Class DeadByDaylight.TutorialLevel
// 0x0040 (FullSize[0x0278] - InheritedSize[0x0238])
class ATutorialLevel : public ALevelScriptActor
{
public:
	bool                                               _tutorialStarted;                                          // 0x0238(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4KL6[0x3F];                                    // 0x0239(0x003F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TutorialLevel");
		return ptr;
	}



	void StartTutorial();
	void SetHandledTutorialStep(DeadByDaylight_ETutorialStep tutorialStep);
	void RemoveObjective(const struct FName& ObjectiveId);
	void OnTutorialStepUpdated(DeadByDaylight_ETutorialStep tutorialStep);
	void OnNotificationDismissed(const struct FName& notificationId);
	void HandleTutorialStepReached();
	void HandleNotificationDismissed(const struct FName& notificationId);
	void DisplayNotification(const struct FName& notificationId, float Time);
	void DisplayBlockingNotification(const struct FName& notificationId);
	void CompleteObjective(const struct FName& ObjectiveId);
	void AddObjective(const struct FName& ObjectiveId);
};

// Class DeadByDaylight.AtlantaTutorialLevel
// 0x00B0 (FullSize[0x0328] - InheritedSize[0x0278])
class AAtlantaTutorialLevel : public ATutorialLevel
{
public:
	unsigned char                                      UnknownData_RXU4[0xB0];                                    // 0x0278(0x00B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaTutorialLevel");
		return ptr;
	}



	void StartCameraFadeIn();
	void SetTutorialElements();
	void SetTutorialElement(const struct FString& elementKey, class AActor* elementToSet);
	void SetLocallyControlledPlayer(class ADBDPlayer* locallyControllerPlayer);
	void SetAIEscapePoints(TArray<class AActor*> escapePoints);
	void OnTutorialStarted();
	void OnTriggerBeginOverlapActor(const struct FString& triggerID, class AActor* overlappingActor);
	bool IsActorInLineOfSight(class ADBDAIPlayerController* aiPlayerController, class APlayerController* PlayerController);
	void HandleCanStartTutorialChanged(bool canStartTutorial);
	class AActor* GetTutorialElement(const struct FString& elementKey);
};

// Class DeadByDaylight.AtlantaTutorialManager
// 0x0040 (FullSize[0x0078] - InheritedSize[0x0038])
class UAtlantaTutorialManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_8HTP[0x40];                                    // 0x0038(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaTutorialManager");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaTutorialObjectiveManager
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UAtlantaTutorialObjectiveManager : public UObject
{
public:
	TArray<class UAtlantaObjectiveWidget*>             _objectivesList;                                           // 0x0030(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UVerticalBox*                                _objectivesContainer;                                      // 0x0040(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K4AU[0x8];                                     // 0x0048(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaTutorialObjectiveManager");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaTutorialPlayerHudController
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UAtlantaTutorialPlayerHudController : public UObject
{
public:
	unsigned char                                      UnknownData_EU3U[0x48];                                    // 0x0030(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaTutorialPlayerHudController");
		return ptr;
	}



	void ShowHudComponent(DBDSharedTypes_EHudComponent hudComponentToShow);
	void SetVirtualJoystickInputEnabled(bool enable);
	void HideHudComponent(DBDSharedTypes_EHudComponent hudComponentToHide);
};

// Class DeadByDaylight.AtlantaTutorialPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UAtlantaTutorialPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaTutorialPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.StateMachine
// 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
class UStateMachine : public UActorComponent
{
public:
	unsigned char                                      UnknownData_FEFV[0x9];                                     // 0x00B8(0x0009) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _enableJoinInProgress;                                     // 0x00C1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N1EL[0x56];                                    // 0x00C2(0x0056) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<uint16_t>                                   _netStateIDStackInitial;                                   // 0x0118(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3BX3[0x8];                                     // 0x0128(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StateMachine");
		return ptr;
	}



	void Server_SetStateStack(TArray<uint16_t> netStateIDStack);
	void NetIDStackChanged();
	void Multicast_SetStateStack(TArray<uint16_t> netStateIDStack);
};

// Class DeadByDaylight.AtlantaTutorialStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UAtlantaTutorialStateMachine : public UStateMachine
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaTutorialStateMachine");
		return ptr;
	}



	void OnBlockingNotificationDismissed(const struct FName& blockingNotificationID);
};

// Class DeadByDaylight.AtlantaUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAtlantaUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaUtilities");
		return ptr;
	}



	bool STATIC_ShouldUseQuickRoleSwitch();
	bool STATIC_ShouldUseOfflineMatchHistory();
	bool STATIC_ShouldUseAtlantaUI();
	bool STATIC_ShouldUseAtlantaStreamVideo();
	bool STATIC_ShouldUseAtlantaRituals();
	bool STATIC_ShouldUseAtlantaRank();
	bool STATIC_ShouldUseAtlantaQualitySettings();
	bool STATIC_ShouldUseAtlantaPurchasableOperations();
	bool STATIC_ShouldUseAtlantaOutlines();
	bool STATIC_ShouldUseAtlantaMatchmaking();
	bool STATIC_ShouldUseAtlantaLighting();
	bool STATIC_ShouldUseAtlantaKrakenContentVersion();
	bool STATIC_ShouldUseAtlantaItemAvailability();
	bool STATIC_ShouldUseAtlantaHudEditor();
	bool STATIC_ShouldUseAtlantaHudAttackJoystick();
	bool STATIC_ShouldUseAtlantaGameplayValues();
	bool STATIC_ShouldUseAtlantaFriendList();
	bool STATIC_ShouldUseAtlantaFreeTickets();
	bool STATIC_ShouldUseAtlantaFixedMaps();
	bool STATIC_ShouldUseAtlantaFearMarket();
	bool STATIC_ShouldUseAtlantaEntity();
	bool STATIC_ShouldUseAtlantaDreamworldFX();
	bool STATIC_ShouldUseAtlantaDailyRewards();
	bool STATIC_ShouldUseAtlantaCustomizedHudSettings();
	bool STATIC_ShouldUseAtlantaCurrencies();
	bool STATIC_ShouldUseAtlantaContent();
	bool STATIC_ShouldUseAtlantaCharacterProgression();
	bool STATIC_ShouldUseAtlantaCDNPatching();
	bool STATIC_ShouldUseAtlantaCDNBucketChangelist();
	bool STATIC_ShouldUseAtlantaCatalog();
	bool STATIC_ShouldUseAtlantaBundleFilterRules();
	bool STATIC_ShouldUseAtlantaBloodweb();
	bool STATIC_ShouldUseAtlantaBackendBloodMarketData();
	bool STATIC_ShouldSupportMultipleActiveActivatablePerks();
	bool STATIC_SetImageSlateBrush(class UImage* Image, const struct FSlateBrush& Brush, bool bMatchSize);
	void STATIC_SetImageBrushFromSpritePath(class UImage* Image, const struct FString& Path);
	void STATIC_SetImageBrushFromPath(class UImage* Image, const struct FString& Path, bool bMatchSize);
	void STATIC_SetImageBrush(class UImage* Image, class UTexture2D* Asset, bool bMatchSize);
	void STATIC_SetButtonStyle(class UButton* Button, const struct FSlateBrush& Brush);
	struct FString STATIC_SecondsToStringWithoutDecimals(int Seconds);
	struct FSlateBrush STATIC_MakeBrushFromTexture(class UTexture2D* Texture);
	struct FSlateBrush STATIC_MakeBrushFromSprite(class UPaperSprite* Sprite);
	class UTexture2D* STATIC_LoadTextureByAsset(const struct FString& Path);
	bool STATIC_IsTutorialEditorDebuggingEnabled();
	bool STATIC_IsPlayerInteractingWithActor(class ADBDPlayer* Player, class AActor* Actor);
	bool STATIC_IsInAtlantaTutorialLevel();
	struct FString STATIC_GetStoreVersion();
	class UPaperSprite* STATIC_GetSpriteFromPath(const struct FString& fullDbPathToImage, const struct FString& constantDbPathToImageFolder, const struct FString& constantPathToSpriteFolder);
	class UPaperSprite* STATIC_GetSpriteFromFullPath(const struct FString& fullSpritePath);
	struct FText STATIC_GetPlayerRoleTextUppercase(DBDSharedTypes_EPlayerRole PlayerRole);
	struct FText STATIC_GetPlayerRoleText(DBDSharedTypes_EPlayerRole PlayerRole);
	struct FColor STATIC_GetPaintColorByRarity(DBDSharedTypes_EItemRarity Rarity);
	struct FText STATIC_GetOfferingCategoryText(DeadByDaylight_EOfferingCategory OfferingCategory);
	class UPaperSprite* STATIC_GetMapSpriteFromPath(const struct FString& mapSpritePath);
	struct FText STATIC_GetItemRarityText(DBDSharedTypes_EItemRarity Rarity);
	struct FText STATIC_GetItemAvailabilityText(DBDSharedTypes_EItemAvailability Availability);
	class UTexture2D* STATIC_GetIconImageByPath(const struct FString& IconPath);
	struct FText STATIC_GetEmblemQualityText(DeadByDaylight_EEmblemQuality EmblemQuality);
	struct FColor STATIC_GetEmblemColorByQuality(DeadByDaylight_EEmblemQuality EmblemQuality);
	struct FText STATIC_GetDifficultyLevelText(DeadByDaylight_EAIDifficultyLevel difficultyLevel);
	class UInteractionDefinition* STATIC_GetCurrentOrAvailableInteractionOfType(class ADBDPlayer* Player, DeadByDaylight_EInputInteractionType interactionInputType);
	class UInteractionDefinition* STATIC_GetCurrentInteractionOfType(class ADBDPlayer* Player, DeadByDaylight_EInputInteractionType interactionInputType);
	class UInteractionDefinition* STATIC_GetCurrentInteraction(class ADBDPlayer* Player);
	struct FString STATIC_GetCurrencyUITexturePath(DBDSharedTypes_ECurrencyType currencyType);
	struct FSlateColor STATIC_GetCurrencyColor(DBDSharedTypes_ECurrencyType currencyType);
	float STATIC_GetControlsTunableByRole(DBDSharedTypes_EPlayerRole PlayerRole, const struct FName& tunableValueName);
	float STATIC_GetControlsTunable(const struct FName& tunableValueName);
	struct FColor STATIC_GetBackgroundColorByRarity(DBDSharedTypes_EItemRarity Rarity);
	class UInteractionDefinition* STATIC_GetAvailableInteractionOfType(class ADBDPlayer* Player, DeadByDaylight_EInputInteractionType interactionInputType);
	struct FText STATIC_GetAlantaInteractionDescriptionText(class UInteractionDefinition* Interaction);
};

// Class DeadByDaylight.AtlCookedMaps
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UAtlCookedMaps : public UPrimaryDataAsset
{
public:
	TArray<struct FAtlCookedMapDescription>            Descriptions;                                              // 0x0038(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlCookedMaps");
		return ptr;
	}



};

// Class DeadByDaylight.AttackableComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UAttackableComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AttackableComponent");
		return ptr;
	}



};

// Class DeadByDaylight.AttackTypeEventComponent
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UAttackTypeEventComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_WPVW[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AttackTypeEventComponent");
		return ptr;
	}



};

// Class DeadByDaylight.AudioFXComponent
// 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
class UAudioFXComponent : public UActorComponent
{
public:
	class UPrimitiveComponent*                         _audioAmbientDetector;                                     // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TD6W[0x60];                                    // 0x00C0(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AudioFXComponent");
		return ptr;
	}



	void SetAudioAmbientDetector(class UPrimitiveComponent* audioAmbientDetector);
	void OnLocallyObservedChanged(bool locallyObserved);
	void OnDeafenCompleted();
	void Deafen(float Duration);
};

// Class DeadByDaylight.AuthoritativeMovementComponent
// 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
class UAuthoritativeMovementComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_OQDJ[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ACharacter*>                          _charactersToPush;                                         // 0x00C8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ACharacter*>                          _stopIgnoreCharacterOnEndOverlap;                          // 0x00D8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4B1O[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           _pawnDetector;                                             // 0x00F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ACharacter*>                          _authoritativeIgnoreOverlapCharacters;                     // 0x00F8(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ACharacter*>                          _previousAuthoritativeIgnoreOverlapCharacters;             // 0x0108(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AuthoritativeMovementComponent");
		return ptr;
	}



	void SetPawnDetector(class UCapsuleComponent* pawnDetector);
	void OnRep_AuthoritativeIgnoreOverlapCharacters();
	void OnPawnDetectorOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnPawnDetectorOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class DeadByDaylight.AutomaticLeanComponent
// 0x02A8 (FullSize[0x0360] - InheritedSize[0x00B8])
class UAutomaticLeanComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnLeanStateChanged;                                        // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCanInitiateLeanChanged;                                  // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSocketOrBoneCache                          _cameraIdleLocation;                                       // 0x00D8(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FSocketOrBoneCache                          _cameraLeftLeanLocation;                                   // 0x0138(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FSocketOrBoneCache                          _cameraRightLeanLocation;                                  // 0x0198(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FSocketOrBoneCache                          _cameraCrouchLocation;                                     // 0x01F8(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FSocketOrBoneCache                          _cameraCrouchLeftLeanLocation;                             // 0x0258(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	struct FSocketOrBoneCache                          _cameraCrouchRightLeanLocation;                            // 0x02B8(0x0060) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPrivate)
	float                                              _middleSphereTraceLength;                                  // 0x0318(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sideSphereTraceLength;                                    // 0x031C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sphereTraceRadius;                                        // 0x0320(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _standingTraceHeightOffset;                                // 0x0324(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _crouchingTraceHeightOffset;                               // 0x0328(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sideTraceOffset;                                          // 0x032C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxMovementDistance;                                      // 0x0330(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxCameraAngle;                                           // 0x0334(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _debugMode;                                                // 0x0338(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DBDSharedTypes_ELeanState                          _leanState;                                                // 0x0339(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1SQ4[0x26];                                    // 0x033A(0x0026) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AutomaticLeanComponent");
		return ptr;
	}



	void Server_SetLeanState(DBDSharedTypes_ELeanState leanState);
	void OnRep_LeanState();
	void OnLeanStateChanged__DelegateSignature(DBDSharedTypes_ELeanState leanState);
	void OnCanInitiateLeanChanged__DelegateSignature(bool canInitiate);
	void Local_Unlean();
	void Local_Lean();
	bool IsLeaning();
	DBDSharedTypes_ELeanState GetPotentialLeanState();
	DBDSharedTypes_ELeanState GetLeanState();
	float GetAvailableDistanceInFrontOfCamera();
	bool CanInitiateLean();
};

// Class DeadByDaylight.AutoQualityAdjuster
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class AAutoQualityAdjuster : public AActor
{
public:
	float                                              TargetResolutionScale;                                     // 0x0230(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumMS;                                                 // 0x0234(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaximumMS;                                                 // 0x0238(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScaleIncreaseRate;                                         // 0x023C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScaleDecreaseRate;                                         // 0x0240(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MinimumAllowableScale;                                     // 0x0244(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZQY4[0x10];                                    // 0x0248(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AutoQualityAdjuster");
		return ptr;
	}



};

// Class DeadByDaylight.BannerDataProcessor
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UBannerDataProcessor : public UObject
{
public:
	unsigned char                                      UnknownData_21AN[0x50];                                    // 0x0030(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BannerDataProcessor");
		return ptr;
	}



};

// Class DeadByDaylight.BaseCameraTargetingStrategy
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UBaseCameraTargetingStrategy : public UObject
{
public:
	unsigned char                                      UnknownData_SOEU[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxFreeAngle;                                             // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _maxInputRotation;                                         // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _interpolationSpeed;                                       // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _interpolationSpeedOutsideFreeMoveZone;                    // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      _target;                                                   // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BaseCameraTargetingStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.BaseHitValidationConfigurator
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UBaseHitValidationConfigurator : public UActorComponent
{
public:
	unsigned char                                      UnknownData_6U4T[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BaseHitValidationConfigurator");
		return ptr;
	}



};

// Class DeadByDaylight.BaseIndicatorWidget
// 0x0048 (FullSize[0x0348] - InheritedSize[0x0300])
class UBaseIndicatorWidget : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                _safeZonePanel;                                            // 0x0300(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanelSlot*                            _canvasPanelSlot;                                          // 0x0308(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RadiusMultiplier;                                          // 0x0310(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J2HA[0x4];                                     // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCanvasPanel*                                IndicatorPanel;                                            // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                Indicator;                                                 // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ArrowImage;                                                // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_93ZB[0x18];                                    // 0x0330(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BaseIndicatorWidget");
		return ptr;
	}



	void OnOutAnimationFinished();
};

// Class DeadByDaylight.KillerProjectile
// 0x0080 (FullSize[0x0338] - InheritedSize[0x02B8])
class AKillerProjectile : public APhysicsBasedProjectile
{
public:
	unsigned char                                      UnknownData_AHEC[0x48];                                    // 0x02B8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                _killerProjectileAttemptGameEventTag;                      // 0x0300(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OKL9[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UHitValidatorConfigurator*                   _hitValidatorConfigurator;                                 // 0x0310(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitValidatorComponent*                      _hitValidatorComponent;                                    // 0x0318(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EHitValidatorConfigName             _hitValidationConfigName;                                  // 0x0320(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SMWL[0x17];                                    // 0x0321(0x0017) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerProjectile");
		return ptr;
	}



	void SetActiveSlashable(bool Active);
	class UPrimitiveComponent* GetPlayerPrimitiveComponent();
	class ASlasherPlayer* GetLaunchingKiller();
};

// Class DeadByDaylight.BaseLinkedVomitProjectile
// 0x0070 (FullSize[0x03A8] - InheritedSize[0x0338])
class ABaseLinkedVomitProjectile : public AKillerProjectile
{
public:
	bool                                               _useSplashDamage;                                          // 0x0338(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _passThroughSurvivors;                                     // 0x0339(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7HSF[0x6];                                     // 0x033A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPoolableProjectileComponent*                _poolableProjectile;                                       // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    OnDeactivateOrLaunch;                                      // 0x0348(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    _vomitTrail;                                               // 0x0358(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USplineMeshComponent*                        _splineMesh;                                               // 0x0360(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                            _splashDamageSphere;                                       // 0x0368(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _akAudioVomitProjectile;                                   // 0x0370(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _vomitSplashCamper;                                        // 0x0378(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UParticleSystem*                             _vomitSplash;                                              // 0x0380(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               _akAudioEventAudioEventVomitSplash;                        // 0x0388(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   _minDecalSize;                                             // 0x0390(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector2D                                   _maxDecalSize;                                             // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSuperVomit;                                             // 0x03A0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z538[0x7];                                     // 0x03A1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BaseLinkedVomitProjectile");
		return ptr;
	}



	void OnLinkedVomitProjectileDeactivate__DelegateSignature();
	void OnAffectSurvivor(class ACamperPlayer* CamperPlayer);
	void OnAffectInteractable(class AInteractable* Interactable, class USceneComponent* HitComponent);
	void NativeExplode(const struct FImpactInfo& ImpactInfo);
};

// Class DeadByDaylight.BaseSky
// 0x0168 (FullSize[0x0398] - InheritedSize[0x0230])
class ABaseSky : public AActor
{
public:
	unsigned char                                      UnknownData_1X3U[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               AdjustCullDistance;                                        // 0x0238(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               EnableIBL;                                                 // 0x0239(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_W78I[0x2];                                     // 0x023A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IBLContributionMultiplier;                                 // 0x023C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                ProbesTintColor;                                           // 0x0240(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ProbesSaturationValue;                                     // 0x0250(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_CECU[0x4];                                     // 0x0254(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBHVRPerDetailModeFloat                     ASMDepthBias;                                              // 0x0258(0x00A0) (Edit, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)
	struct FBHVRPerDetailModeFloat                     ASMDepthAttenuation;                                       // 0x02F8(0x00A0) (Edit, AdvancedDisplay, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BaseSky");
		return ptr;
	}



	void ToggleDreamworldLighting(bool toggleOn);
	void SetProbesTint(const struct FLinearColor& inColor, float inSaturation);
	void SetCullDistance(float NewCullDistance);
	void OnFadeEnd(class AActor* Other);
	void OnFadeBegin(class AActor* Other);
	void OnAlphaChanged(float newAlpha, class AActor* Other);
	class UPostProcessComponent* GetPostprocessComponent();
	void CopyComponentsSettingsFromSource(class UStaticMeshComponent* moonMesh, class UDirectionalLightComponent* shadowLight, class UDirectionalLightComponent* godRayLight, class USkyLightComponent* SkyLight, class UExponentialHeightFogComponent* heightFog, class UPostProcessComponent* postProcess, class UClass* sourceBaseSkyClass);
};

// Class DeadByDaylight.BaseTrap
// 0x0008 (FullSize[0x04D0] - InheritedSize[0x04C8])
class ABaseTrap : public ACollectable
{
public:
	bool                                               _isTrapSet;                                                // 0x04C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8TOL[0x7];                                     // 0x04C9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BaseTrap");
		return ptr;
	}



	void SetIsTrapSet(bool value);
	bool IsTrapSet();
};

// Class DeadByDaylight.BearTrapOutlineUpdateStrategy
// 0x0038 (FullSize[0x00F8] - InheritedSize[0x00C0])
class UBearTrapOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                UnrevealedColor;                                           // 0x00C0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                RevealedColorToSurvivor;                                   // 0x00D0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveLinearColor*                           KillerOutlineFadeCurve;                                    // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5TUJ[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMapActorComponent*                          _owningBearTrapMapActorComponent;                          // 0x00F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BearTrapOutlineUpdateStrategy");
		return ptr;
	}



	void SetOwningBearTrapMapActorComponent(class UMapActorComponent* MapActorComponent);
};

// Class DeadByDaylight.BlessedVignetteController
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UBlessedVignetteController : public UActorComponent
{
public:
	unsigned char                                      UnknownData_CJE3[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlessedVignetteController");
		return ptr;
	}



	void OnDeactivateBlessedVignette();
	void OnActivateBlessedVignette();
};

// Class DeadByDaylight.BlindableBaseComponent
// 0x0188 (FullSize[0x0240] - InheritedSize[0x00B8])
class UBlindableBaseComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_Z8NT[0x90];                                    // 0x00B8(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isBlinded;                                                // 0x0148(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QNYC[0x7];                                     // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTagStateBool                               _isBeingBlinded;                                           // 0x0150(0x0030) (Net, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChargeableComponent*                        _chargeableComponent;                                      // 0x0180(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _blindingEffectors[0x50];                                  // 0x0188(0x0050) UNKNOWN PROPERTY: MapProperty
	unsigned char                                      UnknownData_Q0TR[0x68];                                    // 0x01D8(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlindableBaseComponent");
		return ptr;
	}



	void SetChargeable(class UChargeableComponent* value);
	void OnRep_IsBlinded();
	void OnChargeableCompletionPercentChanged(class UChargeableComponent* ChargeableComponent, float TotalPercentComplete);
	bool IsBlinded();
	void Authority_RemoveBlindingEffector();
	void Authority_Blinded(DBDSharedTypes_EBlindType blindType, float BlindnessDuration, class AActor* effectorActor);
	void Authority_AddBlindingEffector();
};

// Class DeadByDaylight.BlindableComponent
// 0x0008 (FullSize[0x0248] - InheritedSize[0x0240])
class UBlindableComponent : public UBlindableBaseComponent
{
public:
	unsigned char                                      UnknownData_EMAT[0x8];                                     // 0x0240(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlindableComponent");
		return ptr;
	}



};

// Class DeadByDaylight.BlindingEffectorInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBlindingEffectorInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlindingEffectorInterface");
		return ptr;
	}



};

// Class DeadByDaylight.BlindingFXComponent
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UBlindingFXComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_1RN3[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       _blindnessIntensityParameter;                              // 0x00C8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E7HG[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _blindnessMaterialCurve;                                   // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _blindnessCurve;                                           // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPostProcessComponent*                       _postProcess;                                              // 0x00E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialInstanceDynamic*                    _postProcessMaterial;                                      // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QSC1[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlindingFXComponent");
		return ptr;
	}



	void SetPostProcessMaterial(class UMaterialInstanceDynamic* value);
	void SetPostProcess(class UPostProcessComponent* value);
};

// Class DeadByDaylight.BlinkComponent
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UBlinkComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnBlinkStateChangedDelegate;                               // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               _isInBlinkingState;                                        // 0x00C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TO2Z[0x7];                                     // 0x00C9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlinkComponent");
		return ptr;
	}



	bool IsOwnerInBlinkingState();
};

// Class DeadByDaylight.BlinkerComponent
// 0x00D0 (FullSize[0x0188] - InheritedSize[0x00B8])
class UBlinkerComponent : public UActorComponent
{
public:
	float                                              _rayCastZOffet;                                            // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _rayCastLength;                                            // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _minimumIndicatorVelocity;                                 // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _IndicatorVelocityEasingFactor;                            // 0x00C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     _lineOfSightBlinkOffset;                                   // 0x00C8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_QADI[0xC];                                     // 0x00D4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDTimerComponent*                          _blinkChainTimer;                                          // 0x00E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_97HS[0xA0];                                    // 0x00E8(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlinkerComponent");
		return ptr;
	}



	struct FVector UpdateTargetLocation(class ADBDPlayer* Player, float blinkDistance, TArray<float> scanPercentLocations);
	bool ShouldInterpolateIndicatorPosition();
	void SetChainedBlinkCount(int blinkCount);
	void SetBlinkerState(DeadByDaylight_EBlinkerState blinkerState);
	struct FVector LocalAddRandomToTargetLocation(class ADBDPlayer* Player, const struct FVector& targetLocation, float Distance);
	bool IsReady();
	void IncrementChainedBlinkCount();
	struct FVector GetInterpolatedIndicatorPosition(const struct FVector& BlinkTarget, const struct FVector& indicatorPosition, float DeltaTime);
	float GetFatigueDuration(class ADBDPlayer* Player, bool attacked, int blinkCount);
	int GetChainedBlinkCount();
	DeadByDaylight_EBlinkerState GetBlinkerState();
	class UDBDTimerComponent* GetBlinkChainTimer();
	float GetAutomaticBlinkDelay(int chainBlinkCount);
};

// Class DeadByDaylight.BlockElement
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UBlockElement : public UObject
{
public:
	TWeakObjectPtr<class UObject>                      _source;                                                   // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _affectedPlayers[0x50];                                    // 0x0038(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_SARU[0x10];                                    // 0x0088(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlockElement");
		return ptr;
	}



};

// Class DeadByDaylight.BlockableComponent
// 0x0088 (FullSize[0x0140] - InheritedSize[0x00B8])
class UBlockableComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_5KY1[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBlockableReplicatedDatum                   _replicatedDatum;                                          // 0x00D0(0x0020) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      _blockElements[0x50];                                      // 0x00F0(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlockableComponent");
		return ptr;
	}



	void OnRep_ReplicatedDatum();
	void Authority_RemoveBlock(class UObject* Source);
	void Authority_AddTimedBlock(class UObject* Source, float Duration);
	void Authority_AddBlock(class UObject* Source);
};

// Class DeadByDaylight.BloodDecalEffectIntensity
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UBloodDecalEffectIntensity : public UDataAsset
{
public:
	struct FColor                                      IntensifyBloodColor;                                       // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      IntensifyBloodColor2;                                      // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      IntensifyBloodColorEmissive;                               // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntensifyBloodColorEmissiveMinimumIntensity;               // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              IntensifyBloodColorEmissiveMaximumIntensity;               // 0x0048(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_K6H4[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodDecalEffectIntensity");
		return ptr;
	}



};

// Class DeadByDaylight.BloodDecalEffect
// 0x00E0 (FullSize[0x0118] - InheritedSize[0x0038])
class UBloodDecalEffect : public UDataAsset
{
public:
	class UCurveFloat*                                 AnimationTimelineCurve;                                    // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DestroyTimelineCurve;                                      // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTexture2D*>                          Textures;                                                  // 0x0048(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UTexture2D*>                          Normals;                                                   // 0x0058(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               EnableVisualEffects;                                       // 0x0068(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BE5H[0x7];                                     // 0x0069(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBloodDecalEffectIntensity*                  BloodDecalEffectIntensity;                                 // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ColorInterpolationSpeed;                                   // 0x0078(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7U72[0x4];                                     // 0x007C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMaterialInterface*                          DefalultDecalMaterial;                                     // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AUX0[0x90];                                    // 0x0088(0x0090) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodDecalEffect");
		return ptr;
	}



};

// Class DeadByDaylight.Bloodlust
// 0x00E8 (FullSize[0x0438] - InheritedSize[0x0350])
class UBloodlust : public UStatusEffect
{
public:
	class UCurveFloat*                                 BloodlustCurve;                                            // 0x0350(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XM0W[0x20];                                    // 0x0358(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _bloodlustTime;                                            // 0x0378(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P02P[0x2C];                                    // 0x037C(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASlasherPlayer*                              _owningKiller;                                             // 0x03A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PXB5[0x88];                                    // 0x03B0(0x0088) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Bloodlust");
		return ptr;
	}



	void OnRep_BloodlustTime(float oldBloodlustTime);
	void OnChaseStartedEvent(class ADBDPlayer* chasedPlayer);
	void OnAllChaseEndedEvent();
	void Multicast_ResetBloodlust();
	float GetBloodlustTime();
	void DBD_SetBloodlust(int amount, bool enableDecay);
};

// Class DeadByDaylight.BloodTrailSettings
// 0x0168 (FullSize[0x01A0] - InheritedSize[0x0038])
class UBloodTrailSettings : public UDataAsset
{
public:
	float                                              _initialDelay;                                             // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                _numBloodDropsPerBloodPool;                                // 0x003C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _bloodDropsInterval;                                       // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _randomlyRotateBloodDrops;                                 // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WIUH[0x3];                                     // 0x0045(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _bloodDropsRandomScatter;                                  // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ETraceTypeQuery>                _bloodTraceChannel;                                        // 0x004C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TC29[0x3];                                     // 0x004D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBloodDecalEffect*                           _bloodDecalEffect;                                         // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBHVRPerDetailModeInt                       _decalPoolSize;                                            // 0x0058(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)
	float                                              _recycleThresholdPercentage;                               // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              _recycleDistancePercentage;                                // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FBHVRPerDetailModeInt                       _maxOverlapping;                                           // 0x0100(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodTrailSettings");
		return ptr;
	}



};

// Class DeadByDaylight.BloodTrailComponent
// 0x0188 (FullSize[0x0240] - InheritedSize[0x00B8])
class UBloodTrailComponent : public UActorComponent
{
public:
	class UBloodTrailSettings*                         _bloodTrailSettings;                                       // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FDL1[0x80];                                    // 0x00C0(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UDBDDecalComponent*, struct FBloodDecal> _bloodDecals;                                              // 0x0140(0x0050) (Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UBloodDecalEffect*                           _bloodDecalEffect;                                         // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HY5P[0x90];                                    // 0x0198(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDecalSpawner*                               _decalSpawner;                                             // 0x0228(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RZSI[0x10];                                    // 0x0230(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodTrailComponent");
		return ptr;
	}



	void ConditionalStartBleeding();
};

// Class DeadByDaylight.BloodwebDistribution
// 0x02F8 (FullSize[0x0328] - InheritedSize[0x0030])
class UBloodwebDistribution : public UObject
{
public:
	unsigned char                                      UnknownData_LU0N[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDDesignTunables*                          _designTunables;                                           // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebTunables*                           _bloodwebTunables;                                         // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D98D[0x2D8];                                   // 0x0050(0x02D8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodwebDistribution");
		return ptr;
	}



};

// Class DeadByDaylight.BloodwebEntity
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UBloodwebEntity : public UObject
{
public:
	unsigned char                                      UnknownData_ILG2[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebTunables*                           _bloodwebTunables;                                         // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _bloodWebDefinition[0x10];                                 // 0x0048(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	unsigned char                                      UnknownData_9PGV[0x20];                                    // 0x0058(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodwebEntity");
		return ptr;
	}



};

// Class DeadByDaylight.BloodwebGenerator
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class UBloodwebGenerator : public UObject
{
public:
	unsigned char                                      UnknownData_U1IA[0xC];                                     // 0x0030(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRandomStream                               _randomizationStream;                                      // 0x003C(0x0008) (ZeroConstructor, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PAKL[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             _selectedNodes;                                            // 0x0048(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FName>                               _selectedContent;                                          // 0x0058(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MKXU[0x48];                                    // 0x0068(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _bloodWebDefinition[0x10];                                 // 0x0068(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	class UDBDDesignTunables*                          _designTunables;                                           // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebTunables*                           _bloodwebTunables;                                         // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _alternativePathOccurenceFactor;                           // 0x00D0(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_85E7[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBloodwebDistribution*                       _dataDistribution;                                         // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebSettings*                           _bloodwebSettings;                                         // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZM68[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodwebGenerator");
		return ptr;
	}



};

// Class DeadByDaylight.BloodwebHandler
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class UBloodwebHandler : public UObject
{
public:
	unsigned char                                      UnknownData_LO6O[0x70];                                    // 0x0030(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodwebHandler");
		return ptr;
	}



};

// Class DeadByDaylight.BloodwebManager
// 0x00B0 (FullSize[0x00E0] - InheritedSize[0x0030])
class UBloodwebManager : public UObject
{
public:
	unsigned char                                      UnknownData_PGS4[0x30];                                    // 0x0030(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _bloodwebBuilderClass;                                     // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDDesignTunables*                          _designTunables;                                           // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebTunables*                           _bloodwebTunables;                                         // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _bloodWebDefinition[0x10];                                 // 0x0080(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	class UBloodwebGenerator*                          _bloodwebBuilder;                                          // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebEntity*                             _entity;                                                   // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodwebHandler*                            _bloodwebHandler;                                          // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7S11[0x38];                                    // 0x00A8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodwebManager");
		return ptr;
	}



	void Init(class UDBDGameInstance* GameInstance, class UDBDDesignTunables* Tunables);
};

// Class DeadByDaylight.BloodwebSettings
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UBloodwebSettings : public UDataAsset
{
public:
	TArray<struct FName>                               _duplicableItems;                                          // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodwebSettings");
		return ptr;
	}



};

// Class DeadByDaylight.BloodwebTunables
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UBloodwebTunables : public UObject
{
public:
	unsigned char                                      UnknownData_RK5Z[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BloodwebTunables");
		return ptr;
	}



};

// Class DeadByDaylight.BlueprintDebugUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBlueprintDebugUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlueprintDebugUtilities");
		return ptr;
	}



	void STATIC_EnsureOnConditionWithMessage(bool condition, const struct FString& ensureMessage);
	void STATIC_EnsureFalseWithMessage(const struct FString& ensureMessage);
};

// Class DeadByDaylight.BlueprintPlatformUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBlueprintPlatformUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BlueprintPlatformUtilities");
		return ptr;
	}



	int STATIC_ToInteger(const struct FDBDPerPlatformInt& PerPlatformInt, class UObject* objectInWorld);
	float STATIC_ToFloat(const struct FDBDPerPlatformFloat& PerPlatformFloat, class UObject* objectInWorld);
};

// Class DeadByDaylight.BonusPointEventsManager
// 0x00B8 (FullSize[0x00E8] - InheritedSize[0x0030])
class UBonusPointEventsManager : public UObject
{
public:
	unsigned char                                      UnknownData_GJCX[0xB8];                                    // 0x0030(0x00B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BonusPointEventsManager");
		return ptr;
	}



};

// Class DeadByDaylight.Tile
// 0x0118 (FullSize[0x0348] - InheritedSize[0x0230])
class ATile : public AActor
{
public:
	bool                                               RerunConstructionScript;                                   // 0x0230(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_54UJ[0x3];                                     // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MinimumSpacing;                                            // 0x0234(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaximumSpacing;                                            // 0x0238(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DiagonalSpacing;                                           // 0x023C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TypeSpacing;                                               // 0x023D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SPO3[0x2];                                     // 0x023E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MaximumCount;                                              // 0x0240(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   Dimension;                                                 // 0x0244(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9OQH[0x4];                                     // 0x024C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<DeadByDaylight_EscapeStrategyType>          AvailableEscapeTypes;                                      // 0x0250(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_ETileType                           Type;                                                      // 0x0260(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EDensity                            Density;                                                   // 0x0261(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EPathType                           Path;                                                      // 0x0262(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UVY7[0x1];                                     // 0x0263(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Number;                                                    // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PlaceHolder;                                               // 0x0268(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NDBC[0x3];                                     // 0x0269(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SpawnPriorityTier;                                         // 0x026C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Weight;                                                    // 0x0270(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   Coord;                                                     // 0x0274(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EQuadrantSpawnType                  QuadrantSpawnType;                                         // 0x027C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EBasementType                       BasementType;                                              // 0x027D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BFXX[0x2];                                     // 0x027E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UTileSpawnPoint*>                     SpawnPointsCache;                                          // 0x0280(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObjectRandomizer*>                   ObjectRandomizersCache;                                    // 0x0290(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UActorSpawner*>                       ActorSpawnersCache;                                        // 0x02A0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UActorVariationSpawner*>              ActorVariationSpawnersCache;                               // 0x02B0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QDHJ[0x7C];                                    // 0x02C0(0x007C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FRandomStream                               SharedTileRandomizer;                                      // 0x033C(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               _initialized;                                              // 0x0344(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A04W[0x3];                                     // 0x0345(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Tile");
		return ptr;
	}



	void OnSetSpawnObject(class UTileSpawnPoint* TileSpawnPoint, class AActor* spawnedObject);
	void OnRep_Initialized(bool OldValue);
	void OnAllTileSpawned();
	void InitOnSpawned();
};

// Class DeadByDaylight.BorderTile
// 0x0020 (FullSize[0x0368] - InheritedSize[0x0348])
class ABorderTile : public ATile
{
public:
	TArray<struct FBorderElements>                     Borders;                                                   // 0x0348(0x0010) (Edit, BlueprintVisible, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMapData*                                    _map;                                                      // 0x0358(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_25D7[0x8];                                     // 0x0360(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BorderTile");
		return ptr;
	}



};

// Class DeadByDaylight.BreakableBase
// 0x0028 (FullSize[0x0350] - InheritedSize[0x0328])
class ABreakableBase : public AInteractable
{
public:
	class UBoxComponent*                               _breakableCollision;                                       // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EBreakableState                     _state;                                                    // 0x0330(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U4JA[0x7];                                     // 0x0331(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkComponent*                                _akAudioBreakable;                                         // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               _akAudioBreakEvent;                                        // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             _rootComponent;                                            // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BreakableBase");
		return ptr;
	}



	void PlayAudioBreakable();
	bool IsUnbroken();
	void ExplodeVfxSfx(const struct FVector& ImpulseDir);
	void Explode(class ADBDPlayer* Player);
};

// Class DeadByDaylight.BreakableWallOutlineUpdateStrategy
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UBreakableWallOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BreakableWallOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.BubbleIndicator
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class ABubbleIndicator : public AActor
{
public:
	float                                              _lifeTime;                                                 // 0x0230(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _displayToLocallyObserved;                                 // 0x0234(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_337E[0x3];                                     // 0x0235(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BubbleIndicator");
		return ptr;
	}



	void SetSilhouette(class UStaticMesh* StaticMesh);
};

// Class DeadByDaylight.BubbleIndicatorNotifier
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UBubbleIndicatorNotifier : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BubbleIndicatorNotifier");
		return ptr;
	}



	void STATIC_SpawnBubbleIndicator(class UObject* WorldContextObject, class UClass* bubbleIndicatorBP, const struct FTransform& Transform, bool TriggerLoudNoise, bool spawnOnKillerSideOnly, float lifetime, class UStaticMesh* silhouetteStaticMesh, float audibleRange);
};

// Class DeadByDaylight.CameraAttachmentComponent
// 0x00B0 (FullSize[0x0168] - InheritedSize[0x00B8])
class UCameraAttachmentComponent : public UActorComponent
{
public:
	class USceneComponent*                             _anchor;                                                   // 0x00B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_264U[0x10];                                    // 0x00C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCameraAttachment                           _defaultCameraAttachment;                                  // 0x00D0(0x0018) (Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	struct FCameraAttachment                           _currentCameraAttachment;                                  // 0x00E8(0x0018) (Transient, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AKZY[0x68];                                    // 0x0100(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CameraAttachmentComponent");
		return ptr;
	}



	void Reset();
	bool IsAttached();
	void Detach();
};

// Class DeadByDaylight.CameraHandlerComponent
// 0x00E8 (FullSize[0x01A0] - InheritedSize[0x00B8])
class UCameraHandlerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnSocketChanged;                                           // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8C3P[0x8];                                     // 0x00C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<DeadByDaylight_EDBDCameraSocketID, class AActor*> _cameraMap;                                                // 0x00D0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	DeadByDaylight_EDBDCameraSocketID                  _delayedSocketID;                                          // 0x0120(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EDBDCameraSocketID                  _currentSocketID;                                          // 0x0121(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LQCI[0x47];                                    // 0x0122(0x0047) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _manualZoomAllowPerkModifiers;                             // 0x0169(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_532P[0x6];                                     // 0x016A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _manualZoomCurveFloat;                                     // 0x0170(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _cameraAttachmentSocket;                                   // 0x0178(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3EG8[0x4];                                     // 0x0184(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _cameraAttachmentComponent;                                // 0x0188(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VCE0[0x8];                                     // 0x0190(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isFOVSystemActive;                                        // 0x0198(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PX6G[0x7];                                     // 0x0199(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CameraHandlerComponent");
		return ptr;
	}



	void SetSocketID(DeadByDaylight_EDBDCameraSocketID Mode);
	void SetAttachmentComponent(class USceneComponent* attachmentComponent);
	void PlayVFXOnCurrentCamera(class UParticleSystemComponent* Component);
	DeadByDaylight_EDBDCameraSocketID GetSocketID();
	class AActor* GetCurrentCamera();
	void AddCameraToSocket(DeadByDaylight_EDBDCameraSocketID Mode, class AActor* Camera);
};

// Class DeadByDaylight.CamperAnimInstance
// 0x01B0 (FullSize[0x0420] - InheritedSize[0x0270])
class UCamperAnimInstance : public UAnimInstance
{
public:
	class ACamperPlayer*                               CamperPlayer;                                              // 0x0270(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MyDeltaTime;                                               // 0x0278(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHooked;                                                  // 0x027C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsSacrificeStruggling;                                     // 0x027D(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_62PO[0x2];                                     // 0x027E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAnimMontage*                                MontageMadnessTierUp;                                      // 0x0280(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAnimCompositeBase*>                  ArrayCarryAttackMontage;                                   // 0x0288(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isFrightScreaming;                                        // 0x0298(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarried;                                            // 0x0299(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingPutOnHook;                                          // 0x029A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               isCrouched;                                                // 0x029B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_ECamperGuidedAction                 GuidedAction;                                              // 0x029C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsTrapped;                                                 // 0x029D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsCrawling;                                                // 0x029E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsDead;                                                    // 0x029F(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MaxSpeed;                                                  // 0x02A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsInsideCloset;                                            // 0x02A4(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F9JR[0x3];                                     // 0x02A5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IsPlayingMadnessTierUpWeight;                              // 0x02A8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsTotallyInsane;                                           // 0x02AC(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingKilled;                                             // 0x02AD(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsCarryAttackSucess;                                       // 0x02AE(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ShouldLookSleepy;                                          // 0x02AF(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsUsingAimItem;                                            // 0x02B0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHoldingAimItem;                                          // 0x02B1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               AllowLookAt;                                               // 0x02B2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B4YN[0x1];                                     // 0x02B3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              DropStaggerTimeLeft;                                       // 0x02B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftArmIKAlpha;                                            // 0x02B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightArmIKAlpha;                                           // 0x02BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LeftForeArmIKAlpha;                                        // 0x02C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RightForeArmIKAlpha;                                       // 0x02C4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0YJC[0x8];                                     // 0x02C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  LeftHandIKTransform;                                       // 0x02D0(0x0030) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FTransform                                  RightHandIKTransform;                                      // 0x0300(0x0030) (BlueprintVisible, BlueprintReadOnly, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	bool                                               Strafe;                                                    // 0x0330(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsInteracting;                                             // 0x0331(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               Injured;                                                   // 0x0332(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EInteractionAnimation               interactionType;                                           // 0x0333(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EInteractionAnimation               PreviousInteractionType;                                   // 0x0334(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsSlasherInFPV;                                            // 0x0335(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3M2Y[0x2];                                     // 0x0336(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CarriedAlpha;                                              // 0x0338(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHoldingHandleItem;                                       // 0x033C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHoldingSmallItem;                                        // 0x033D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHoldingFirecracker;                                      // 0x033E(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z697[0x1];                                     // 0x033F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Turning;                                                   // 0x0340(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_F8JL[0xC];                                     // 0x0344(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               InAir;                                                     // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GWYZ[0x3];                                     // 0x0351(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Speed;                                                     // 0x0354(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Direction;                                                 // 0x0358(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Pitch;                                                     // 0x035C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              Yaw;                                                       // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     RightFootEffectorLocation;                                 // 0x0364(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     LeftFootEffectorLocation;                                  // 0x0370(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               Idle;                                                      // 0x037C(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6HMC[0x3];                                     // 0x037D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MyTime;                                                    // 0x0380(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SkillCheckFailed;                                          // 0x0384(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsGassed;                                                  // 0x0385(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasAnyMontagePlaying;                                      // 0x0386(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4Z71[0x1];                                     // 0x0387(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CurrentlyPlayerMontageId;                                  // 0x0388(0x000C) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByTheSpirit;                                 // 0x0394(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByTheNightmare;                              // 0x0395(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByThePig;                                    // 0x0396(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByTheHag;                                    // 0x0397(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByTheLegion;                                 // 0x0398(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingCarriedByTheGhostFace;                              // 0x0399(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsUsingDeadHard;                                           // 0x039A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsPlayingWakeUpOther;                                      // 0x039B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsPlayingFreddyMori;                                       // 0x039C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsSpooked;                                                 // 0x039D(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsHealingKOCamper;                                         // 0x039E(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsChainLinked;                                             // 0x039F(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBeingReeled;                                             // 0x03A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               TriggerHarpoonHitAnim;                                     // 0x03A1(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               WasRecentlyHitByVomit;                                     // 0x03A2(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N4MO[0x1];                                     // 0x03A3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              HarpoonHitTurnAnimNormalizedStartTime;                     // 0x03A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HarpoonHitAnimTurnRight;                                   // 0x03A8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               ChainBreakTrigger;                                         // 0x03A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasLinkInput;                                              // 0x03AA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_45FA[0x1];                                     // 0x03AB(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              LinkInputX;                                                // 0x03AC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LinkInputY;                                                // 0x03B0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LinkedMaxSpeed;                                            // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USurvivorPlagueEffect*                       _cachedSurvivorPlagueEffect;                               // 0x03B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3RIG[0x60];                                    // 0x03C0(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperAnimInstance");
		return ptr;
	}



	void SetIsSacrificeStruggling(bool value);
	void SetIsGassed(bool value);
	void SetAudioRummageAkEvent(const struct FName& Distance);
	void OnInfectiousFrightScream();
	bool IsPlayingMontageByName(const struct FName& MontageID);
	void AddAudioRepairRateRadius(int Distance);
};

// Class DeadByDaylight.CamperBloodTrailComponent
// 0x0010 (FullSize[0x0250] - InheritedSize[0x0240])
class UCamperBloodTrailComponent : public UBloodTrailComponent
{
public:
	class UPerkManager*                                _camperPerkManager;                                        // 0x0240(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F9QS[0x8];                                     // 0x0248(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperBloodTrailComponent");
		return ptr;
	}



	void OnDamageStateChanged(DeadByDaylight_ECamperDamageState oldDamageState, DeadByDaylight_ECamperDamageState CurrentDamageState);
};

// Class DeadByDaylight.CharacterDreamworldComponent
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UCharacterDreamworldComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    DreamStateChanged;                                         // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      _mobileDreamworldPostProcessClass;                         // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _isInDreamworld;                                           // 0x00D0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LGYP[0x7];                                     // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APostProcessUpdate*                          _mobileDreamworldPostProcess;                              // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B83A[0x28];                                    // 0x00E0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterDreamworldComponent");
		return ptr;
	}



	bool ShouldShowVignette();
	void OnRep_IsInDreamworld(bool Previous);
	bool IsInDreamworld();
	class ADBDPlayer* STATIC_GetLocallyObservedOrLocalCharacter(class UObject* WorldContextObject);
	void FireWakeUpScoreEvent(class ADBDPlayer* Instigator);
	void Authority_SetIsInDreamworld(bool NewValue, bool isScripted);
};

// Class DeadByDaylight.CamperDreamworldComponent
// 0x00E8 (FullSize[0x01F0] - InheritedSize[0x0108])
class UCamperDreamworldComponent : public UCharacterDreamworldComponent
{
public:
	struct FScriptMulticastDelegate                    OnCamperTriggeredDreamTrap;                                // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FSurvivorSleepiness                         _survivorSleepiness;                                       // 0x0118(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, Transient, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _sleepinessProtectionRemainingDuration;                    // 0x0120(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sleepGainPerSecond;                                       // 0x0124(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_71K7[0x4];                                     // 0x0128(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _wakeUpByOtherCount;                                       // 0x012C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _showKiller;                                               // 0x0130(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_37WP[0x7];                                     // 0x0131(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFastTimer                                  _killerGlimpseDurationTimer;                               // 0x0138(0x0030) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WFER[0x10];                                    // 0x0168(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFastTimer                                  _killerGlimpseCooldownTimer;                               // 0x0178(0x0030) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D1FM[0x10];                                    // 0x01A8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _glimpseMinDistance;                                       // 0x01B8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _glimpseMaxDistance;                                       // 0x01BC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _killerGlimpseCooldown;                                    // 0x01C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _killerGlimpseDuration;                                    // 0x01C4(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _wakeUpBySkillCheckCount;                                  // 0x01C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _fellAsleepCount;                                          // 0x01CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _forcedAsleep;                                             // 0x01D0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8986[0x7];                                     // 0x01D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AWakerObject*                                _linkedWaker;                                              // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useScriptedKillerVisibility;                              // 0x01E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KY9L[0x7];                                     // 0x01E1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _showKillerInstantly;                                      // 0x01E8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_676O[0x7];                                     // 0x01E9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperDreamworldComponent");
		return ptr;
	}



	bool ShouldLookSleepyToLocalPlayer();
	void SetScriptedKillerVisibility(bool useScriptedKillerVisibility);
	void OnRep_ShowKiller();
	void Local_SetShowKiller(bool showKiller, bool instantly);
	void InitializeTunableValues(class ASlasherPlayer* killer);
	void HandleShowKillerChanged(bool showKiller, bool instantly);
	int GetWakeUpByOtherCount();
	bool CanWakeUpBySkillCheck();
	bool CanWakeUp();
	void BroadcastCamperTriggeredDreamTrap(class AActor* dreamObject);
	void Authority_WakeUpByWakerObject();
	void Authority_WakeUpByOther(class ADBDPlayer* Instigator);
	void Authority_WakeUpByHook();
	void Authority_SpawnDreamworldStatusEffect();
	void Authority_PutAsleep();
	void Authority_OnAttacked();
	void Authority_HandleSkillCheckFailure(bool wakeUpEveryoneInteracting, class ADBDPlayer* Instigator);
	int Authority_GetWakeUpBySkillCheckCount();
	int Authority_GetFellAsleepCount();
};

// Class DeadByDaylight.CamperEndGameComponent
// 0x0060 (FullSize[0x0118] - InheritedSize[0x00B8])
class UCamperEndGameComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_P0L4[0x48];                                    // 0x00B8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _endGameEntityClass;                                       // 0x0100(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9PJO[0x4];                                     // 0x0108(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _delayBeforeSacrifice;                                     // 0x010C(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _readyToBeSacrificed;                                      // 0x0110(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WOCF[0x7];                                     // 0x0111(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperEndGameComponent");
		return ptr;
	}



	void OnEndGameSacrificeEnd();
	void OnDelayBeforeSacrificeEnd();
	bool GetSacrificedByEndGame();
};

// Class DeadByDaylight.CamperExposerInstance
// 0x0030 (FullSize[0x0260] - InheritedSize[0x0230])
class ACamperExposerInstance : public AActor
{
public:
	bool                                               IsInterior;                                                // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TV91[0x7];                                     // 0x0231(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     _audioAgravationLevelRtpc;                                 // 0x0238(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z0DI[0x18];                                    // 0x0248(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperExposerInstance");
		return ptr;
	}



	void StartSpawnSequence(bool withRandomDelay);
	void StartExitSequence(bool withRandomDelay);
	void SetIsInteriorBP(bool interior);
	void ExitSequenceComplete();
};

// Class DeadByDaylight.CamperHealthComponent
// 0x01A0 (FullSize[0x0258] - InheritedSize[0x00B8])
class UCamperHealthComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnHealedDelegate;                                          // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInjuredBleedoutStarted;                                  // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInjuredBleedoutEnded;                                    // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInjuredBleedoutKO;                                       // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AHA5[0x30];                                    // 0x00F8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDamageStateChanged;                                      // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDamageStateChangedCosmetic;                              // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FDBDTunableRowHandle                        _bleedoutBaseDuration;                                     // 0x0148(0x0028) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTagStateBool                               _inInjuredBleedOut;                                        // 0x0170(0x0030) (Net, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTimer                                   _bleedOutTimer;                                            // 0x01A0(0x0028) (Net, Transient, NativeAccessSpecifierPrivate)
	bool                                               _canBleedout;                                              // 0x01C8(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4KRY[0x7];                                     // 0x01C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              _pauseInjuredBleedoutTimerInteractions;                    // 0x01D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _currentHealthStateCount;                                  // 0x01E0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R00T[0x4];                                     // 0x01E4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _numHealthyHeals;                                          // 0x01E8(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_73NZ[0x4];                                     // 0x01EC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTimer                                   _dyingTimer;                                               // 0x01F0(0x0028) (Net, Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YIVG[0x8];                                     // 0x0218(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChargeableComponent*                        _healFromDyingChargeable;                                  // 0x0220(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                        _healFromInjuredChargeable;                                // 0x0228(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                        _mendChargeable;                                           // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                                  _injuredBleedoutInstigator;                                // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3XVX[0x18];                                    // 0x0240(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperHealthComponent");
		return ptr;
	}



	void SetCanBleedout(bool canBleedout);
	void OnRep_InInjuredBleedOut();
	void OnMendChargeCompletionStateChanged(bool complete, TArray<class AActor*> instigators);
	void OnImmobilizedStateChanged(DeadByDaylight_ECamperImmobilizeState oldImmobilizeState, DeadByDaylight_ECamperImmobilizeState newImmobilizeState);
	void OnHealthBarCharged(bool complete, TArray<class AActor*> instigators);
	void OnDamageStateChangedCosmetic__DelegateSignature();
	void Multicast_SetHealthStateFromDamageState(DeadByDaylight_ECamperDamageState damageState, bool FireScoreEvent);
	void Multicast_SetDead(bool IsDead, bool IsSacrificed, bool isLeaving);
	void Multicast_SetDamageState(DeadByDaylight_ECamperDamageState damageState, bool FireScoreEvent, bool sacrificed);
	void Multicast_SetCurrentHealthStateCount(int newHealth, bool FireScoreEvent);
	void Multicast_OnInjuredBleedoutKO(class ADBDPlayer* injuredBleedoutInstigator);
	void Multicast_OnHealed(const struct FCamperHealResult& healResult);
	bool IsKO();
	bool IsInjuredBleedoutTimerExpired();
	bool IsInjured();
	bool IsInInjuredBleedout();
	bool IsHealthy();
	bool IsDyingTimerExpired();
	bool IsDead();
	void IncreaseHPSlotSize(float percent);
	float GetPercentInjuredBleedoutTimer();
	float GetPercentDyingTimer();
	DeadByDaylight_ECamperDamageState GetDamageState();
	float GetCurrentTotalHealthBarPercent();
	class UChargeableComponent* GetCurrentHPSlot();
	bool CanHealSelf();
	bool CanBeHealedFromInjured();
	bool CanBeHealed();
	bool CanBecomeHealthy();
	void Authority_SetDamageState(DeadByDaylight_ECamperDamageState damageState, bool FireScoreEvent, bool sacrificed);
	void Authority_MendTryGrantScoresOnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime);
	void Authority_HealTryGrantScoresOnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime);
	void Authority_EndInjuredBleedout();
	void Authority_ApplyDoubleDamage(class AActor* damageSource);
	void Authority_ApplyDeepWound(class AActor* damageSource);
	void Authority_ApplyDamage(class AActor* damageSource);
	void ApplyHeal(int HealAmount, TArray<class ADBDPlayer*> Healers);
};

// Class DeadByDaylight.PlayerInteractable
// 0x0020 (FullSize[0x0348] - InheritedSize[0x0328])
class APlayerInteractable : public AInteractable
{
public:
	unsigned char                                      UnknownData_0AXX[0x20];                                    // 0x0328(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerInteractable");
		return ptr;
	}



	void InitInteractable(class ADBDPlayer* Player);
};

// Class DeadByDaylight.CamperInteractable
// 0x0108 (FullSize[0x0450] - InheritedSize[0x0348])
class ACamperInteractable : public APlayerInteractable
{
public:
	unsigned char                                      UnknownData_NFEL[0x8];                                     // 0x0348(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UInteractor*>                         HealingInteractors;                                        // 0x0350(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UChargeableInteractionDefinition*>    _healInteractions;                                         // 0x0360(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChargeableComponent*                        _killCharge;                                               // 0x0370(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                        _snapOutOfItCharge;                                        // 0x0378(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                        _wakeUpCharge;                                             // 0x0380(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                        _crowDismissCharge;                                        // 0x0388(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UActivatorComponent*                         _activator;                                                // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ANFX[0x68];                                    // 0x0398(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInteractor*                                 _killInteractor;                                           // 0x0400(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _killInteractionZone;                                      // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USphereComponent*                            _killHealthyInteractionZone;                               // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _mainInteractionZone;                                      // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractor*                                 _healingInteractor1;                                       // 0x0420(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractor*                                 _selfInteractionsInteractor;                               // 0x0428(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _rootComponent;                                            // 0x0430(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N5DN[0x18];                                    // 0x0438(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperInteractable");
		return ptr;
	}



	void UpdateTargetHPSlot();
	void SetKillInteraction(class UInteractionDefinition* killInteraction);
	void ServerMoveOut();
	class UInteractor* GetSlasherInteractor();
	class ACamperPlayer* GetOwningSurvivor();
};

// Class DeadByDaylight.CamperKONextToRaisedPalletAchievement
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UCamperKONextToRaisedPalletAchievement : public UActorComponent
{
public:
	unsigned char                                      UnknownData_VMBV[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperKONextToRaisedPalletAchievement");
		return ptr;
	}



};

// Class DeadByDaylight.DBDCharacterMovementComponent
// 0x02BC (FullSize[0x08EC] - InheritedSize[0x0630])
class UDBDCharacterMovementComponent : public UCharacterMovementComponent
{
public:
	float                                              ProjectedWallSlidingFactor;                                // 0x0630(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomInputFrontMultiplier;                                // 0x0634(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomInputSideMultiplier;                                 // 0x0638(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              RandomInputBackMultiplier;                                 // 0x063C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7C7R[0x88];                                    // 0x0640(0x0088) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _forceUseDropStaggerFix;                                   // 0x06C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DDG2[0x1BF];                                   // 0x06C9(0x01BF) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBaseCharacterVelocityAdditiveStrategy*      _velocityAdditiveStrategy;                                 // 0x0888(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBaseInputAccelerationConstraintStrategy*    _inputAccelerationConstraintStrategy;                      // 0x0890(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBaseCharacterRotationStrategy*              _rotationStrategy;                                         // 0x0898(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      _lookAtTarget;                                             // 0x08A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OU33[0x44];                                    // 0x08A8(0x0044) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDCharacterMovementComponent");
		return ptr;
	}



	void SetRandomInputAmplitude(float value);
	void Server_StopMontage(float Timestamp, const struct FMontageStopDefinition& MontageStopDefinition);
	void Server_StartSnapping(float Timestamp, const struct FSnappingData& Data);
	void Server_SetStopSnapping(float Timestamp, bool snapToFinalDestination);
	void Server_SetMaxSpeedMultiplierScalar(float Timestamp, float value);
	void Server_SetMaxAcceleration(float Timestamp, float value);
	void Server_SetGroundFriction(float Timestamp, float value);
	void Server_SetAdditiveMaxSpeedScalar(float Timestamp, float value);
	void Server_ReplicateControlRotation(unsigned char ClientRoll, uint32_t View);
	void Server_RemoveMaxSpeedMovementCurve(float Timestamp, uint32_t curveNetId, DeadByDaylight_EMovementCurveType movementCurveType);
	void Server_PlayMontage(float Timestamp, const struct FMontagePlaybackDefinition& MontagePlaybackDefinition);
	void Server_Launch(float Timestamp, const struct FVector& LaunchVelocity);
	void Server_AddMaxSpeedMovementCurve(float Timestamp, uint32_t curveNetId, float Duration, DeadByDaylight_EMovementCurveType movementCurveType);
	void OnPreMontageStop(const struct FMontageStopDefinition& montageDefinition, class UAnimMontage* Montage);
	void OnMontageStarted(const struct FMontagePlaybackDefinition& montageDefinition, class UAnimMontage* Montage);
	void Local_AddMaxSpeedMultiplierCurve(class UCurveFloat* Curve, float Duration, bool autoRemove);
	bool IsSnappingRotation();
	bool IsSnappingPosition();
	bool IsSnapping();
	bool IsApplyingRandomInput();
	struct FVector GetCurrentSnapPosition();
	void Client_TeleportTo(const struct FVector_NetQuantize100& Location, const struct FYawAndPitchRotator_NetQuantize32& Rotation);
	void Client_Stop();
	void Client_PreventMovement(bool value);
};

// Class DeadByDaylight.ChaseComponent
// 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
class UChaseComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnChaseStarted;                                            // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChaseEnded;                                              // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAllChaseEnded;                                           // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsInChaseChanged;                                        // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTagStateBool                               _isInChase;                                                // 0x00F8(0x0030) (Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChaseComponent");
		return ptr;
	}



	void OnRep_IsInChase();
	bool IsInChase();
};

// Class DeadByDaylight.ChaseeCharacterComponent
// 0x0060 (FullSize[0x0188] - InheritedSize[0x0128])
class UChaseeCharacterComponent : public UChaseComponent
{
public:
	unsigned char                                      UnknownData_6WOS[0x60];                                    // 0x0128(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChaseeCharacterComponent");
		return ptr;
	}



	void Authority_OnLevelReadyToPlay();
	void Authority_OnGeneratorPercentChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete);
};

// Class DeadByDaylight.UMGBaseToastWidget
// 0x0068 (FullSize[0x0368] - InheritedSize[0x0300])
class UUMGBaseToastWidget : public UMobileBaseUserWidget
{
public:
	class UImage*                                      ToastIcon;                                                 // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  ToastText;                                                 // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UProgressBar*                                TimeToastProgression;                                      // 0x0310(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_F4F8[0x50];                                    // 0x0318(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBaseToastWidget");
		return ptr;
	}



	void TriggerToastInput(int inputCode);
	void OnTimerFinished();
};

// Class DeadByDaylight.UMGBloodStoreArrayWidget
// 0x0070 (FullSize[0x0370] - InheritedSize[0x0300])
class UUMGBloodStoreArrayWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_5E76[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGBloodStoreRowWidget*                     FirstBloodStoreRowWidget;                                  // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreRowWidget*                     SecondBloodStoreRowWidget;                                 // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreRowWidget*                     ThirdBloodStoreRowWidget;                                  // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreRowWidget*                     FourthBloodStoreRowWidget;                                 // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreRowWidget*                     FifthBloodStoreRowWidget;                                  // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PO6J[0x38];                                    // 0x0338(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBloodStoreArrayWidget");
		return ptr;
	}



	void BroadcastBloodNodeSelected(const struct FString& ID);
};

// Class DeadByDaylight.UMGBloodStoreItemPreviewWidget
// 0x0108 (FullSize[0x0408] - InheritedSize[0x0300])
class UUMGBloodStoreItemPreviewWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_GLSH[0x30];                                    // 0x0300(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _itemName;                                                 // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _itemDescription;                                          // 0x0348(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	int                                                _itemPrice;                                                // 0x0360(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SF4I[0x4];                                     // 0x0364(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _refreshPrice;                                             // 0x0368(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _nodeStatusText;                                           // 0x0380(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _refreshTitle;                                             // 0x0398(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _itemSelectionTitle;                                       // 0x03B0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _itemSelectionText;                                        // 0x03C8(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _purchaseTitle;                                            // 0x03E0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B070[0x10];                                    // 0x03F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBloodStoreItemPreviewWidget");
		return ptr;
	}



	void UnselectItem();
	void ShowRefreshButton(bool ShowRefreshButton, bool isRefreshFree);
	void ShowPurchaseButton(bool ShowPurchaseButton);
	void DisplayItem(bool isItemPurchaseable, bool isItemAffordable);
	void BroadcastUnselectPressed();
	void BroadcastRefreshPressed();
	void BroadcastPurchasePressed();
};

// Class DeadByDaylight.UMGBloodStoreItemWidget
// 0x0080 (FullSize[0x0380] - InheritedSize[0x0300])
class UUMGBloodStoreItemWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_L1IE[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      NodeImage;                                                 // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      BackgroundImage;                                           // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      RarityBackground;                                          // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ItemPanel;                                                 // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                MysteryBoxPanel;                                           // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      MysteryBoxRarityBackground;                                // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CollectedPanel;                                            // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ConsumedPanel;                                             // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EBloodwebNodeContentType            _contentType;                                              // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isMysteryBox;                                             // 0x0351(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3OL3[0x2];                                     // 0x0352(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   _bigItemScale;                                             // 0x0354(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   _normalItemScale;                                          // 0x035C(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _consumedOpacity;                                          // 0x0364(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_L7PB[0x18];                                    // 0x0368(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBloodStoreItemWidget");
		return ptr;
	}



	void UnFocusNode();
	void SetSelectedVisibilities(bool IsSelected);
	void SetBackgroundImages();
	void PlayConsumedAnimation(bool skipIntro);
	void FocusNode();
	void ConsumeNode();
	void CollectNode();
	void BroadcastBloodNodeSelected();
};

// Class DeadByDaylight.UMGBloodStoreMysteryBoxPopup
// 0x0078 (FullSize[0x0460] - InheritedSize[0x03E8])
class UUMGBloodStoreMysteryBoxPopup : public UUMGGenericPopup
{
public:
	class UUMGBloodStoreItemWidget*                    MysteryItem;                                               // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _itemDisplayName;                                          // 0x03F0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _itemRarityName;                                           // 0x0408(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _itemRarityColor;                                          // 0x0420(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _addedToInventory;                                         // 0x0448(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBloodStoreMysteryBoxPopup");
		return ptr;
	}



	void StartRevealSequence();
};

// Class DeadByDaylight.UMGBloodStoreRowWidget
// 0x0098 (FullSize[0x0398] - InheritedSize[0x0300])
class UUMGBloodStoreRowWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_Z1DW[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UHorizontalBox*                              ItemContainer;                                             // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                LockStatusPanel;                                           // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                HardLockedStatusPanel;                                     // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _purchasedItemsNbr;                                        // 0x0328(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _requiredItemNbr;                                          // 0x032C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EBloodStoreRowStyle                 _rowStyle;                                                 // 0x0330(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_K9LR[0x3];                                     // 0x0331(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FMargin                                     _itemPadding;                                              // 0x0334(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GA8O[0x4];                                     // 0x0344(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _itemWidgetClass[0x30];                                    // 0x0344(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UClass*                                      _itemClass;                                                // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DOKI[0x18];                                    // 0x0380(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBloodStoreRowWidget");
		return ptr;
	}



	void UnlockRow(bool PlayAnim);
	void LockRow(bool PlayAnim);
	void BroadcastUnlockAnimationFinished();
	void BroadcastBloodNodeSelected(const struct FString& ID);
};

// Class DeadByDaylight.UMGBloodStoreSubMenu
// 0x0030 (FullSize[0x0330] - InheritedSize[0x0300])
class UUMGBloodStoreSubMenu : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_8AWX[0x20];                                    // 0x0300(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGBloodStoreTimer*                         SurvivorTimer;                                             // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreTimer*                         KillerTimer;                                               // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBloodStoreSubMenu");
		return ptr;
	}



	void SetFaction(bool IsKiller);
	void BroadcastExpiredBloodWeb();
	void BroadcastCharacterRoleButtonClicked();
};

// Class DeadByDaylight.UMGBloodStoreTimer
// 0x0088 (FullSize[0x0388] - InheritedSize[0x0300])
class UUMGBloodStoreTimer : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_M1OE[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateColor                                 _normalColor;                                              // 0x0310(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _warningColor;                                             // 0x0338(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                                  RemainingTimeTextBlock;                                    // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      RefreshImage;                                              // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HYDV[0x18];                                    // 0x0370(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBloodStoreTimer");
		return ptr;
	}



};

// Class DeadByDaylight.UMGBloodStoreWidget
// 0x00C0 (FullSize[0x03C0] - InheritedSize[0x0300])
class UUMGBloodStoreWidget : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnBloodNodeSelected;                                       // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBloodNodePurchase;                                       // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnBloodStoreRegenerate;                                    // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterRoleButtonClicked;                              // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UUMGBloodStoreArrayWidget*                   BloodStoreArrayWidget;                                     // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreItemPreviewWidget*             ItemPreviewWidget;                                         // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreSubMenu*                       BloodStoreSubMenuWidget;                                   // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _bloodStoreTitle;                                          // 0x0358(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _killersTitle;                                             // 0x0370(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _survivorsTitle;                                           // 0x0388(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XHGX[0x20];                                    // 0x03A0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBloodStoreWidget");
		return ptr;
	}



	void UnselectNode();
	void SwitchRole();
	void SetSelectedNode(const struct FString& selectedId);
	void SetFaction(bool IsKiller);
	void RegenerateBloodStore();
	void PurchaseSelectedNode();
};

// Class DeadByDaylight.CamperMovementComponent
// 0x0024 (FullSize[0x0910] - InheritedSize[0x08EC])
class UCamperMovementComponent : public UDBDCharacterMovementComponent
{
public:
	float                                              MaxRunSpeed;                                               // 0x08EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRotator                                    _defaultRotationRate;                                      // 0x08F0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	struct FRotator                                    _rotationRateWhileCrawling;                                // 0x08FC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8ZQC[0x8];                                     // 0x0908(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperMovementComponent");
		return ptr;
	}



	void OnCamperHealthStateChanged(DeadByDaylight_ECamperDamageState oldDamageState, DeadByDaylight_ECamperDamageState CurrentDamageState);
	struct FRotator GetRotationRateWhileCrawling();
	struct FRotator GetDefaultRotationRate();
};

// Class DeadByDaylight.DBDBasePlayer
// 0x0090 (FullSize[0x0560] - InheritedSize[0x04D0])
class ADBDBasePlayer : public ACharacter
{
public:
	struct FScriptMulticastDelegate                    OnCustomizationChanged;                                    // 0x04D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTagContainer                       _semanticGameplayTags;                                     // 0x04E0(0x0020) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UBaseGroundDetectorComponent*                _leftFootGroundDetector;                                   // 0x0500(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBaseGroundDetectorComponent*                _rightFootGroundDetector;                                  // 0x0508(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0UTH[0x8];                                     // 0x0510(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _characterIndex;                                           // 0x0518(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6GCA[0x44];                                    // 0x051C(0x0044) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDBasePlayer");
		return ptr;
	}



	bool TeleportWithClothHandling(const struct FVector& Location, const struct FRotator& Rotation, bool checkCollisions);
	void Multicast_SwapCosmetics(const struct FName& cosmeticId);
	bool GetShowBlindDebugInfo();
	struct FGameplayTagContainer GetSemanticTag();
	TEnumAsByte<Engine_EPhysicalSurface> GetRightFootSurfaceType();
	struct FString GetRightFootAudioSurfaceName();
	TEnumAsByte<Engine_EPhysicalSurface> GetLeftFootSurfaceType();
	struct FString GetLeftFootAudioSurfaceName();
	class UCustomizedAudioComponent* GetCustomizedAudio();
	struct FName GetCharacterName();
	int GetCharacterIndex();
	class UAkComponent* GetAudioComponent();
	void DBD_SwapCosmetics(const struct FName& cosmeticId);
};

// Class DeadByDaylight.DBDPlayer
// 0x0B58 (FullSize[0x10B8] - InheritedSize[0x0560])
class ADBDPlayer : public ADBDBasePlayer
{
public:
	unsigned char                                      UnknownData_VLRR[0x58];                                    // 0x0560(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               AllowInterrupting;                                         // 0x05B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GRG9[0x3];                                     // 0x05B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinFallHeight;                                             // 0x05BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInterruptable;                                           // 0x05C0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowNavigationInput;                                      // 0x05C1(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowNavigationBackwardInput;                              // 0x05C2(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowTurningInput;                                         // 0x05C3(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowPitchInput;                                           // 0x05C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AllowStrafeInput;                                          // 0x05C5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInInteractionUpdate;                                     // 0x05C6(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsInteractionChargeCompleted;                              // 0x05C7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchLimitLower;                                           // 0x05C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PitchLimitUpper;                                           // 0x05CC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     StrafingOffset;                                            // 0x05D0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PelvisHeight;                                              // 0x05DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PelvisHeightForPounceOnStandingCamper;                     // 0x05E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              PelvisHeightForPounceOnCrouchingCamper;                    // 0x05E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4O9U[0x40];                                    // 0x05E8(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    Authority_OnAttackedDelegate;                              // 0x0628(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDamageTargetDelegate;                                    // 0x0638(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSensed;                                                  // 0x0648(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAnimNotify_Pickup;                                       // 0x0658(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAnimNotify_Release;                                      // 0x0668(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Authority_OnSecondaryActionInput;                          // 0x0678(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFirstPersonModeChanged;                                  // 0x0688(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDreamworldComponentSet;                                  // 0x0698(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnForwardInputLockedChanged;                               // 0x06A8(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	class USpringArmComponent*                         CameraBoom;                                                // 0x06B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_3OOG[0x30];                                    // 0x06C0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               ForceSkillChecks;                                          // 0x06F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MHXR[0xF];                                     // 0x06F1(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  IKLeftHandTransform;                                       // 0x0700(0x0030) (BlueprintVisible, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FTransform                                  IKRightHandTransform;                                      // 0x0730(0x0030) (BlueprintVisible, Transient, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	float                                              CameraResetSpeed;                                          // 0x0760(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AC2K[0x4];                                     // 0x0764(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 BlinkFOVCurve;                                             // 0x0768(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentBlinkDistance;                                      // 0x0770(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CurrentBlinkChargePercent;                                 // 0x0774(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AverageSpeedBufferTime;                                    // 0x0778(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AlmostCurrentSpeedBufferTime;                              // 0x077C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 GamepadYawCurve;                                           // 0x0780(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 GamepadPitchCurve;                                         // 0x0788(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 GamepadSettingToYawRateCurve;                              // 0x0790(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 GamepadSettingToPitchRateCurve;                            // 0x0798(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 JoyconSettingToYawRateCurve;                               // 0x07A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 JoyconSettingToPitchRateCurve;                             // 0x07A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsCrouchedChanged;                                       // 0x07B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnRunningAndMovingChanged;                                 // 0x07C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N4QU[0x8];                                     // 0x07D0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnLocallyObservedChangedForPlayer;                         // 0x07D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCameraComponent*                            Camera;                                                    // 0x07E8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UMaterialHelper*                             MaterialHelper;                                            // 0x07F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YX1R[0x30];                                    // 0x07F8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      Interactable;                                              // 0x0828(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZRE3[0x18];                                    // 0x0830(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterInventoryComponent*                _characterInventoryComponent;                              // 0x0848(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       CarryJointName;                                            // 0x0850(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _pitchOffsetForInteractionPriority;                        // 0x085C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxOcclusionQueryComponent*                 _renderedPixelCounter;                                     // 0x0860(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               _standingOcclusionBox;                                     // 0x0868(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UBoxComponent*                               _crouchingOcclusionBox;                                    // 0x0870(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActivatorComponent*                         _activator;                                                // 0x0878(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsInteracting;                                             // 0x0880(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8GR5[0x3];                                     // 0x0881(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _aiCanBeSeenTestCrouchScale;                               // 0x0884(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _aiCanBeSeenTestRightOffset;                               // 0x0888(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _aiCanBeSeenTestHighOffset;                                // 0x088C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _aiCanBeSeenTestLowOffset;                                 // 0x0890(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClearPathTestRadiusMultiplier;                             // 0x0894(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ClearPathTestHeightMultiplier;                             // 0x0898(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocationClearTestRadiusMultiplier;                         // 0x089C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LocationClearTestHeightMultiplier;                         // 0x08A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4IVB[0x14];                                    // 0x08A4(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              ClearPathTestStepHeight;                                   // 0x08B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MouseTurnSpeedMultiplier;                                  // 0x08BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              MouseLookUpSpeedMultiplier;                                // 0x08C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U53F[0x4];                                     // 0x08C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USoundCue*                                   DeathSound;                                                // 0x08C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_ECamperState                        CurrentCamperState;                                        // 0x08D0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N8Q7[0x3];                                     // 0x08D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CollectableAttachPoint;                                    // 0x08D4(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStateMachine*                               _stateMachine;                                             // 0x08E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPlayerInteractionHandler*                   _interactionHandler;                                       // 0x08E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMontagePlayer*                              _montagePlayer;                                            // 0x08F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPerkManager*                                _perkManager;                                              // 0x08F8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDBDPlayerData*                              _playerData;                                               // 0x0900(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAxisFlickMasher*                            _wiggleAxisFlickMasher;                                    // 0x0908(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class APlayerInteractable*                         _interactable;                                             // 0x0910(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GPWT[0x50];                                    // 0x0918(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _guidingPlayer;                                            // 0x0968(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TGDL[0x8];                                     // 0x0970(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _interactingPlayer;                                        // 0x0978(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AWLG[0x2C];                                    // 0x0980(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DBDSharedTypes_EAttackSubstate                     _nextAttackSubstate;                                       // 0x09AC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_WR4L[0x3];                                     // 0x09AD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ADBDPlayer*>                          _hitTargets;                                               // 0x09B0(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterDreamworldComponent*               _dreamworldComponent;                                      // 0x09C0(0x0008) (Edit, BlueprintVisible, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCharacterChaseVisualComponent*              _characterChaseVisualComponent;                            // 0x09C8(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCameraHandlerComponent*                     _cameraHandlerComponent;                                   // 0x09D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             _itemDropOffPosition;                                      // 0x09D8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                               // 0x09E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              _ignoreActors;                                             // 0x09E8(0x0010) (ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FEffectCameraTypeSettings>           EffectCameraTypeSettings;                                  // 0x09F8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KUHF[0x28];                                    // 0x0A08(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChargeableComponent*                        _blindingChargeableComponent;                              // 0x0A30(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_Z1X2[0x90];                                    // 0x0A38(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _shouldUpdateStateMachineDriverOnPossessed;                // 0x0AC8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R00R[0x7];                                     // 0x0AC9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBlindableComponent*                         _blindableComponent;                                       // 0x0AD0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BLHZ[0x4];                                     // 0x0AD8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _tutorialChargeableInteractionMultiplier;                  // 0x0ADC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H3LK[0x8];                                     // 0x0AE0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPollableEventListener*                      _eventListener;                                            // 0x0AE8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5VJ1[0x8];                                     // 0x0AF0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChaseComponent*                             _chaseComponent;                                           // 0x0AF8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UZoneDetectorComponent*                      _meatHookZoneDetector;                                     // 0x0B00(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UZoneDetectorComponent*                      _basementZoneDetector;                                     // 0x0B08(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CF5I[0x98];                                    // 0x0B10(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInteractionDefinition*                      _bookmarkedInteraction;                                    // 0x0BA8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<DBDSharedTypes_EDetectionZone, class UPrimitiveComponent*> _detectionZoneMap;                                         // 0x0BB0(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7OOC[0x60];                                    // 0x0C00(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAuthoritativeMovementComponent*             _authoritativeMovementComponent;                           // 0x0C60(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BR52[0x2FC];                                   // 0x0C68(0x02FC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _screenAspectRatio;                                        // 0x0F64(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1KIO[0x20];                                    // 0x0F68(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameplayTagContainerComponent*              _objectState;                                              // 0x0F88(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAudioFXComponent*                           _audioFXComponent;                                         // 0x0F90(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerPerspectiveComponent*                 _playerPerspectiveComponent;                               // 0x0F98(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_23C2[0x8];                                     // 0x0FA0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterSightComponent*                    _characterSightComponent;                                  // 0x0FA8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PVKZ[0x8];                                     // 0x0FB0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterSightableComponent*                _characterSightableComponent;                              // 0x0FB8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OV93[0x10];                                    // 0x0FC0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInteractionDetectorComponent*               _interactionDetectorComponent;                             // 0x0FD0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitivesRegistererComponent*              _clippablePrimitivesRegistererComponent;                   // 0x0FD8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClippableProviderComponent*                 _clippableProviderComponent;                               // 0x0FE0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDynamicCapsuleResizerComponent*             _dynCapsuleResizer;                                        // 0x0FE8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerGameRelevancyComponent*               _playerGameRelevancyComponent;                             // 0x0FF0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UContextualQuestComponent*                   _contextualQuestComponent;                                 // 0x0FF8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GUPZ[0x20];                                    // 0x1000(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UActorComponent*                             _questEventHandler;                                        // 0x1020(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableProgressProviderComponent*        _presentationChargeableProgressComponent;                  // 0x1028(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LPCT[0x18];                                    // 0x1030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 _currentGamepadYawCurve;                                   // 0x1048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _currentGamepadPitchCurve;                                 // 0x1050(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayerState*                             _associatedPlayerStateCache;                               // 0x1058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6O5C[0x8];                                     // 0x1060(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UOtherCharactersVerticalCollisionsHandler*   _otherCharactersVerticalCollisionsHandler;                 // 0x1068(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J6EC[0x48];                                    // 0x1070(0x0048) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayer");
		return ptr;
	}



	void UpdateLoadoutFromInventory();
	bool TryInteractionType(DeadByDaylight_EInputInteractionType interactionInputType, class ADBDPlayer* Requester, bool usingInputPersistence);
	bool TryInteraction(class UInteractionDefinition* Interaction, class ADBDPlayer* Requester, bool force, bool usingInputPersistence);
	bool TryFireScoreEvent(DeadByDaylight_EDBDScoreTypes scoreType, float PercentToAward);
	void TriggerTrapImmunity(float Duration);
	void TriggerAnimNotify(DBDSharedTypes_EAnimNotifyType animNotifyType);
	void ToggleGhost();
	bool TeleportToBP(const struct FVector& DestLocation, const struct FRotator& DestRotation, bool bIsATest, bool bNoCheck);
	void StopSnap(bool snap);
	void StopMontage();
	void StopAllMovement();
	void SnapCharacter(bool snapPosition, const struct FVector& Position, float stopSnapDistance, bool snapRotation, const struct FRotator& Rotation, float Time, bool useZCoord, bool sweepOnFinalSnap, bool snapRoll);
	bool ShouldPlayCarryAnim();
	bool ShouldFall();
	void SetWorldCollisionResponse(TEnumAsByte<Engine_ECollisionResponse> response);
	void SetTutorialChargeableInteractionMultiplier(float multiplierValue);
	void SetShouldPlayCarryAnim(bool ShouldPlayCarryAnim);
	void SetReverseMontage(bool Reverse);
	void SetQuestEventHandlerComponent(class UActorComponent* Component);
	void SetPlayerDirection(const struct FRotator& Rotation);
	void SetPawnAuthoritativeMovement(bool authoritative);
	void SetMouseYawScale(float yawScale, float adjustTime);
	void SetMousePitchScale(float pitchScale, float adjustTime);
	void SetItemUseAsToggle(bool value);
	void SetIsCloaked(bool IsCloaked, bool Forced);
	void SetInParadise(bool InParadise);
	void SetIgnoreActorCollision(class AActor* ActorToIgnore, bool ignore);
	void SetGuidingPlayer(class ADBDPlayer* guidingPlayer);
	void SetGamepadYawScale(float yawScale, float adjustTime);
	void SetGamepadPitchScale(float pitchScale, float adjustTime);
	void SetForceDisableSkillChecks(bool IsEnabled);
	void SetFirstPersonVfxsVisibility(bool isFirstPerson);
	void SetFirstPersonModelEnabled(bool Enabled, bool force);
	void SetFirstPersonMeshVisibility(bool isFirstPerson);
	void SetFeetOnGround(bool feetOnGround);
	void SetEmulateGamepadForMouseYaw(bool emulate);
	void SetEmulateGamepadForMousePitch(bool emulate);
	void SetDetectionZoneEnabled(DBDSharedTypes_EDetectionZone detectionZoneID, bool Enabled);
	void SetCurrentInteractionAnimation(DBDSharedTypes_EInteractionAnimation Animation);
	void SetAuthoritativeMovementFlag(DeadByDaylight_EAuthoritativeMovementFlag flagIndex, bool Enabled);
	void SetAnimationCrouchState(bool crouched);
	void SetAllowNavigation(bool enable);
	void SetAllDetectionZonesEnabled(bool Enabled);
	void Server_UpdateScreenAspectRatio(float value);
	void Server_SetCustomization(TArray<struct FName> customizationParts, TArray<struct FCharmIdSlot> customizationCharms);
	void Server_SendSecondaryActionPressed(bool fromCancelRequest);
	void Server_SendItemUseInput(bool Pressed);
	void Server_SendItemUse(bool Use);
	void Server_SendItemDropInput(bool Pressed);
	void Server_SendInteractionInput(bool Pressed);
	void Server_SendFastInteractionInput(bool Pressed);
	void Server_SendAbilityInput(bool Pressed);
	void Server_PlayerReady();
	void Server_OnInsaneSkillCheck();
	void Server_Drop(class ACollectable* Item, const struct FVector& Location, const struct FRotator& Rotation, bool onDeath);
	void SecondaryActionInputPressed();
	void ResetYawScale(float adjustTime);
	void ResetPitchScale(float adjustTime);
	void ResetMeshRelativeRotation();
	void ResetMeshRelativePosition();
	void ResetCamera();
	void RemoveStatusEffect(class UStatusEffect* StatusEffect);
	void Remotely_HandleScoreEvent(const struct FGameplayTag& scoreTypeTag, const struct FScoreEventData& ScoreEventData);
	class UAnimMontage* PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower);
	void OnRep_Interactable();
	void OnRep_DreamworldComponent();
	void OnPickupStart(class ADBDPlayer* Target);
	void OnPickupEnd(class ADBDPlayer* Target);
	void OnLocallyObservedChanged();
	void OnLevelReadyToPlay();
	void OnIsCrouchedChanged__DelegateSignature(bool isCrouched);
	void OnIntroCompletedNative();
	void OnIntroCompleted();
	void OnInterruptedStart();
	void OnInsaneSkillCheck();
	void OnHudVisibilityChangedNative(bool IsVisible);
	void OnHudVisibilityChanged(bool IsVisible);
	struct FString OnGetCharacterName();
	void OnEscapeDoorActivated();
	void OnCurrentMontageComplete(class UAnimMontage* MontageAsset, bool interrupted);
	void OnCurrentMontageBlendingOut(class UAnimMontage* MontageAsset, bool interrupted);
	void OnClientRestart();
	void OnBlindChargeEmptied();
	void OnAnimInstanceChanged();
	void OnAllPlayerLoaded();
	void Multicast_SetRunVaultEnabled(bool Enabled);
	void Multicast_SetReverseTraverseEnabled(bool Enabled);
	void Multicast_SetMaxWalkSpeed(float MaxWalkSpeed);
	void Multicast_SetInteractingPlayer(class ADBDPlayer* interactingPlayer);
	void Multicast_SetForceAuthoritativeMovement(bool value);
	void Multicast_SetEnableCapsuleDynamicResize(bool Enabled);
	void Multicast_SetDebugSnapPoint(bool Enabled);
	void Multicast_SetDebugPrintAvailableInteractions(bool Enabled);
	void Multicast_SetDebugCarry(bool Enabled);
	void Multicast_SetCustomization(TArray<struct FName> customizationParts, TArray<struct FCharmIdSlot> customizationCharms);
	void Multicast_SetContinuousPrintDebug(bool Enabled);
	void Multicast_SetAuthoritativeMovement(bool Enabled);
	void Multicast_ServerResetMeshRelativeOffSet();
	void Multicast_ReplicateController(class AController* NewController);
	void Multicast_PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate);
	void Multicast_OnInsaneSkillCheck();
	void Multicast_LeaveGame(const struct FGuid& uniqueLeavingPlayerId);
	void Multicast_InteractionRollResult(bool rollResult);
	void Multicast_ConfirmItemDrop(bool Pressed);
	void Local_RequestBlink(const struct FTransform& destination);
	void Local_NotifyMatchEnded();
	bool Local_IsInteractionInputPressed(DeadByDaylight_EInputInteractionType interactionType);
	bool K2_SetActorLocationByBottomCapsule(const struct FVector& NewLocation, bool bSweep, struct FHitResult* SweepHitResult);
	void ItemUseReleased();
	void ItemUsePressed();
	void ItemDropReleased();
	void ItemDropPressed();
	bool IsStrafing();
	bool IsSnappingRotation();
	bool IsSnappingPosition();
	bool IsSnapping();
	bool IsRunningAndMoving();
	bool IsRunning();
	bool IsPlayingMontage(const struct FAnimationMontageDescriptor& animMontageID);
	bool IsPlayingAnyMontage();
	bool IsMoving();
	bool IsLocationClear(const struct FVector& targetPosition);
	bool IsLocallyObserved();
	bool IsInTerrorRadius();
	bool IsInteractionInputPressed(DeadByDaylight_EInputInteractionType interactionType);
	bool IsInStalkMode();
	bool IsInsideCloset();
	bool IsInParadise();
	bool IsInMeathookZone();
	bool IsIncapacitated();
	bool IsInBasement();
	bool IsHeadHidden();
	bool IsFacing(const struct FVector& Direction);
	bool IsExhausted();
	bool IsCrouchPressed();
	bool IsCrouching();
	bool IsCloaked();
	bool IsBeingInterrupted();
	bool IsAllowedNavigation();
	bool IsAIControlled();
	void InteractionInputReleased();
	void InteractionInputPressed();
	void Input_ToggleCrouch();
	void HideHead(bool Hide);
	bool HasTrapImmunity();
	bool HasMoveInput();
	bool HasDamageImmunity();
	bool HasClearPathToTargetWithIgnore(const struct FVector& targetPosition, TArray<class AActor*> ignoreActors);
	bool HasClearPathToTarget(const struct FVector& targetPosition);
	bool HasClearPathToItemDropOffPosition();
	bool HasAnimMontageEnded();
	float GetTunableValue(const struct FName& Key, float defaultValue, bool warnIfRowMissing);
	class ADBDPlayerController* GetSharedPlayerController();
	bool GetRunVaultEnabled();
	bool GetReverseTraverseEnabled();
	struct FRotator GetRepControlRotation();
	float GetRemainingTrapImmunityDuration();
	DBDSharedTypes_EPlayerTeam GetPlayerTeam();
	DBDSharedTypes_EPlayerRole GetPlayerRole();
	class UPlayerInteractionHandler* GetPlayerInteractionHandler();
	struct FRotator GetPlayerDirection();
	class ADBDPlayerController* GetPlayerController();
	class UCameraComponent* GetPlayerCamera();
	class UBoxOcclusionQueryComponent* GetPixelCounter();
	class UPerkManager* GetPerkManager();
	float GetPercentPixelsVisible();
	float GetPercentMovementSpeed();
	DBDSharedTypes_EPawnType GetPawnType();
	class UOtherCharactersVerticalCollisionsHandler* GetOtherCharactersVerticalCollisionsHandler();
	class UGameplayTagContainerComponent* GetObjectState();
	bool GetNearbyGroundLocation(struct FVector* groundLocation);
	struct FString GetNameDebugString();
	class UMontagePlayer* GetMontagePlayer();
	struct FMontagePlaybackDefinition GetMontagePlaybackDefinition(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower);
	float GetMontageLength(const struct FAnimationMontageDescriptor& animMontageID);
	class UAnimMontage* GetMontage(const struct FAnimationMontageDescriptor& animMontageID);
	struct FVector GetMeshFeetPosition();
	float GetMaxSpeed();
	float GetLuck();
	struct FVector GetLastSafeLocation();
	TArray<class UItemModifier*> GetItemModifiers();
	class USceneComponent* GetItemDropOffTransform();
	TArray<class UItemAddon*> GetItemAddons();
	bool GetIsInterrupting();
	bool GetIsInteracting();
	bool GetIsInFirstPerson();
	bool GetIsBeyondCrouchWalkSpeed();
	bool GetInteractionRollResult();
	struct FInteractionPlayerProperties GetInteractionPlayerProperties();
	class UInteractionDetectorComponent* GetInteractionDetectorComponent();
	class AInteractable* GetInteractable();
	class ADBDPlayer* GetGuidingPlayer();
	float GetGrassEffectRadiusMultiplier();
	bool GetForceDisableSkillChecks();
	class UActorComponent* GetFirstComponentByClass(class UClass* ComponentClass);
	struct FVector GetFeetPositionAtTargetLocation(const struct FVector& Location);
	struct FVector GetFeetPosition();
	bool GetFeetOnGround();
	class UCharacterDreamworldComponent* GetDreamworldComponent();
	class UPrimitiveComponent* GetDetectionZone(DBDSharedTypes_EDetectionZone detectionZoneID);
	bool GetDebugPrintAvailableInteractions();
	bool GetDebugFailAllInteractions();
	class ADBDPlayerState* GetDBDPlayerState();
	class UCustomizedSkeletalMesh* GetCustomizedSkeletalMesh();
	DBDSharedTypes_EInteractionAnimation GetCurrentInteractionAnimation();
	class UInteractionDefinition* GetCurrentInteraction();
	bool GetContinuousPrintDebug();
	class UChaseComponent* GetChaseComponent();
	float GetChargeableInteractionMultiplier();
	class UCharacterInventoryComponent* GetCharacterInventoryComponent();
	class ADBDPlayerCameraManager* GetCameraManager();
	float GetCameraCharacterYawDiff();
	struct FVector GetBoneRelativeLocation(const struct FName& targetBone, const struct FName& relativeBone);
	struct FVector GetBoneLocation(const struct FName& Name, TEnumAsByte<Engine_EBoneSpaces> space);
	float GetBlinkTime();
	class UBlindableComponent* GetBlindableComponent();
	float GetBaseFOV();
	struct FVector GetAverageVelocity();
	class UAuthoritativeMovementComponent* GetAuthoritativeMovementComponent();
	class USceneComponent* GetAttachPoint(const struct FName& attachPointName);
	class APlayerState* GetAssociatedPlayerState();
	void GetAnimTags(TArray<struct FName>* outTags);
	class UAnimInstance* GetAnimInstance();
	struct FAnimData GetAnimData();
	struct FVector GetAlmostCurrentVelocity();
	struct FVector GetActorLocationFromFeetLocation(const struct FVector& FeetLocation);
	struct FVector FindFurthestClearLocationBetweenPoints(const struct FVector& startPosition, const struct FVector& targetPosition);
	class ADBDPlayer* FindClosestSlashablePlayerInDetectionZone(DBDSharedTypes_EDetectionZone detectionZoneID);
	class ACharacter* FindClosestSlashableCharacterInDetectionZone(DBDSharedTypes_EDetectionZone detectionZoneID);
	void FastInteractionInputReleased();
	void FastInteractionInputPressed();
	void Dissolve(bool Dissolve);
	void DetachInteractor();
	void DebugPrint(const struct FString& inString);
	void DeactivateSkillChecks();
	void DBDUnCrouch();
	void DBDLog(const struct FString& LogText);
	void DBDCrouch();
	void DBD_ToggleForceAuthoritativeMovement();
	void DBD_ToggleDebugInteractionInZone();
	void DBD_SetMouseTurnSpeedMultiplier(float value);
	void DBD_SetMouseLookUpSpeedMultiplier(float value);
	void DBD_SetForwardInputLock(bool IsLocked);
	void DBD_DebugStartInteraction();
	void Client_TryInteractionType(DeadByDaylight_EInputInteractionType interactionType, class ADBDPlayer* Requester);
	void Client_TryInteraction(class UInteractionDefinition* Interaction, class ADBDPlayer* Requester, bool force, bool usingInputPersistence);
	void Client_SendCancelInteraction(class UInteractionDefinition* InteractionDefinition);
	void Client_QueueInteraction(DeadByDaylight_EInputInteractionType interactionType, class ADBDPlayer* Requester, float queuedTimer);
	void Client_ClearInteractionQueue();
	bool CanInterrupt_BP();
	bool CanInteractWithItems();
	bool CanInteract();
	void CancelCarry(bool alsoCancelForOtherPlayer);
	bool CanBeBlinded();
	void CameraUpdated();
	void Broadcast_PlayMontage_Server(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate);
	void Broadcast_PlayMontage_Multicast(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate);
	void Broadcast_Multicast_BlinkDestination(const struct FVector& Position, const struct FRotator& Rotation);
	void Broadcast_BlinkDestination(const struct FVector& Position, const struct FRotator& Rotation);
	bool Authority_TryForceEndOngoingScoreEvent(DeadByDaylight_EDBDScoreTypes scoreType);
	bool Authority_TryForceCancelOngoingScoreEvent(DeadByDaylight_EDBDScoreTypes scoreType);
	void Authority_SetDreamworldComponent(class UCharacterDreamworldComponent* Component);
	void Authority_RequestStun(DBDSharedTypes_EStunType stunType, class ADBDPlayer* stunner);
	void Authority_RemoveStatusEffectByID(const struct FName& statusEffectId, bool bRemoveAllWithID);
	class UStatusEffect* Authority_ImposeStatusEffect(const struct FName& statusEffectId, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect, bool shouldDisplay, float lifetime);
	class UStatusEffect* Authority_ImposeDynamicStatusEffect(const struct FName& statusEffectId, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect);
	void Authority_HandleScoreEvent(const struct FGameplayTag& scoreTypeTag, const struct FScoreEventData& ScoreEventData);
	void Authority_EvaluateIfPlayerCanSee();
	void Authority_EndStatusEffectByID(const struct FName& statusEffectId, bool bRemoveAllWithID);
	void Authority_EndOngoingScoreEvent(const struct FGameplayTag& scoreTypeTag);
	void Authority_CancelOngoingScoreEvent(const struct FGameplayTag& scoreTypeTag);
	void Authority_ActivateAuthoritativeMovementOnDropped();
	void AttachInteractor(class UInteractor* Interactor);
	void AddDetectionZone(DBDSharedTypes_EDetectionZone detectionZoneID, class UPrimitiveComponent* zone);
	void AbilityInputReleased();
	void AbilityInputPressed();
};

// Class DeadByDaylight.CamperPlayer
// 0x0538 (FullSize[0x15F0] - InheritedSize[0x10B8])
class ACamperPlayer : public ADBDPlayer
{
public:
	unsigned char                                      UnknownData_FKT6[0x8];                                     // 0x10B8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_CNG4[0x18];                                    // 0x10C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHookedStateChanged;                                      // 0x10D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGuidedStateChanged;                                      // 0x10E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPickedUpDelegate;                                        // 0x10F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPickedUpEndDelegate;                                     // 0x1108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnHPSlotChanged;                                           // 0x1118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DVYZ[0x40];                                    // 0x1128(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnImmobilizeStateChanged;                                  // 0x1168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VTX0[0x30];                                    // 0x1178(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnHookEscapeFailedCosmetic;                                // 0x11A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              InputMashCount;                                            // 0x11B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              InputMashDecayTime;                                        // 0x11BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ReverseBearTrapAttachSocket;                               // 0x11C0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               isBeingDissolved;                                          // 0x11CC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_29RJ[0x3];                                     // 0x11CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              FootprintAudibleRange;                                     // 0x11D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8XZ7[0x4];                                     // 0x11D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStalkedComponent*                           StalkedComponent;                                          // 0x11D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraResetToleranceYaw;                                   // 0x11E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraResetTolerancePitch;                                 // 0x11E4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraRecenterOffsetYaw;                                   // 0x11E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CameraRecenterOffsetPitch;                                 // 0x11EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EGender                             Gender;                                                    // 0x11F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ODDT[0x7];                                     // 0x11F1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 DropStaggerDuration;                                       // 0x11F8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 DropStaggerMaxSpeed;                                       // 0x1200(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeforDeathWhileCrawling;                                 // 0x1208(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TimeforDeathWhileHooked;                                   // 0x120C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SecondsUntilFootprintTrigger;                              // 0x1210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               TriggerAfflictionHUDIntro;                                 // 0x1214(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AUME[0x83];                                    // 0x1215(0x0083) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCamperStillnessTrackerComponent*            _stillnessTracker;                                         // 0x1298(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PartiallyHiddenStillnessThreshold;                         // 0x12A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_73XM[0x4];                                     // 0x12A4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      _escape;                                                   // 0x12A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AActor*                                      _overlappingEscape;                                        // 0x12B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpherePlayerOverlapComponent*               ProximityZone;                                             // 0x12B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OWOZ[0x18];                                    // 0x12C0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTimer                                   _dropStaggerTimer;                                         // 0x12D8(0x0028) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9WHV[0x8];                                     // 0x1300(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           SlashableZone;                                             // 0x1308(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                           HookSlashableZone;                                         // 0x1310(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCamperSlashableComponent*                   _camperSlashable;                                          // 0x1318(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTerrorRadiusReceiverComponent*              _terrorRadiusReceiverComponent;                            // 0x1320(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              CrouchCapsuleHalfHeight;                                   // 0x1328(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IKOffsetRightFoot;                                         // 0x132C(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IKOffsetLeftFoot;                                          // 0x1330(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_922O[0xC];                                     // 0x1334(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDPawnSensingComponent*                    _camperSensor;                                             // 0x1340(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USurviveTimerScoreEventComponent*            _surviveTimerScoreComponent;                               // 0x1348(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MZ9F[0x18];                                    // 0x1350(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ADBDPlayer*>                          _foundCampers;                                             // 0x1368(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ADBDPlayer*>                          _potentialSaviors;                                         // 0x1378(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_J9BA[0x8];                                     // 0x1388(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCamperHealthComponent*                      _healthComponent;                                          // 0x1390(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                        _hpSlot01;                                                 // 0x1398(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                        _hpSlot02;                                                 // 0x13A0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableComponent*                        _mendChargeable;                                           // 0x13A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBloodTrailSettings*                         _bloodTrailSettings;                                       // 0x13B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCamperBloodTrailComponent*                  _bloodTrailComponent;                                      // 0x13B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKillerInstinctComponent*                    _killerInstinctComponent;                                  // 0x13C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCameraAttachmentComponent*                  _cameraAttachment;                                         // 0x13C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharmSpawnerComponent*                      _charmSpawnerComponent;                                    // 0x13D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHookableComponent*                          _hookableComponent;                                        // 0x13D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UProtectionHitComponent*                     _protectionHitComponent;                                   // 0x13E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UScreamComponent*                            _screamComponent;                                          // 0x13E8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterPositionRecorderComponent*         _positionRecorder;                                         // 0x13F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NJ48[0xB4];                                    // 0x13F8(0x00B4) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _runInputPressed;                                          // 0x14AC(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JW3T[0x23];                                    // 0x14AD(0x0023) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _trapIndicatorActive;                                      // 0x14D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JU21[0x3];                                     // 0x14D1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ACamperPlayer>                _revealedSurvivor;                                         // 0x14D4(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5KMF[0x4];                                     // 0x14DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCamperEndGameComponent*                     _camperEndGameComponent;                                   // 0x14E0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _noOcclusionAkComponent;                                   // 0x14E8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U2JM[0x24];                                    // 0x14F0(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isHealingKOCamper;                                        // 0x1514(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSkillCheckFailed;                                       // 0x1515(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isBeingSacrificed;                                        // 0x1516(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isWiggleProgressionAllowed;                               // 0x1517(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PD7W[0xA0];                                    // 0x1518(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMoveComponentToComponent*                   _meshMover;                                                // 0x15B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USurvivorHitSprintEffect*                    _sprintEffect;                                             // 0x15C0(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LZGK[0x28];                                    // 0x15C8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperPlayer");
		return ptr;
	}



	void UpdateKillerDistanceEvent(float DeltaSeconds);
	void UpdateHealingTimer(float DeltaTime);
	void TriggerPutDownAnimation();
	void TriggerPickUpAnimation();
	void TriggerAfflictionHUDFeedback();
	void StopHealingTimer();
	void StartHealingTimer(float Time);
	void SetVignetteVisible(bool visible);
	void SetRevealedSurvivor(class ACamperPlayer* survivor);
	void SetPlayerExposedVFX();
	void SetIsSkillCheckFailed(bool isSkillCheckFailed);
	void SetIsHealingKOCamper(bool IsHealingKOCamper);
	void SetImmobilized(DeadByDaylight_ECamperImmobilizeState State);
	void SetGuidedActionLocal(DeadByDaylight_ECamperGuidedAction action);
	void SetGuidedAction(DeadByDaylight_ECamperGuidedAction action);
	void SetBeingCarried(bool IsBeingCarried, class ADBDPlayer* carrier);
	void SetAutoInteractionMashEnabled(bool Enabled);
	void Server_SetRunInput(bool Pressed);
	void Server_SetOverlappingEscape(class AActor* Escape);
	void Server_SetImmobilized(DeadByDaylight_ECamperImmobilizeState State);
	void Server_SendLeftRightMashedInput(bool Pressed);
	void Server_SendInteractMashedInput(bool Pressed);
	void RunLocked(bool Lock);
	void ResetPotentialSaviors();
	void ResetCameraAttach();
	void RemoveReverseBearTrap();
	void OnUnhooked();
	void OnRep_SprintEffect();
	void OnRep_RunInputPressed();
	void OnProximityEntered(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnPlayScream(class UAkAudioEvent* AudioEvent, bool fireSoundEvent);
	void OnPickUpEnter(class ADBDPlayer* picker, float TransitionTime);
	void OnPickUpDenied();
	void OnPawnSensed(class APawn* Pawn);
	void OnObsessionChanged(class ACamperPlayer* newObsession, class ACamperPlayer* previousObsession);
	void OnHpSlotSkillCheckResponseAesthetic(bool success, bool Bonus, class ADBDPlayer* Player, bool TriggerLoudNoise, bool hadInput, DBDSharedTypes_ESkillCheckCustomType Type, float ChargeChange);
	void OnHookedStateChangedCosmetic();
	void OnHooked();
	void OnHealthStateChanged(DeadByDaylight_ECamperDamageState oldDamageState, DeadByDaylight_ECamperDamageState CurrentDamageState);
	void OnFinishedPlaying();
	void OnDroppedStart();
	void OnDroppedEnd(bool clearLeader);
	void OnDroppedByBearTrap();
	void OnDamageHit(bool causedKO, bool isWeaponHit);
	void Multicast_SetOverlappingEscape(class AActor* Escape);
	void Multicast_SetImmobilized(DeadByDaylight_ECamperImmobilizeState State);
	void Multicast_SetHookEscapeAutoFail(bool Enabled);
	void Multicast_SetGuidedAction(DeadByDaylight_ECamperGuidedAction action);
	void Multicast_SetAuthoritativeMovementFlag(DeadByDaylight_EAuthoritativeMovementFlag flag, bool value);
	void Multicast_RemoveReverseBearTrap();
	void MoveToOwnerCarryJoint();
	void MakeCamperDisappearBleedOut();
	void MakeCamperDisappear();
	void Local_SetImmobilized(DeadByDaylight_ECamperImmobilizeState State);
	void Kill(bool sacrificed, bool Left);
	bool IsVaulting();
	bool IsUnintentionallyImmobilized();
	bool IsUnhookingSelf();
	bool IsTrapped();
	bool IsSacrificed();
	bool IsRunLocked();
	bool IsObsessionTarget();
	bool IsMovementGuided();
	bool IsInNeed();
	bool IsInDeathBed();
	bool IsImmobilized();
	bool IsHooked();
	bool IsHealingTimerExpired();
	bool IsGuidedBySlasher();
	bool IsEscaped();
	bool IsDeadOrInParadise();
	bool IsCrawling();
	bool IsBeingUnhooked();
	bool IsBeingPutOnHook();
	bool IsBeingPutDown();
	bool IsBeingPulledFromCloset();
	bool IsBeingPickedUp();
	bool IsBeingMended();
	bool IsBeingKilled();
	bool IsBeingInteractedWith();
	bool IsBeingHealed();
	bool IsBeingEndGameSacrificed();
	bool IsBeingCarried();
	void Input_Wiggle(float Input);
	void Input_ToggleRun();
	void HatchEscapeZoneEntered(class AActor* Escape);
	bool HasReverseBearTrap();
	bool HasHitEvents();
	bool HasGuidedAction();
	class UChargeableComponent* GetWiggleChargeable();
	struct FRotator GetToAimPointRotation();
	class UTerrorRadiusReceiverComponent* GetTerrorRadiusReceiverComponent();
	float GetStillness();
	class UScreamComponent* GetScreamComponent();
	class AReverseBearTrap* GetReverseBearTrap();
	class ACamperPlayer* GetRevealedSurvivor();
	float GetPercentHealingTimer();
	class AActor* GetOverlappingEscape();
	float GetObsessionTargetWeight();
	int GetNumberOfEntityRenderRegions();
	class UAkComponent* GetNoOcclusionAudioComponent();
	class UAnimationMontageSlave* GetMontageFollower();
	class UMoveComponentToComponent* GetMeshMover();
	float GetMaxGruntDistance(bool isLocalPlayerKiller);
	bool GetIsSkillCheckFailed();
	bool GetIsHealingKOCamper();
	bool GetIsBeingDissolved();
	DeadByDaylight_ECamperImmobilizeState GetImmobilizedState();
	class UHookableComponent* GetHookableComponent();
	class UCamperHealthComponent* GetHealthComponent();
	DeadByDaylight_ECamperGuidedAction GetGuidedAction();
	class UDBDClipRegionComponent* GetEntityRenderRegionAtIndex(int InIndex);
	float GetDropStaggerTimeLeft();
	float GetDropStaggerPercentTimeElapsed();
	class UChaseeCharacterComponent* GetChaseeCharacterComponent();
	class UCamperStillnessTrackerComponent* GetCamperStillnessComponent();
	class UDBDCamperData* GetCamperData();
	class UCamperAnimInstance* GetCamperAnimInstance();
	class UCameraAttachmentComponent* GetCameraAttachmentComponent();
	class UCamperBloodTrailComponent* GetBloodTrailComponent();
	TArray<class UDBDClipRegionComponent*> GetAllEntityRenderRegions();
	struct FVector GetAimPoint();
	void EventOnDeath();
	void EscapeTutorial();
	void Escape(class AActor* Escape, DeadByDaylight_EEscapeType escapeType);
	void DoSacrificialDissolve();
	void DetachFromGuidingPlayer();
	void DecalBlood_Puddles();
	void DBD_SetSurvivorCameraArmLength(float cameraArmLength);
	void DBD_SetImmobilized(DeadByDaylight_ECamperImmobilizeState State);
	void DBD_LeaveParadise();
	void DBD_ForceRun(bool Forced);
	void DBD_CheatEscaped();
	void DBD_AutoLeftRightMash(bool Enabled);
	void DBD_AutoInteractionMash(bool Enabled);
	float ComputeInteractionSuccessPercentage(class UInteractionDefinition* Interaction);
	bool ComputeHookEscapeResult();
	bool ComputeBeartrapEscapeResult();
	void Client_OnSlashedOutOfTrap(class ADBDPlayer* Requester);
	bool CanRushQuietly();
	bool CanBeShocked();
	bool CanBePickedUp();
	bool CanBeKilled();
	void CallOnDroppedByBearTrap();
	void Authority_OnSlashed(class ADBDPlayer* Attacker);
	void Authority_DropItemAtLastSafePosition();
	void AttachToGuidingPlayer();
	void AddBloodDropsToRightHand();
	void AddBloodDropsToLeftHand();
	void AddBloodDrippingToGK_Mori();
	void AddBloodDecalToGK_Mori();
	void ActivatePlayerExposedVFX();
	void ActivateLocalPlayerExposedVFX();
	void ActionInputReleased();
	void ActionInputPressed();
};

// Class DeadByDaylight.CamperSlashableComponent
// 0x00F0 (FullSize[0x01A8] - InheritedSize[0x00B8])
class UCamperSlashableComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_2XMP[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCapsuleComponent*                           _slashableZone;                                            // 0x00C0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                           _hookSlashableZone;                                        // 0x00C8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _standingCapsuleHalfHeight;                                // 0x00D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _crouchCapsuleHalfHeight;                                  // 0x00D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       _slashableDisablingStateTags;                              // 0x00D8(0x0020) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              _sourceActivationLingerDuration;                           // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N3VR[0x2C];                                    // 0x00FC(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USlashableActivationSourceCollection*        _slashableActivationSources;                               // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZZUK[0x78];                                    // 0x0130(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperSlashableComponent");
		return ptr;
	}



	void SetUseCrouchSlashableCapsule(bool useCrouchCapsule);
	void SetStandingCapsuleHalfHeight(float Height);
	void SetSlashableZone(class UCapsuleComponent* zone);
	void SetHookSlashableZone(class UCapsuleComponent* zone);
	void SetCrouchCapsuleHalfHeight(float Height);
};

// Class DeadByDaylight.PlayerStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UPlayerStateMachine : public UStateMachine
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerStateMachine");
		return ptr;
	}



};

// Class DeadByDaylight.CamperStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UCamperStateMachine : public UPlayerStateMachine
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperStateMachine");
		return ptr;
	}



};

// Class DeadByDaylight.StillnessTrackerComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UStillnessTrackerComponent : public UActorComponent
{
public:
	float                                              SpeedThreshold;                                            // 0x00B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceThreshold;                                         // 0x00BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceDecay;                                             // 0x00C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DecayWhileMoving;                                          // 0x00C4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LHOE[0x3];                                     // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              StillnessThreshhold;                                       // 0x00C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              StillnessTimerLimit;                                       // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DecaySpeedMultiplier;                                      // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M6T2[0x8];                                     // 0x00D4(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class ADBDPlayer>                   _trackedPlayer;                                            // 0x00DC(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0SWL[0xC];                                     // 0x00E4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StillnessTrackerComponent");
		return ptr;
	}



	void StartTracking();
};

// Class DeadByDaylight.CamperStillnessTrackerComponent
// 0x0060 (FullSize[0x0150] - InheritedSize[0x00F0])
class UCamperStillnessTrackerComponent : public UStillnessTrackerComponent
{
public:
	float                                              ChickenShitModifier;                                       // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LoudNoiseTime;                                             // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PRF2[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      ExposerSpawnTimes;                                         // 0x0108(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      ExposerDespawnTimes;                                       // 0x0118(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _exposerInstanceToSpawn;                                   // 0x0128(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ACamperExposerInstance*>              _exposerInstances;                                         // 0x0130(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UExposerInteriorZoneComponent*               _interiorZone;                                             // 0x0140(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F1T3[0x8];                                     // 0x0148(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CamperStillnessTrackerComponent");
		return ptr;
	}



	void OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnLevelReadyToPlay();
	void ExitInteriorZone(class UExposerInteriorZoneComponent* zone);
	void EnterInteriorZone(class UExposerInteriorZoneComponent* zone);
};

// Class DeadByDaylight.CartersSparkComponent
// 0x00C8 (FullSize[0x0180] - InheritedSize[0x00B8])
class UCartersSparkComponent : public UActorComponent
{
public:
	bool                                               _staticBlastEnabled;                                       // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GQ7L[0x8F];                                    // 0x00B9(0x008F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ADBDPlayer*>                          _totallyInsanePlayers;                                     // 0x0148(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                                  _owningPlayer;                                             // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F97Q[0x20];                                    // 0x0160(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CartersSparkComponent");
		return ptr;
	}



	void TriggerStaticBlastCooldown();
	void TriggerShockTherapyCooldown();
	void OnRequestAndBeginInteraction(class UInteractionDefinition* Interaction);
	void Multicast_OnShockTherapyCooldownCheatEntered();
	bool IsStaticBlastOnCooldown();
	bool IsShockTherapyOnCooldown();
	float GetStaticBlastCooldownPercentElapsed();
	void Authority_RegisterToGameEvents();
	void Authority_AddTotallyInsaneSurvivor(class ADBDPlayer* insaneSurvivor);
};

// Class DeadByDaylight.CDNPatchManager
// 0x0228 (FullSize[0x0258] - InheritedSize[0x0030])
class UCDNPatchManager : public UObject
{
public:
	struct FString                                     InstallDirectory;                                          // 0x0030(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PakOrder;                                                  // 0x0040(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TWYO[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PakMountPoint;                                             // 0x0048(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1LUE[0x48];                                    // 0x0058(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UGameInstance>                _gameInstance;                                             // 0x00A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FC1T[0xF0];                                    // 0x00A8(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAtlantaPendingContent*                      _currentContentToInstall;                                  // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FString>                             _remainingManifestsToInstall;                              // 0x01A0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, class UAtlantaPendingContent*> _contentToInstall;                                         // 0x01B0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FZ25[0x48];                                    // 0x0200(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAtlantaPendingContent*                      _MobilePendingContent;                                     // 0x0248(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XBBE[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CDNPatchManager");
		return ptr;
	}



	void OnRequestSucceeded(class UAtlantaPendingContent* pendingContent);
	void OnRequestFailed(const struct FText& ErrorText, int ErrorCode);
	void OnInstallSucceeded();
	void OnInstallFailed(const struct FText& ErrorText, int ErrorCode);
};

// Class DeadByDaylight.CharacterChaseVisualComponent
// 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
class UCharacterChaseVisualComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnChaseStartEvent;                                         // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChaseEndEvent;                                           // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UMaterialHelperUnaffectedStaticMeshComp*     _vignetteMeshComp;                                         // 0x00D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _relativeLocation;                                         // 0x00E0(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _relativeScale;                                            // 0x00EC(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _relativeRotation;                                         // 0x00F8(0x000C) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _fovModifyFactor;                                          // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BQ43[0x28];                                    // 0x0108(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterChaseVisualComponent");
		return ptr;
	}



	void OnObservedCharacterChange(class ADBDPlayer* Player);
	void OnAllChaseEnd();
};

// Class DeadByDaylight.CharacterCollection
// 0x0228 (FullSize[0x02E0] - InheritedSize[0x00B8])
class UCharacterCollection : public UActorComponent
{
public:
	unsigned char                                      UnknownData_7OHE[0x90];                                    // 0x00B8(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASlasherPlayer*                              _killer;                                                   // 0x0148(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _survivors[0x50];                                          // 0x0150(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _mainDBDPlayers[0x50];                                     // 0x01A0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _otherCharacters[0x50];                                    // 0x01F0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _nonPlayableCharacters[0x50];                              // 0x0240(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _allCharacters[0x50];                                      // 0x0290(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterCollection");
		return ptr;
	}



	void GetSurvivors();
	void GetMainDBDPlayers();
	class ASlasherPlayer* GetKiller();
	TArray<class ADBDPlayer*> GetAllDBDPlayers();
};

// Class DeadByDaylight.CharacterCollectionUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCharacterCollectionUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterCollectionUtilities");
		return ptr;
	}



	int STATIC_GetNumberOfInjuredHookedOrDyingSurvivors(class UObject* WorldContextObject);
	class ASlasherPlayer* STATIC_GetKiller(class UObject* WorldContextObject);
	void STATIC_GetInGameSurvivorsByRef(class UObject* WorldContextObject);
	TArray<class ADBDPlayer*> STATIC_GetInGameSurvivorsAsPlayers(class UObject* WorldContextObject);
	TArray<class ACamperPlayer*> STATIC_GetInGameSurvivors(class UObject* WorldContextObject);
	TArray<class ADBDPlayer*> STATIC_GetInGamePlayers(class UObject* WorldContextObject);
	TArray<class ADBDPlayer*> STATIC_GetCharactersByPlayerTeam(DBDSharedTypes_EPlayerTeam playerTeam, class UObject* WorldContextObject);
	TArray<class ADBDPlayer*> STATIC_GetAllDBDPlayers(class UObject* WorldContextObject);
	void STATIC_GetAllCharacters(class UObject* WorldContextObject);
};

// Class DeadByDaylight.CharacterCollisionsUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCharacterCollisionsUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterCollisionsUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCharacterHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterHelper");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterInfoScreen
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class UCharacterInfoScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_UZ0Q[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterInfoScreen");
		return ptr;
	}



	void OnBackButtonClick();
};

// Class DeadByDaylight.CharacterInventoryComponent
// 0x0088 (FullSize[0x0140] - InheritedSize[0x00B8])
class UCharacterInventoryComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_7G1N[0x48];                                    // 0x00B8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ACollectable*>                        _inventory;                                                // 0x0100(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UItemAddon*>                          _generalAddons;                                            // 0x0110(0x0010) (ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ACollectable*>                        _backpackInventory;                                        // 0x0120(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UItemAddon*>                          _allAddons;                                                // 0x0130(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterInventoryComponent");
		return ptr;
	}



	void StoreItem();
	void StartDrop(class ACollectable* Item);
	class ACollectable* SpawnCollectedItem(const struct FName& ItemId);
	void RemoveFromInventory(class ACollectable* Item);
	void OnRep_Inventory();
	void OnRep_GeneralAddons();
	void OnRep_BackpackInventory();
	void Multicast_RemoveFromInventory(class ACollectable* Item);
	void Multicast_ClearAndDestroyInventory();
	void Multicast_AddToInventory(class ACollectable* Item, DeadByDaylight_EInventoryType inventoryType);
	bool IsUsingAimItem();
	bool HasStoredItem();
	bool HasMaximumItemCount(class ACollectable* Item);
	bool HasItem();
	bool HasInInventory(class UClass* Item, DeadByDaylight_EInventoryType inventoryType);
	bool HasEquippedItem();
	struct FName GetItemID();
	int GetItemCountByID(const struct FName& ItemId);
	int GetItemCount();
	class ACollectable* GetItem();
	class ACollectable* GetFirstItemFromInventory(class UClass* Item, DeadByDaylight_EInventoryType inventoryType);
	TArray<class UItemAddon*> GetAddons();
	void EquipItem();
	void Drop(class ACollectable* Item, const struct FVector& Location, const struct FRotator& Rotation, bool onDeath, bool adjustToGround, bool dropInChest);
	void Collect(class ACollectable* Item, DeadByDaylight_EInventoryType inventoryType);
	void ClearAndDestroyInventory();
	void Authority_UseInventoryItem();
	void AddToInventory(class ACollectable* Item, DeadByDaylight_EInventoryType inventoryType);
};

// Class DeadByDaylight.ItemsAssetLibrary
// 0x0070 (FullSize[0x0120] - InheritedSize[0x00B0])
class UItemsAssetLibrary : public UAssetLibrary
{
public:
	unsigned char                                      UnknownData_XBYE[0x70];                                    // 0x00B0(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ItemsAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterItemsAssetLibrary
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class UCharacterItemsAssetLibrary : public UItemsAssetLibrary
{
public:
	unsigned char                                      UnknownData_73PD[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterItemsAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterPositionRecorderConfigurator
// 0x0010 (FullSize[0x00D0] - InheritedSize[0x00C0])
class UCharacterPositionRecorderConfigurator : public UBaseHitValidationConfigurator
{
public:
	unsigned char                                      UnknownData_25RN[0x10];                                    // 0x00C0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterPositionRecorderConfigurator");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterProgressionManager
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UCharacterProgressionManager : public UObject
{
public:
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterProgressionManager");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterStatsHandlerComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UCharacterStatsHandlerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_EPFM[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterStatsHandlerComponent");
		return ptr;
	}



	void ReceiveGameEvent(DeadByDaylight_EDBDScoreTypes scoreType, float amount, class AActor* Instigator, class AActor* Target);
	void OnGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void InitializePreMatchStats();
};

// Class DeadByDaylight.CharacterStatsUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCharacterStatsUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterStatsUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterTool
// 0x0108 (FullSize[0x0338] - InheritedSize[0x0230])
class ACharacterTool : public AActor
{
public:
	TArray<class ATargetPoint*>                        SpawnLocations;                                            // 0x0230(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCharacterToolData                          _customizationData;                                        // 0x0240(0x0070) (Edit, NoDestructor, NativeAccessSpecifierPrivate)
	class UClass*                                      _animInstanceClass;                                        // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _animated;                                                 // 0x02B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               UseInGameSkeleton;                                         // 0x02B9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _showPower;                                                // 0x02BA(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useMasterPoseForItems;                                    // 0x02BB(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _powerSocket;                                              // 0x02BC(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	Engine_EAttachmentRule                             _powerAttachmentRule;                                      // 0x02C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TDT5[0x7];                                     // 0x02C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _overallLightingClass[0x30];                               // 0x02C9(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FNamedButton                                _showHelp;                                                 // 0x0300(0x0018) (Edit, NativeAccessSpecifierPrivate)
	TArray<class ADBDMenuPlayer*>                      _characters;                                               // 0x0318(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      _lighting;                                                 // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OJX6[0x8];                                     // 0x0330(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterTool");
		return ptr;
	}



};

// Class DeadByDaylight.CharacterToolPlayMode
// 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
class ACharacterToolPlayMode : public ACharacterTool
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterToolPlayMode");
		return ptr;
	}



	TArray<class UAnimInstance*> GetAnimationInstances();
};

// Class DeadByDaylight.CharacterXPManager
// 0x00E0 (FullSize[0x0110] - InheritedSize[0x0030])
class UCharacterXPManager : public UObject
{
public:
	unsigned char                                      UnknownData_P8T2[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HS21[0xC0];                                    // 0x0050(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharacterXPManager");
		return ptr;
	}



};

// Class DeadByDaylight.ChargeableComponent
// 0x01D8 (FullSize[0x0290] - InheritedSize[0x00B8])
class UChargeableComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnInteractionEmptiedEvent;                                 // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInteractionCompletionStateChanged;                       // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SkillCheckResponseAestheticDelegate;                       // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    SkillCheckResponseAuthorityDelegate;                       // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ChargeAppliedAuthorityDelegate;                            // 0x00F8(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ChargeableCompletionPercentChangeAuthorityDelegate;        // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ChargeableCompletionPercentChangeCosmeticDelegate;         // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    DechargeBeginDelegate;                                     // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    DechargeEndDelegate;                                       // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               AllowSkillChecksAtFullCharge;                              // 0x0148(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B4F7[0x7];                                     // 0x0149(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ChargeableComponentID;                                     // 0x0150(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DechargeDelay;                                             // 0x0160(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZEV6[0x4];                                     // 0x0164(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSpeedBasedNetSyncedValue                   _currentCharge;                                            // 0x0168(0x0038) (Net, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MDJ0[0x8];                                     // 0x01A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTimer                                   _skillCheckFailurePenaltyTimer;                            // 0x01A8(0x0028) (Transient, NativeAccessSpecifierPrivate)
	struct FDBDTimer                                   _dechargeTimer;                                            // 0x01D0(0x0028) (Transient, NativeAccessSpecifierPrivate)
	TArray<struct FChargeData>                         _chargesThisFrame;                                         // 0x01F8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                              _instigatorsSinceEmpty;                                    // 0x0208(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FName, float>                          _tunableValueMap;                                          // 0x0218(0x0050) (Transient, NativeAccessSpecifierPrivate)
	bool                                               _isCharging;                                               // 0x0268(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B3Z1[0x7];                                     // 0x0269(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        _playersWhoDidSkillCheck;                                  // 0x0270(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _startingChargePercent;                                    // 0x0280(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _dechargeRate;                                             // 0x0284(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _enableAddCharge;                                          // 0x0288(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _enableSkillCheckFailurePenalty;                           // 0x0289(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDecharging;                                             // 0x028A(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _stopDechargingWhenComplete;                               // 0x028B(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6AWV[0x4];                                     // 0x028C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChargeableComponent");
		return ptr;
	}



	void SetSecondsToCharge(float SecondsToCharge);
	void SetDechargeRate(float DechargeRate);
	void OnRep_CurrentCharge();
	void OnCurrentChargeChanged(float value);
	void Multicast_OnEmptied();
	void Multicast_OnCompleteChanged(bool COMPLETED);
	bool IsSkillCheckTimePenaltyActive();
	bool IsChargeComplete();
	void IncreaseMaxChargeAdditive(float secondsToAdd);
	void IncreaseMaxCharge(float percent);
	bool HasPlayerDoneSkillCheck(int playerID);
	float GetTunableValue(const struct FName& TunableValueID);
	float GetPlayerCountPenaltyModifier(int PlayerCount);
	float GetPercentComplete();
	float GetMaxCharge();
	float GetCurrentCharge();
	float GetChargeRemaining();
	void Authority_SetEnableSkillCheckFailurePenalty(bool enable);
	void Authority_SetEnableAddCharge(bool enable);
	void Authority_Reset();
	void Authority_ApplyStartingCharge();
	void Authority_AddChargePercent(float ChargePercent, class AActor* Instigator);
	void Authority_AddCharge(float ChargeAmount, class AActor* Instigator, bool BypassSkillCheckFail);
};

// Class DeadByDaylight.ChargeableProgressProviderComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UChargeableProgressProviderComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_72SJ[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChargeableProgressProviderComponent");
		return ptr;
	}



};

// Class DeadByDaylight.ChargedAttackStateComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UChargedAttackStateComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_FCCG[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChargedAttackStateComponent");
		return ptr;
	}



	void SetIsCharging(bool isCharging);
	void SetChargingPercent(float ChargePercent);
	bool GetIsCharging();
	float GetChargingPercent();
};

// Class DeadByDaylight.ChargerComponent
// 0x0080 (FullSize[0x0138] - InheritedSize[0x00B8])
class UChargerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_X1UL[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     ChargerComponentID;                                        // 0x00C0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChargeStateChange;                                       // 0x00D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnChargePercentChange;                                     // 0x00E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z21N[0x18];                                    // 0x00F0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_EEnergyTypeEnum                     EnergyType;                                                // 0x0108(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3A4Z[0x3];                                     // 0x0109(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _currentEnergyLevel;                                       // 0x010C(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxEnergyLevel;                                           // 0x0110(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_92HI[0x24];                                    // 0x0114(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChargerComponent");
		return ptr;
	}



	void UseEnergy(float Seconds, float energyUseModifier);
	void SetNormalizedEnergyLevel(float EnergyLevel);
	void SetMaxEnergyLevel(float EnergyLevel);
	void SetEnergyLevel(float EnergyLevel);
	void Reset();
	void OnRep_EnergyLevel(float previousEnergyLevel);
	bool HasCharge();
	float GetNormalizedEnergyLevel();
	float GetMaxEnergyLevel();
	float GetEnergyLevel();
};

// Class DeadByDaylight.Charm
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class ACharm : public AActor
{
public:
	unsigned char                                      UnknownData_L52X[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      _skeletalMeshComponent;                                    // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class AItemVfx*                                    _actorVfx;                                                 // 0x0240(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R92K[0x8];                                     // 0x0248(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Charm");
		return ptr;
	}



	void BeginDestroySequence_Internal();
};

// Class DeadByDaylight.CharmAttachable
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCharmAttachable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharmAttachable");
		return ptr;
	}



};

// Class DeadByDaylight.CharmAttacher
// 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
class ACharmAttacher : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnAttachedOnActor;                                         // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharmAnimationTagsChanged;                               // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USkeletalMeshComponent*                      _chain;                                                    // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACharm*                                      _attachedCharm;                                            // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CG1Z[0x8];                                     // 0x0260(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharmAttacher");
		return ptr;
	}



	class USkeletalMeshComponent* GetSkeletalMeshComponentAttachedOn();
	class ACharm* GetAttachedCharm();
	struct FCharmAttacherAnimationTweak GetAnimationTweak();
	class AActor* GetActorAttachedOn();
	void DispatchOnCharmAnimationTagsChanged();
	void BindOnCharmAnimationTagsChanged();
};

// Class DeadByDaylight.CharmSpawnerComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UCharmSpawnerComponent : public UActorComponent
{
public:
	struct FName                                       SocketRootName;                                            // 0x00B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FZ73[0x4];                                     // 0x00C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCharmSlot>                          CharmSlots;                                                // 0x00C8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ScaleCharm;                                                // 0x00D8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                _forcedLOD;                                                // 0x00E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CharmSpawnerComponent");
		return ptr;
	}



};

// Class DeadByDaylight.CinematicManager
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UCinematicManager : public UObject
{
public:
	unsigned char                                      UnknownData_NEW5[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCinematic>                          _cinematicQueue;                                           // 0x0048(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CinematicManager");
		return ptr;
	}



	void PlaySingle(const struct FCinematic& Cinematic);
	void PlayMultiple(TArray<struct FCinematic> Cinematics);
	bool HasCinematicToPlay();
	struct FCinematic GetNextCinematicToPlay();
	void CancelAllCinematicToPlay();
};

// Class DeadByDaylight.CinematicScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UCinematicScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CinematicScreen");
		return ptr;
	}



};

// Class DeadByDaylight.ClientStartupInitializerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UClientStartupInitializerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ClientStartupInitializerInterface");
		return ptr;
	}



};

// Class DeadByDaylight.ClipManager
// 0x0118 (FullSize[0x0348] - InheritedSize[0x0230])
class AClipManager : public AActor
{
public:
	TArray<class UDBDClipRegionComponent*>             _clippingZones;                                            // 0x0230(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _meshComponents[0x50];                                     // 0x0240(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FMaterialOriginalState>              _dissolvedMeshes;                                          // 0x0290(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UMaterialInterface*, class UMaterialInterface*> _normal2dissolve;                                          // 0x02A0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<class UMaterialInterface*, class UMaterialInterface*> _dissolve2normal;                                          // 0x02F0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	class UDataTable*                                  _sphericalDissolveMaterials;                               // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ClipManager");
		return ptr;
	}



	void SphericalDissolveAt(const struct FVector& Location, float Radius);
	void RemoveDissolveMaterials();
};

// Class DeadByDaylight.CollectableCollection
// 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
class UCollectableCollection : public UActorComponent
{
public:
	TArray<class ACollectable*>                        _collectables;                                             // 0x00B8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NVAZ[0x38];                                    // 0x00C8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CollectableCollection");
		return ptr;
	}



};

// Class DeadByDaylight.CombinedPartyFriendFacade
// 0x0138 (FullSize[0x0168] - InheritedSize[0x0030])
class UCombinedPartyFriendFacade : public UObject
{
public:
	unsigned char                                      UnknownData_MJVF[0x138];                                   // 0x0030(0x0138) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CombinedPartyFriendFacade");
		return ptr;
	}



};

// Class DeadByDaylight.CombinedSpecialEventDataUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCombinedSpecialEventDataUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CombinedSpecialEventDataUtilities");
		return ptr;
	}



	struct FName STATIC_GetSpecialMusicState(const struct FCombinedSpecialEventData& Data);
	struct FColor STATIC_GetObjectOutlineColour(const struct FCombinedSpecialEventData& Data);
};

// Class DeadByDaylight.ConsentManager
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class UConsentManager : public UObject
{
public:
	unsigned char                                      UnknownData_F4T8[0x70];                                    // 0x0030(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ConsentManager");
		return ptr;
	}



};

// Class DeadByDaylight.ContainsItemInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UContainsItemInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ContainsItemInterface");
		return ptr;
	}



};

// Class DeadByDaylight.ContentScheduleManager
// 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
class UContentScheduleManager : public UObject
{
public:
	unsigned char                                      UnknownData_OITJ[0x108];                                   // 0x0030(0x0108) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObjectLibrary*                              _availableMapLibrary;                                      // 0x0138(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ContentScheduleManager");
		return ptr;
	}



};

// Class DeadByDaylight.ContextualQuestComponent
// 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
class UContextualQuestComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_B710[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSpecialBehaviourObjectsInfo>        _specialBehaviourObjectsInfo;                              // 0x00E0(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInitialized;                                            // 0x00F0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5EJP[0x7];                                     // 0x00F1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ContextualQuestComponent");
		return ptr;
	}



	void OnSpecialBehaviourSet__DelegateSignature(class ADBDPlayer* DBDPlayer);
	void OnRep_SpecialBehaviourObjectsInfo();
};

// Class DeadByDaylight.ControllerPairingManager
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UControllerPairingManager : public UObject
{
public:
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HKAP[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ControllerPairingManager");
		return ptr;
	}



};

// Class DeadByDaylight.CooldownTimerPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CooldownTimerPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.CoreCursor
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class UCoreCursor : public UUserWidget
{
public:
	class UScaleBox*                                   CursorScaleBox;                                            // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CoreCursor");
		return ptr;
	}



};

// Class DeadByDaylight.CoreHudRootWidget
// 0x0110 (FullSize[0x0370] - InheritedSize[0x0260])
class UCoreHudRootWidget : public UUserWidget
{
public:
	class UOverlay*                                    WidgetContainer;                                           // 0x0260(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                                    OuterContainer;                                            // 0x0268(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UOverlay*                                    SpectateContainer;                                         // 0x0270(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UScaleBox*                                   ScaleHud;                                                  // 0x0278(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              UnfocusedOpacity;                                          // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D2TF[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveFloat*                                 Test4kDpiScalingCurve;                                     // 0x0288(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      Test4kDpiCurveClass;                                       // 0x0290(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UUserWidget*                                 Test4kDpiCurveWidget;                                      // 0x0298(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      EndGameCollapseBarWidgetClass;                             // 0x02A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      EquippedItemWidgetClass;                                   // 0x02A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      EquippedPowerWidgetClass;                                  // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      ExternalEffectsWidgetClass;                                // 0x02B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      HudAlertWidgetClass;                                       // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      InteractionProgressWidgetClass;                            // 0x02C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      InteractionPromptsContainerWidgetClass;                    // 0x02D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      ItemInteractionWidgetClass;                                // 0x02D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      LeaningArrowsWidgetClass;                                  // 0x02E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      MatchResultWidgetClass;                                    // 0x02E8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      OfferingInteractionWidgetClass;                            // 0x02F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      PerksContainerWidgetClass;                                 // 0x02F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      PingStatusWidgetClass;                                     // 0x0300(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      PlayerStatusesWidgetClass;                                 // 0x0308(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      ScreenIndicatorWidgetClass;                                // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      SpectateBarWidgetClass;                                    // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      StartSequenceWidgetClass;                                  // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      StatusEffectWidgetClass;                                   // 0x0328(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      TestBuildFlagWidgetClass;                                  // 0x0330(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      TutorialMysteryNoteWidgetClass;                            // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      TutorialObjectivesWidgetClass;                             // 0x0340(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      TutorialPopupWidgetClass;                                  // 0x0348(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _coreBaseViewInterfaces[0x10];                             // 0x0350(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FScriptMulticastDelegate                    HUDWidgetsFadeOutCompletedDelegate;                        // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintCallable, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CoreHudRootWidget");
		return ptr;
	}



	void SetWidgetsVisibility(bool visible);
	void SetSpectateVisibility(bool visible);
	void FadeOutWidgets();
	void FadeInWidgets();
};

// Class DeadByDaylight.CreditsScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UCreditsScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CreditsScreen");
		return ptr;
	}



	void SetCreditsHtml(const struct FString& creditsHtml);
	void ScrollCreditsScreen(float scrollAmount);
};

// Class DeadByDaylight.CrossPlatformManager
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UCrossPlatformManager : public UObject
{
public:
	bool                                               _crossPlayAllowedByPlatform;                               // 0x0030(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _crossPlayAllowedByKraken;                                 // 0x0031(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UN4D[0x6];                                     // 0x0032(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CrossPlatformManager");
		return ptr;
	}



};

// Class DeadByDaylight.GeneratorDrivenActor
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class AGeneratorDrivenActor : public AActor
{
public:
	float                                              LightPriority;                                             // 0x0230(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EComponentMobility>             TargetMobileLightMobility;                                 // 0x0234(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JWRI[0x3];                                     // 0x0235(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<bool>                                       _activated;                                                // 0x0238(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AGenerator*>                          _generators;                                               // 0x0248(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GeneratorDrivenActor");
		return ptr;
	}



	void SetSpawnedObject(class AGenerator* Generator, int generatorId);
	void OnInitGeneratorDrivenActor(class AGenerator* Generator, int generatorId);
	void OnGeneratorRepairedEvent6(bool isAutoCompleted);
	void OnGeneratorRepairedEvent5(bool isAutoCompleted);
	void OnGeneratorRepairedEvent4(bool isAutoCompleted);
	void OnGeneratorRepairedEvent3(bool isAutoCompleted);
	void OnGeneratorRepairedEvent2(bool isAutoCompleted);
	void OnGeneratorRepairedEvent1(bool isAutoCompleted);
	void OnGeneratorRepairedEvent0(bool isAutoCompleted);
	void OnGeneratorRepairedBySurvivorEvent6(class ADBDPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent5(class ADBDPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent4(class ADBDPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent3(class ADBDPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent2(class ADBDPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent1(class ADBDPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivorEvent0(class ADBDPlayer* repairingSurvivor);
	void OnGeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor, int generatorId);
	void OnActivateGeneratorDrivenActor(bool isAutoCompleted, int generatorId);
	void Multicast_GeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor, int generatorId);
	void Multicast_ActivationChecked(bool activated, bool isAutoCompleted, int generatorId);
	bool IsValidGeneratorId(int generatorId);
	bool IsActivated(int generatorId);
	struct FRandomStream GetSharedTileRandomizer();
	void Authority_CheckGeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor, int generatorId);
	void Authority_CheckActivation(bool isAutoCompleted, int generatorId);
};

// Class DeadByDaylight.CrowBomb
// 0x0098 (FullSize[0x02F0] - InheritedSize[0x0258])
class ACrowBomb : public AGeneratorDrivenActor
{
public:
	float                                              _innerRadius;                                              // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _outerRadius;                                              // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxTakeoffDelay;                                          // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numCrows;                                                 // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _crowCenterDistance;                                       // 0x0268(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _crowOuterDistance;                                        // 0x026C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _eliminationSamples;                                       // 0x0270(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _eliminationStddev;                                        // 0x0274(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _meshComponentClass[0x30];                                 // 0x0278(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<class UWorldRunawayMeshComponent*>          _crows;                                                    // 0x02A8(0x0010) (ExportObject, Net, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LVRC[0x18];                                    // 0x02B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _root;                                                     // 0x02D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _traceStart;                                               // 0x02D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _traceEnd;                                                 // 0x02E0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _landed;                                                   // 0x02E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JFNZ[0x7];                                     // 0x02E9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CrowBomb");
		return ptr;
	}



	void TriggerTakeOff(const struct FVector& triggerLocation);
	void TriggerLand();
};

// Class DeadByDaylight.CrowdChoiceTugOfWarPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UCrowdChoiceTugOfWarPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CrowdChoiceTugOfWarPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.CurrencyDisplayable
// 0x0060 (FullSize[0x0290] - InheritedSize[0x0230])
class ACurrencyDisplayable : public AActor
{
public:
	unsigned char                                      UnknownData_QVHV[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      SkeletalMeshComponent;                                     // 0x0238(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<DBDSharedTypes_ECurrencyType, class USkeletalMesh*> _currencyMeshes;                                           // 0x0240(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CurrencyDisplayable");
		return ptr;
	}



	void FinishSpawningCurrency(DBDSharedTypes_ECurrencyType currencyType);
	void BeginDestroySequence_Internal();
};

// Class DeadByDaylight.CurveFloatNetIdSubsystem
// 0x0060 (FullSize[0x0098] - InheritedSize[0x0038])
class UCurveFloatNetIdSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_MUOU[0x60];                                    // 0x0038(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CurveFloatNetIdSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.CustomWidgetWrapper
// 0x0050 (FullSize[0x01A0] - InheritedSize[0x0150])
class UCustomWidgetWrapper : public UCanvasPanel
{
public:
	struct FScriptMulticastDelegate                    OnVersion;                                                 // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTag                                ID;                                                        // 0x0160(0x000C) (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6FVC[0x4];                                     // 0x016C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCustomWidgetWrapper*                        ManuallyParentWrapper;                                     // 0x0170(0x0008) (Edit, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UCustomWidgetWrapper*>                ManuallyChildWrappers;                                     // 0x0178(0x0010) (Edit, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCustomWidgetWrapperInitializer*             InitializerWidget;                                         // 0x0188(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YSZP[0x10];                                    // 0x0190(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CustomWidgetWrapper");
		return ptr;
	}



	void ApplyVersion(int Version);
	void ApplyScale(float Scale);
	void ApplyOpacity(float Opacity);
};

// Class DeadByDaylight.CustomWidgetWrapper_HudEditor
// 0x00C8 (FullSize[0x0268] - InheritedSize[0x01A0])
class UCustomWidgetWrapper_HudEditor : public UCustomWidgetWrapper
{
public:
	float                                              MinOpacity;                                                // 0x01A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxOpacity;                                                // 0x01A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinScale;                                                  // 0x01A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxScale;                                                  // 0x01AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                NbVersions;                                                // 0x01B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HideUnderOpacity;                                          // 0x01B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FColor                                      HiddenStatusTintColor;                                     // 0x01B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HiddenStatusOpacity;                                       // 0x01BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              OverlapAboveSizeRatio;                                     // 0x01C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KD96[0x4];                                     // 0x01C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       IgnoreOverlapIds;                                          // 0x01C8(0x0020) (Edit, NativeAccessSpecifierPublic)
	struct FHudEditorDragFromParentAxisLimit           ParentDragLimitX;                                          // 0x01E8(0x0014) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FHudEditorDragFromParentAxisLimit           ParentDragLimitY;                                          // 0x01FC(0x0014) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	bool                                               IsEditingHudByInput;                                       // 0x0210(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UBIO[0x3];                                     // 0x0211(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FColor                                      OverlapStatusTintColor;                                    // 0x0214(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O3TR[0x50];                                    // 0x0218(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CustomWidgetWrapper_HudEditor");
		return ptr;
	}



	float GetScale();
	float GetOpacity();
	void FlipScreenPosition();
	void FlipPositionWithChildLinkWidget();
	void ClampToViewport();
	bool CanEditScale();
	bool CanEditOpacity();
	void ApplyScaleWithOverlappingWrappers(float Scale, class UWidget* Widget, TArray<class UCustomWidgetWrapper_HudEditor*> allEditableWrappers, bool needDetectOverlapping);
	void AddToTranslation(const struct FVector2D& Translation);
};

// Class DeadByDaylight.CustomWidgetWrapper_InGame
// 0x0028 (FullSize[0x01C8] - InheritedSize[0x01A0])
class UCustomWidgetWrapper_InGame : public UCustomWidgetWrapper
{
public:
	int                                                VirtualJoystickIndex;                                      // 0x01A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XBD4[0x24];                                    // 0x01A4(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CustomWidgetWrapper_InGame");
		return ptr;
	}



	void UpdateSettings();
};

// Class DeadByDaylight.DailyRewardUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDailyRewardUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DailyRewardUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.DailyRitualsScreen
// 0x0060 (FullSize[0x0180] - InheritedSize[0x0120])
class UDailyRitualsScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_YBQC[0x60];                                    // 0x0120(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DailyRitualsScreen");
		return ptr;
	}



	void OnRemoveRitual(const struct FString& ID);
	void OnClosed();
	void OnClaimRitual(const struct FString& ID);
	void OnClaimAllRituals();
};

// Class DeadByDaylight.DBD_CrossDissolver
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UDBD_CrossDissolver : public UActorComponent
{
public:
	TArray<class UMaterialInterface*>                  NewMaterials;                                              // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USkeletalMeshComponent*>              BaseSkeletalMesh;                                          // 0x00C8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USkeletalMeshComponent*>              ClonedSkeletalMeshes;                                      // 0x00D8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBD_CrossDissolver");
		return ptr;
	}



	void MakeClone();
	void KillClone();
};

// Class DeadByDaylight.DBD_SoundClipUtil
// 0x00C0 (FullSize[0x0178] - InheritedSize[0x00B8])
class UDBD_SoundClipUtil : public UActorComponent
{
public:
	TArray<struct FMapMeshToAkAudioEvent>              AudioMap;                                                  // 0x00B8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<struct FName, struct FMapMeshToAkAudioEvent>  _audioEventMap;                                            // 0x00C8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	TArray<struct FMapSoundsToAvoid>                   _objectsWhoHavePlayedASound;                               // 0x0118(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<class UAkAudioEvent*, float>                  _nextSoundPlayTime;                                        // 0x0128(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBD_SoundClipUtil");
		return ptr;
	}



	void OnGotMeshToTriggerSound(class UStaticMeshComponent* usm);
	void OnCharacterEnterSoundRegion(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	class UAkAudioEvent* GetAudioEventForMesh(class UStaticMeshComponent* usm);
};

// Class DeadByDaylight.DBD_SoundEventSpawner
// 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
class ADBD_SoundEventSpawner : public AActor
{
public:
	TArray<struct FDBD_SoundSpawnerData>               AtlantaSoundDescriptor;                                    // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FDBD_SoundSpawnerData>               SoundDescriptor;                                           // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JLA9[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              _loadedSoundAssets;                                        // 0x0258(0x0010) (ZeroConstructor, Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBD_SoundEventSpawner");
		return ptr;
	}



	void OnLoudNoiseTriggered(class AActor* originator, class AActor* instigatingActor, const struct FVector& Location, bool shouldTrack, float* audibleRange, bool isQuickAction);
	void AssetsLoaded();
};

// Class DeadByDaylight.DBDAggregateCullDistanceVolumes
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class ADBDAggregateCullDistanceVolumes : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAggregateCullDistanceVolumes");
		return ptr;
	}



	void SpawnCullDistanceVolumes();
};

// Class DeadByDaylight.DBDAggregateParticleSystemComponent
// 0x0064 (FullSize[0x0710] - InheritedSize[0x06AC])
class UDBDAggregateParticleSystemComponent : public UParticleSystemComponent
{
public:
	float                                              EndFadeDistance;                                           // 0x06AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      LocatorComponentCache[0x50];                               // 0x06B0(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               PendingReset;                                              // 0x0700(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1UXE[0xF];                                     // 0x0701(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAggregateParticleSystemComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAggregateParticleManager
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class ADBDAggregateParticleManager : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAggregateParticleManager");
		return ptr;
	}



};

// Class DeadByDaylight.DBDLocatorComponent
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UDBDLocatorComponent : public USceneComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDLocatorComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAggregateParticleLocatorComponent
// 0x0010 (FullSize[0x0220] - InheritedSize[0x0210])
class UDBDAggregateParticleLocatorComponent : public UDBDLocatorComponent
{
public:
	class UParticleSystem*                             Template;                                                  // 0x0210(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    _particleComponent;                                        // 0x0218(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAggregateParticleLocatorComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAIPlayerController
// 0x0028 (FullSize[0x0600] - InheritedSize[0x05D8])
class ADBDAIPlayerController : public ADBDAIController
{
public:
	unsigned char                                      UnknownData_51D5[0x18];                                    // 0x05D8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAICharacterBehaviour*>               _currentBehaviours;                                        // 0x05F0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAIPlayerController");
		return ptr;
	}



	void StopCharacterBehaviour(class UClass* behaviourClass);
	void StopAllCharacterBehaviours();
	void StartCharacterBehaviour(class UClass* behaviourClass, class UAICharacterBehaviourData* characterBehaviourData);
	void ResumeCharacterBehaviour(class UClass* behaviourClass);
	void PauseCharacterBehaviour(class UClass* behaviourClass);
	void OnBehaviourEndedHandler(class UAICharacterBehaviour* behaviourEnded);
	void MovePlayerToActor(class AActor* Goal, float AcceptanceRadius);
};

// Class DeadByDaylight.OfferingCard
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class AOfferingCard : public AActor
{
public:
	TArray<struct FRarityTexture>                      RarityTextures;                                            // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOfferingTypeTexture>                OfferingTypeTextures;                                      // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OfferingCard");
		return ptr;
	}



	void PlayAnim(DeadByDaylight_EOfferingAnimState State);
};

// Class DeadByDaylight.OfferingEffectCollection
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UOfferingEffectCollection : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_ONVX[0x50];                                    // 0x0038(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OfferingEffectCollection");
		return ptr;
	}



	bool HasOfferingWithTag(int playerID, const struct FName& Tag);
	bool HasOfferingOfType(DeadByDaylight_EOfferingEffectType Type, int playerID, const struct FName& Tag);
};

// Class DeadByDaylight.OfferingHandler
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UOfferingHandler : public UObject
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FName>                               _levelPerkIDs;                                             // 0x0038(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OfferingHandler");
		return ptr;
	}



};

// Class DeadByDaylight.OfferingSequenceAssets
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class AOfferingSequenceAssets : public AActor
{
public:
	TArray<struct FOfferingRevealDelays>               OfferingRevealDelays;                                      // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AOfferingCard*>                       Cards;                                                     // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OfferingSequenceAssets");
		return ptr;
	}



	void PlaySmoke();
	void PlayFadeOut();
	void PlayFadeIn();
};

// Class DeadByDaylight.OfferingSequenceManager
// 0x0050 (FullSize[0x0280] - InheritedSize[0x0230])
class AOfferingSequenceManager : public AActor
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class APlayerController*                           _localPlayerController;                                    // 0x0238(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOfferingHandler*                            _offeringHandler;                                          // 0x0240(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AOfferingSequenceAssets*                     _sequenceAssets;                                           // 0x0248(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDLobbyHud*                                _hud;                                                      // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACameraActor*                                _offeringCamera;                                           // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N0AM[0x20];                                    // 0x0260(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OfferingSequenceManager");
		return ptr;
	}



	void FadeInScreen();
};

// Class DeadByDaylight.OfferingUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UOfferingUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OfferingUtilities");
		return ptr;
	}



	bool STATIC_IsPlayerEquippedWithOfferingWithTag(class ADBDPlayer* Player, const struct FName& offeringTag);
	bool STATIC_HasOfferingOfType(class UObject* WorldContextObject, DeadByDaylight_EOfferingEffectType offeringEffectType, int playerID);
	bool STATIC_HasItemLossProtection(class ADBDPlayer* Player);
};

// Class DeadByDaylight.OfflineLobbyLevel
// 0x01D8 (FullSize[0x0488] - InheritedSize[0x02B0])
class AOfflineLobbyLevel : public ALobbyLevel
{
public:
	struct FVector                                     _partyLobbyInviteButtonOffset;                             // 0x02B0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BCJF[0x4];                                     // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class APlayerStart>>         _roleSelectionCamperSpawns;                                // 0x02C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class APlayerStart>>         _roleSelectionSlasherSpawns;                               // 0x02D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ADisplayStand>                _offlineLobbyLocalSlasherSpawn;                            // 0x02E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _partyLobbyEmptySlotFxOffset;                              // 0x02E8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ADisplayStand>                _offlineLobbyLocalCamperSpawn;                             // 0x02F4(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2PDS[0x4];                                     // 0x02FC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVector>                             _partyLobbySlasherPOVTrackerOffsets;                       // 0x0300(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _partyLobbyEmptySlotSilhouette[0x30];                      // 0x0310(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<TWeakObjectPtr<class ADisplayStand>>        _partyLobbySlasherDisplayStands;                           // 0x0340(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ADisplayStand>>        _partyLobbyCamperDisplayStands;                            // 0x0350(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _meatHookForCustomization[0x30];                           // 0x0360(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TWeakObjectPtr<class ATargetPoint>                 _meatHookSpawn;                                            // 0x0390(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _charmForCustomizationZoom[0x30];                          // 0x0398(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TWeakObjectPtr<class ATargetPoint>                 _camperCharmSpawn;                                         // 0x03C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ATargetPoint>                 _slasherCharmSpawn;                                        // 0x03D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class ADisplayStand>, TWeakObjectPtr<class ADBDMenuSilhouette>> _partyLobbyEmptySlotPawns;                                 // 0x03D8(0x0050) (Transient, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HKL9[0x48];                                    // 0x0428(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ADBDMenuPlayer*>                      _destroyingPawns;                                          // 0x0470(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FJRF[0x8];                                     // 0x0480(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OfflineLobbyLevel");
		return ptr;
	}



	void OnStateChanged(DeadByDaylight_EOfflineLobbyState LobbyState);
	void CheckDestroyingPawns(class AActor* DestroyedActor);
};

// Class DeadByDaylight.OnboardingUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UOnboardingUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OnboardingUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.OniBasicAttackComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UOniBasicAttackComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_5KHI[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OniBasicAttackComponent");
		return ptr;
	}



};

// Class DeadByDaylight.OniDemonModeAttackStateComponent
// 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
class UOniDemonModeAttackStateComponent : public UChargedAttackStateComponent
{
public:
	struct FScriptMulticastDelegate                    OnChargedAttackReadyChanged;                               // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_4231[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OniDemonModeAttackStateComponent");
		return ptr;
	}



	void Server_ClearChargingState();
	void Multicast_ClearChargingState();
};

// Class DeadByDaylight.OnlineLobbyLevel
// 0x0038 (FullSize[0x02E8] - InheritedSize[0x02B0])
class AOnlineLobbyLevel : public ALobbyLevel
{
public:
	class UProceduralGenerationData*                   ProceduralGenerationData;                                  // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FVector>                             _onlineLobbySlasherPOVTrackerOffsets;                      // 0x02B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ADisplayStand>>        _onlineLobbyCamperDisplayStands;                           // 0x02C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<TWeakObjectPtr<class ADisplayStand>>        _onlineLobbySlasherDisplayStands;                          // 0x02D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OnlineLobbyLevel");
		return ptr;
	}



};

// Class DeadByDaylight.OnlinePrivilegeManager
// 0x0008 (FullSize[0x0040] - InheritedSize[0x0038])
class UOnlinePrivilegeManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_0ASK[0x8];                                     // 0x0038(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OnlinePrivilegeManager");
		return ptr;
	}



};

// Class DeadByDaylight.OnlineSystemHandler
// 0x0418 (FullSize[0x0448] - InheritedSize[0x0030])
class UOnlineSystemHandler : public UObject
{
public:
	unsigned char                                      UnknownData_PGVB[0x168];                                   // 0x0030(0x0168) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULocalPlayer*                                _cachedLocalPlayer;                                        // 0x0198(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x01A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameSessionDS*                              _gameSessionDS;                                            // 0x01A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3549[0x218];                                   // 0x01B0(0x0218) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDServerInstance*                          _serverInstance;                                           // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UALM[0x30];                                    // 0x03D0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCrossPlatformManager*                       _crossPlatformManager;                                     // 0x0400(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PVPY[0x40];                                    // 0x0408(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OnlineSystemHandler");
		return ptr;
	}



};

// Class DeadByDaylight.OtherCharactersVerticalCollisionsHandler
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UOtherCharactersVerticalCollisionsHandler : public UActorComponent
{
public:
	TArray<class AActor*>                              _ignoreBelowActors;                                        // 0x00B8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class AActor*>                              _overlappingActors;                                        // 0x00C8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCapsuleComponent*                           _pawnDetector;                                             // 0x00D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OtherCharactersVerticalCollisionsHandler");
		return ptr;
	}



	void SetPawnDetector(class UCapsuleComponent* pawnDetector);
	void OnPawnDetectorOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnPawnDetectorOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void InitializeOverlapDetection();
};

// Class DeadByDaylight.OutfitHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UOutfitHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OutfitHelper");
		return ptr;
	}



};

// Class DeadByDaylight.RecommendationsFilter
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class URecommendationsFilter : public UObject
{
public:
	unsigned char                                      UnknownData_PMOD[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RecommendationsFilter");
		return ptr;
	}



};

// Class DeadByDaylight.OutfitRecommendationsFilter
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
class UOutfitRecommendationsFilter : public URecommendationsFilter
{
public:
	unsigned char                                      UnknownData_AVEE[0x28];                                    // 0x0038(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OutfitRecommendationsFilter");
		return ptr;
	}



};

// Class DeadByDaylight.OutlineReveal
// 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
class UOutlineReveal : public UObject
{
public:
	unsigned char                                      UnknownData_U3I7[0x40];                                    // 0x0030(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ADBDPlayer*>                          _affectedCharacters;                                       // 0x0070(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SJ01[0x28];                                    // 0x0080(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OutlineReveal");
		return ptr;
	}



};

// Class DeadByDaylight.OutOfSightMeshRotator
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UOutOfSightMeshRotator : public UActorComponent
{
public:
	float                                              _maxDistance;                                              // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _dotProductThreshold;                                      // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADBDPlayer*                                  _locallyObservedPlayer;                                    // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UMeshComponent*>                      _meshesToRotate;                                           // 0x00C8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _rotationOffset;                                           // 0x00D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_M11E[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OutOfSightMeshRotator");
		return ptr;
	}



	void SetMeshesToRotate(TArray<class UMeshComponent*> meshesToRotate);
};

// Class DeadByDaylight.OverlayMenuScreen
// 0x01E0 (FullSize[0x0300] - InheritedSize[0x0120])
class UOverlayMenuScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_C1SJ[0x1E0];                                   // 0x0120(0x01E0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OverlayMenuScreen");
		return ptr;
	}



	void SetGameType(DeadByDaylight_EGameType GameType);
	void OnSurvivorCameraSensitivityChanged(int value);
	void OnSettingsOptionIntValueChanged(int ID, int value);
	void OnSettingsOptionCheckboxSelected(int ID, bool IsSelected);
	void OnSettingsOptionButtonClicked(int ID);
	void OnSelectTab(int tabIndex);
	void OnResetDefaultSettings();
	void OnResetDefaultKeybindings(const struct FString& keyBindingsData, bool mustBeGamepadKey);
	void OnRequestKeyInput(const struct FString& Name, bool isAxis, float Scale, const struct FString& Key);
	void OnQuitButtonClick();
	void OnPrivacyPolicyButtonClick();
	void OnPlayerInfoClick(const struct FString& playerID);
	void OnLanguageChange(int value);
	void OnKillerCameraSensitivityChanged(int value);
	void OnForumsButtonClick();
	void OnEULAButtonClick();
	void OnCustomerSupportButtonClick();
	void OnBackButtonClick();
	void OnAtlantaSettingButtonClick(int buttonID);
	void OnAimAssistClick(bool value);
};

// Class DeadByDaylight.OverlayMenuScreenScaleform
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UOverlayMenuScreenScaleform : public UOverlayMenuScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OverlayMenuScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.OverlayMenuScreenUMG
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UOverlayMenuScreenUMG : public UOverlayMenuScreen
{
public:
	class UUMGAtlantaSettingScreen*                    _atlOverlayMenuScreen;                                     // 0x0300(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OverlayMenuScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.Pallet
// 0x0128 (FullSize[0x0450] - InheritedSize[0x0328])
class APallet : public AInteractable
{
public:
	float                                              PalletDownEvadeDoorFrontPointOffset;                       // 0x0328(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1BSU[0x1C];                                    // 0x032C(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_EPalletState                        _state;                                                    // 0x0348(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isIllusionaryPalletDown;                                  // 0x0349(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U9X9[0x6];                                     // 0x034A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      _illusionaryPallet;                                        // 0x0350(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionDefinition*                      _destroyLeft;                                              // 0x0358(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInteractionDefinition*                      _destroyRight;                                             // 0x0360(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _pushBox;                                                  // 0x0368(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxDotproductThresholdForPulldownAccross;                 // 0x0370(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _fallDuration;                                             // 0x0374(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _stunBoxLeft;                                              // 0x0378(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _stunBoxRight;                                             // 0x0380(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _stunnedActors[0x50];                                      // 0x0388(0x0050) UNKNOWN PROPERTY: SetProperty
	class ADBDPlayer*                                  _playerExecutingPulldown;                                  // 0x03D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPalletPushSettings                         _pushSettings;                                             // 0x03E0(0x0002) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0PTJ[0x3E];                                    // 0x03E2(0x003E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDNavEvadeLoopComponent*                   _navEvadeLoopComponent;                                    // 0x0420(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPalletPulldownBlockerComponent*             _palletPulldownBlockerComponent;                           // 0x0428(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDreamPallet;                                            // 0x0430(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BOHC[0x1F];                                    // 0x0431(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Pallet");
		return ptr;
	}



	void UpdateIllusionaryPallet();
	void SetPalletState(DeadByDaylight_EPalletState State);
	void SetIllusionaryPallet(class USkeletalMeshComponent* Pallet);
	void ResetPallet();
	void PulldownPallet();
	void PullDown(class ADBDPlayer* Player, const struct FPalletPushSettings& pushSettings, DeadByDaylight_EPalletStunZoneSideStrategy stunZoneSideStrategy);
	void OnStunOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnPalletStunHit();
	void OnPalletPulledUp_BP();
	void OnPalletPulldownBlockedByEntityShow();
	void OnPalletPulldownBlockedByEntityHide();
	void OnFallen();
	void Multicast_StunPlayer(class AActor* Actor, class ACamperPlayer* survivor, bool stunBreakPallet);
	void Multicast_ResetPallet();
	void Multicast_PulldownPallet();
	bool IsPulldownBlockedByEntity();
	class ADBDPlayer* GetPlayerDoingPulldown();
	bool GetIsPulledDown();
	bool GetIsDreamPallet();
	float GetFallDuration();
	void GetDestructibleAreaPrimitiveComponents(TArray<class UPrimitiveComponent*>* prims);
	void ExplodeStunPallet(class ADBDPlayer* Player);
	void ExplodePallet(class ADBDPlayer* Player);
	bool CanPulldown(class ADBDPlayer* Player, const struct FVector& interactionAxis, bool isStationary);
	void Authority_StunSlashersinStunZone(class AActor* Actor);
	void Authority_OnOverlapPushBox(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class DeadByDaylight.PalletPulldownBlockerComponent
// 0x00B8 (FullSize[0x0170] - InheritedSize[0x00B8])
class UPalletPulldownBlockerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_EFYZ[0xA8];                                    // 0x00B8(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isPalletPulldownBlockedByEntity;                          // 0x0160(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L58M[0x3];                                     // 0x0161(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _blockedDisappearFxTime;                                   // 0x0164(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_59A5[0x8];                                     // 0x0168(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PalletPulldownBlockerComponent");
		return ptr;
	}



	void OnRep_IsPalletPulldownBlockedByEntity();
	void Multicast_PalletPulldownBlockedShowCosmetic();
	void Multicast_PalletPulldownBlockedHideCosmetic();
};

// Class DeadByDaylight.PalletTracker
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class APalletTracker : public AActor
{
public:
	class APallet*                                     _procedurallySpawnedPallet;                                // 0x0230(0x0008) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APallet*                                     _dreamPallet;                                              // 0x0238(0x0008) (BlueprintVisible, Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             _indicatorLocation;                                        // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4D8X[0x8];                                     // 0x0248(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PalletTracker");
		return ptr;
	}



	void RevealToLocalPlayerBP(bool shown);
	void InitializeTunableValues(class ASlasherPlayer* Slasher);
	void EnableSelectedEffectToLocalPlayer(bool activated);
	bool CanSpawnDreamPalletAtLocation();
};

// Class DeadByDaylight.PanelScreen
// 0x01F8 (FullSize[0x0318] - InheritedSize[0x0120])
class UPanelScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_0MT9[0x1F8];                                   // 0x0120(0x01F8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PanelScreen");
		return ptr;
	}



	void OnWebNodeSelected(int characterId, int ID, int nodeDepth);
	void OnWebBuilt(int characterId);
	void OnStoreButtonClick();
	void OnSideTabButtonClick(int tabIndex);
	void OnSelectedEquipableSlotZoomChange(bool zoomIn);
	void OnRotateCharacter(float mouseDistanceChange);
	void OnRoleButtonClick();
	void OnReservedBloodPoints(int characterId, int BloodPoints, bool fullCost);
	void OnRegenerateButtonClick(int characterId);
	void OnPrestigeUp(int characterId);
	void OnPanelsHidden();
	void OnLoadoutSlotButtonClick(int SlotIndex);
	void OnItemUnselected(int itemIndex);
	void OnItemSelected(int itemIndex);
	void OnEquipableSlotClicked(int clickedSlotCategory, int clickedSlotIndex);
	void OnCrowdChoiceCharacterClick();
	void OnConfirmCollectSelectedNode(int characterId);
	void OnCharInfoClick();
	void OnCharacterSlotButtonClick(int characterIndex);
	void OnAvailableItemsSortingChange(int newSorting);
	void OnAvailableItemClicked(int clickedItemIndex);
};

// Class DeadByDaylight.PanelScreenScaleform
// 0x0000 (FullSize[0x0318] - InheritedSize[0x0318])
class UPanelScreenScaleform : public UPanelScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PanelScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.PanelScreenUMG
// 0x0010 (FullSize[0x0328] - InheritedSize[0x0318])
class UPanelScreenUMG : public UPanelScreen
{
public:
	unsigned char                                      UnknownData_ZPAS[0x8];                                     // 0x0318(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGSwitcherScreen*                          _atlantaPanelScreen;                                       // 0x0320(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PanelScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.ParticleSystemDistanceFaderComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UParticleSystemDistanceFaderComponent : public UActorComponent
{
public:
	class UParticleSystemComponent*                    ParticleSystemComponent;                                   // 0x00B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       OpacityParameterName;                                      // 0x00C0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              StartFadeDistance;                                         // 0x00CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EndFadeDistance;                                           // 0x00D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4Q1V[0x4];                                     // 0x00D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ParticleSystemDistanceFaderComponent");
		return ptr;
	}



};

// Class DeadByDaylight.PartyEventsManager
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UPartyEventsManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_R0GP[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PartyEventsManager");
		return ptr;
	}



};

// Class DeadByDaylight.UMGLoadoutItemButton
// 0x0310 (FullSize[0x0610] - InheritedSize[0x0300])
class UUMGLoadoutItemButton : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnLoadoutItemButtonClicked;                                // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnDisabledItemButtonClicked;                               // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLoadoutItemButtonLongPress;                              // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               HideStackCount;                                            // 0x0330(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KZVY[0x7];                                     // 0x0331(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTextBlock*                                  TextStackCount;                                            // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                EmptyCanvas;                                               // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     EmptyButton;                                               // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     LockedButton;                                              // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ActionCanvas;                                              // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ImageRarityBG;                                             // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ImageGradient;                                             // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ImagePaint;                                                // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ImageEventBorder;                                          // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ImagePaintTop;                                             // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ImagePaintBottom;                                          // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               EmptyCanvasVisibility;                                     // 0x0390(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               ActionCanvasVisibility;                                    // 0x0391(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               PrivateCanvasVisibility;                                   // 0x0392(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               LockIconVisibility;                                        // 0x0393(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               EmptyIconVisibility;                                       // 0x0394(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               SpecialEventVisiblity;                                     // 0x0395(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               LoadoutSelectedVisibility;                                 // 0x0396(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               LoadoutLockVisibility;                                     // 0x0397(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ImageIcon;                                                 // 0x0398(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ImageShadow;                                               // 0x03A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     ActionButton;                                              // 0x03A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 EmptyBGAsset;                                              // 0x03B0(0x0090) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FSlateBrush                                 DisableBGAsset;                                            // 0x0440(0x0090) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FInventorySlotData                          LoadoutItemData;                                           // 0x04D0(0x00F8) (BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                               _triggerClickEventForLoadoutWidget;                        // 0x05C8(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EG54[0x7];                                     // 0x05C9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVerticalBox*                                CanvasUnlock;                                              // 0x05D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextUnlockLevel;                                           // 0x05D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DM4E[0x30];                                    // 0x05E0(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGLoadoutItemButton");
		return ptr;
	}



	void UpdateWidgetByState(DeadByDaylight_EInventoryButtonState State);
	void UpdateWidgetByDataBP(const struct FInventorySlotData& SlotData);
	void UpdateWidgetByData(const struct FInventorySlotData& SlotData);
	void UpdateUnlockable(const struct FString& nameToDisplay, int UnlockableLevel);
	void UpdateStackCount(int StackCount);
	void UpdateImageColor(DBDSharedTypes_EItemRarity Rarity, DBDSharedTypes_EStatusEffectType EffectType);
	void ShowClickableOutline(bool clickable);
	void SetIsSelected(bool IsSelected);
	void SetIconImageByPath(const struct FString& IconPath);
	void OnLockedButtonClicked();
	void InitializationForLoadoutWidget();
	void InitializationForCharacterInfoWidget();
	struct FName GetLoadoutItemID();
	void BroadcastLongPressEvent(const struct FName& ItemId);
	void BroadcastClickedEvent(const struct FName& ItemId);
};

// Class DeadByDaylight.PerkActionButton
// 0x0028 (FullSize[0x0638] - InheritedSize[0x0610])
class UPerkActionButton : public UUMGLoadoutItemButton
{
public:
	class UTextBlock*                                  TextUnlockLevelTitle;                                      // 0x0610(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Activatable;                                               // 0x0618(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               SelectedImageVisibility;                                   // 0x0619(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               ClickableButtonVisibility;                                 // 0x061A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               ClickableImageVisibility;                                  // 0x061B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               ProgressbarVisibility;                                     // 0x061C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2UPX[0x3];                                     // 0x061D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              IdleTime;                                                  // 0x0620(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E9IJ[0x14];                                    // 0x0624(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkActionButton");
		return ptr;
	}



	void UpdateWidgetPercentage(float Percentage);
	void SetIsActivatable(bool isClickable);
	void SetCanEverBeActivated();
	void CallSetPerkLevel(int Level);
	void CallHidePerkLevel();
};

// Class DeadByDaylight.PerkCollectionComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UPerkCollectionComponent : public UActorComponent
{
public:
	TArray<class UPerk*>                               _array;                                                    // 0x00B8(0x0010) (ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LIBS[0x18];                                    // 0x00C8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkCollectionComponent");
		return ptr;
	}



	void OnRep_Array(TArray<class UPerk*> oldArray);
};

// Class DeadByDaylight.DBDPrimaryDataAsset
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UDBDPrimaryDataAsset : public UPrimaryDataAsset
{
public:
	struct FPrimaryAssetType                           AssetType;                                                 // 0x0038(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WU8H[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPrimaryDataAsset");
		return ptr;
	}



};

// Class DeadByDaylight.GameplayModifierContainerDataAsset
// 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
class UGameplayModifierContainerDataAsset : public UDBDPrimaryDataAsset
{
public:
	unsigned char                                      ModifierContainerComponent[0x30];                          // 0x0048(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      RequiredModifierContainers[0x10];                          // 0x0078(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameplayModifierContainerDataAsset");
		return ptr;
	}



};

// Class DeadByDaylight.PerkDataAsset
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UPerkDataAsset : public UGameplayModifierContainerDataAsset
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkDataAsset");
		return ptr;
	}



};

// Class DeadByDaylight.PerkHudWidget
// 0x0138 (FullSize[0x0438] - InheritedSize[0x0300])
class UPerkHudWidget : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                PerksClickable;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                PerksExternal;                                             // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AtlantaPerkActionButtonClass[0x30];                        // 0x0310(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TMap<struct FName, class UPerkActionButton*>       _clickablePerksMap;                                        // 0x0340(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TMap<struct FName, class UPerkActionButton*>       _externalPerksMap;                                         // 0x0390(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5S07[0x58];                                    // 0x03E0(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkHudWidget");
		return ptr;
	}



	void RemoveExistingPerk(const struct FName& perkId, bool isExternal);
	void OnPerkClickedHandler(const struct FName& perkId);
};

// Class DeadByDaylight.PerkManager
// 0x02B8 (FullSize[0x0370] - InheritedSize[0x00B8])
class UPerkManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData_OESJ[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPerkCollectionComponent*                    _perks;                                                    // 0x00E0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStatusEffectCollectionComponent*            _statusEffects;                                            // 0x00E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XFF1[0x280];                                   // 0x00F0(0x0280) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkManager");
		return ptr;
	}



	bool HasStatusEffect(const struct FName& statusEffectId);
	bool HasPerkModifierOfType(const struct FGameplayTag& Type);
	bool HasPerkFlagFromSource(const struct FGameplayTag& flag, DeadByDaylight_EGameplayModifierSource modifierSource);
	bool HasPerkFlag(const struct FGameplayTag& flag);
	bool HasAnyEffectWithID(const struct FName& ID);
	bool HasAnyAddonWithTag(const struct FName& Tag);
	bool HasAllCharacterPerksEquipped();
	class UStatusEffect* GetStatusEffect(const struct FName& ID);
	class UGameplayModifierContainer* GetSourceWithModifier(const struct FGameplayTag& Type);
	class UGameplayModifierContainer* GetSourceWithFlag(const struct FGameplayTag& flag);
	float GetPerkModifierMinValueAndSource(const struct FGameplayTag& Type, float startValue, class UGameplayModifierContainer** outSource);
	float GetPerkModifierMinValue(const struct FGameplayTag& Type, float startValue);
	float GetPerkModifierMaxValueAndSource(const struct FGameplayTag& Type, class UGameplayModifierContainer** outSource);
	float GetPerkModifierMaxValue(const struct FGameplayTag& Type);
	float GetPerkModifierAdditiveValue(const struct FGameplayTag& Type, float baseValue);
	float GetPerkModifier(const struct FGameplayTag& Type);
	class UPerk* GetPerk(const struct FName& ID);
	float GetMultiplicativeModifierValueWithCompoundNegative(const struct FGameplayTag& Type);
	float GetMultiplicativeModifierValueOfContainerWithCompoundNegative(const struct FGameplayTagContainer& Container);
	float GetMultiplicativeModifierValue(const struct FGameplayTag& Type);
	TArray<class UStatusEffect*> GetAllStatusEffectsByClass(class UClass* Type);
	TArray<class UStatusEffect*> GetAllStatusEffects(const struct FName& ID);
	TArray<class UGameplayModifierContainer*> GetAllSourcesWithModifier(const struct FGameplayTag& Type);
	TArray<class UGameplayModifierContainer*> GetAllSourcesWithFlag(const struct FGameplayTag& flag);
	void Authority_RemoveStatusEffectByID(const struct FName& statusEffectId, bool bRemoveAllWithID);
	void Authority_RemoveStatusEffect(class UStatusEffect* StatusEffect);
	class UStatusEffect* Authority_ImposeStatusEffect(const struct FName& statusEffectId, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect, bool shouldDisplay, float lifetime);
	class UStatusEffect* Authority_ImposeNewStatusEffectOrChangeLifeTime(const struct FName& statusEffectId, class ADBDPlayer* originatingPlayer, float lifetime, float customParam, class UGameplayModifierContainer* originatingEffect, bool shouldDisplay);
	class UStatusEffect* Authority_ImposeDynamicStatusEffect(const struct FName& statusEffectId, class ADBDPlayer* originatingPlayer, float customParam, class UGameplayModifierContainer* originatingEffect);
	void Authority_EndStatusEffectByID(const struct FName& statusEffectId, bool bRemoveAllWithID);
};

// Class DeadByDaylight.PerkManagerOwnerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPerkManagerOwnerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkManagerOwnerInterface");
		return ptr;
	}



};

// Class DeadByDaylight.PerkOwnerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPerkOwnerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkOwnerInterface");
		return ptr;
	}



};

// Class DeadByDaylight.PerkSelectionPopupScreenUMG
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UPerkSelectionPopupScreenUMG : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkSelectionPopupScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.PerkSelectionSlotWidget
// 0x0080 (FullSize[0x0380] - InheritedSize[0x0300])
class UPerkSelectionSlotWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  PerkName;                                                  // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextChoose;                                                // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPerkActionButton*                           PerkActionButton;                                          // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      SelectedIcon;                                              // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGHtmlRichText*                            DescriptionText;                                           // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PictureBackground;                                         // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PicturePerkBackground;                                     // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PictureHighlightFrame;                                     // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PictureTopRightBackground;                                 // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PictureTopRightFrame;                                      // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              HighOpacity;                                               // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              LowOpacity;                                                // 0x0354(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PerkBackgroundLowOpacity;                                  // 0x0358(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DescriptionBackgroundLowOpacity;                           // 0x035C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VK4J[0x20];                                    // 0x0360(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkSelectionSlotWidget");
		return ptr;
	}



	void OnButtonClicked();
};

// Class DeadByDaylight.PerkSoundHudIcon
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UPerkSoundHudIcon : public UMobileBaseUserWidget
{
public:
	struct FName                                       perkId;                                                    // 0x0300(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VGHV[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkSoundHudIcon");
		return ptr;
	}



	void ClearPerk();
	void ActivatePerk(float Percentage);
};

// Class DeadByDaylight.PerkSoundHudIconSporadic
// 0x0038 (FullSize[0x0348] - InheritedSize[0x0310])
class UPerkSoundHudIconSporadic : public UPerkSoundHudIcon
{
public:
	class UCanvasPanel*                                SporadicIcon;                                              // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeInRate;                                                // 0x0318(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              FadeOutRate;                                               // 0x031C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AnimationStartOpacity;                                     // 0x0320(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FadePolynomialOrder;                                       // 0x0324(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               DisplayIcon;                                               // 0x0328(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MPZH[0x1F];                                    // 0x0329(0x001F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkSoundHudIconSporadic");
		return ptr;
	}



	void NativeTick(const struct FGeometry& MyGeometry, float DeltaTime);
};

// Class DeadByDaylight.PerkSoundHudWidget
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UPerkSoundHudWidget : public UMobileBaseUserWidget
{
public:
	class UHorizontalBox*                              PerkIcons;                                                 // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PerkSoundHudWidget");
		return ptr;
	}



};

// Class DeadByDaylight.PhantomTrap
// 0x0018 (FullSize[0x0340] - InheritedSize[0x0328])
class APhantomTrap : public AInteractable
{
public:
	class UTerrorRadiusEmitterComponent*               _terrorRadiusEmitter;                                      // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _lineOfSightTraceMinInterval;                              // 0x0330(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RPSE[0xC];                                     // 0x0334(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PhantomTrap");
		return ptr;
	}



	bool IsTrapSet();
	void InitializeTerrorRadiusEmitter(class ASlasherPlayer* OwningSlasher);
	class USkeletalMeshComponent* GetMesh();
	bool EvaluateLineOfSight(const struct FVector& Start, const struct FVector& End, class AActor* ignoredActor);
};

// Class DeadByDaylight.PhaseWalkingComponent
// 0x0468 (FullSize[0x0520] - InheritedSize[0x00B8])
class UPhaseWalkingComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPhaseWalkInfoReceived;                                   // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameEndedVFX;                                            // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TriggerSurvivorVisibilityVFX;                              // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TriggerKillerVisibilityVFX;                                // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMaxActivePhaseWalkCharges;                               // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UClass*                                      _huskClass;                                                // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTagStateBool                               _isActivePhaseWalking;                                     // 0x0110(0x0030) (Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTagStateBool                               _isPassivePhaseWalking;                                    // 0x0140(0x0030) (Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInteractionPhaseWalking;                                // 0x0170(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A3ZB[0x7];                                     // 0x0171(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      _husk;                                                     // 0x0178(0x0008) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDBidirectionalTimer                      _activePhaseWalkCharges;                                   // 0x0180(0x0028) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XC2V[0x28];                                    // 0x01A8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _survivorsAreVisible;                                      // 0x01D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P7Q9[0x4F];                                    // 0x01D1(0x004F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _passivePhaseWalkHusksCount;                               // 0x0220(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4URX[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTunableStat                                _activePhaseWalkChargeGainRate;                            // 0x0228(0x0080) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTunableStat                                _passivePhaseWalkDuration;                                 // 0x02A8(0x0080) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                        _passivePhaseWalkFirstCooldownDuration;                    // 0x0328(0x0028) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTunableStat                                _passivePhaseWalkCooldownDurationMin;                      // 0x0350(0x0080) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTunableStat                                _passivePhaseWalkCooldownDurationMax;                      // 0x03D0(0x0080) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTunableStat                                _activePhaseWalkMaxCharge;                                 // 0x0450(0x0080) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                        _activePhaseWalkMaxAcceleration;                           // 0x04D0(0x0028) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                        _defaultMaxAcceleration;                                   // 0x04F8(0x0028) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PhaseWalkingComponent");
		return ptr;
	}



	void UpdateSurvivorVisibility(bool visible);
	void UpdateKillerVisibility();
	void SpawnPassivePhaseWalkHusks();
	void Server_Broadcast_PhaseWalk(const struct FPhaseWalkInfo& PhaseWalkInfo);
	void RefillActivePhaseWalkCharges();
	void OnLevelReadyToPlay();
	void Multicast_Broadcast_PhaseWalk(const struct FPhaseWalkInfo& PhaseWalkInfo);
	void ModifyActivePhaseWalkCharges(float Delta);
	void MakePassivePhaseWalkHusksVisible(const struct FTransform& huskTransform, float opacityValue, float speedValue);
	void Local_PhaseWalk(const struct FPhaseWalkInfo& PhaseWalkInfo);
	void Local_EndPhaseWalks();
	bool IsPhaseWalking();
	bool IsPassivePhaseWalking();
	bool IsDecoyActive();
	bool IsActivePhaseWalking();
	int GetSpiritPassivePhaseWalkHusksCountToSpawn();
	struct FDBDTimer GetPassivePhaseWalkTimer();
	class AActor* GetHusk();
	class UDecoySlasherComponent* GetDecoySlasherComponent();
	float GetActivePhaseWalkCharges();
	float GetActivePhaseWalkChargePercentage();
	bool CanStartActivePhaseWalk();
};

// Class DeadByDaylight.PlagueUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPlagueUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlagueUtilities");
		return ptr;
	}



	bool STATIC_IsPlagueDebugModeActive();
	bool STATIC_IsInfected(class ADBDPlayer* Player);
	bool STATIC_HasMaxLevelSickness(class ADBDPlayer* Player);
	class USurvivorPlagueEffect* STATIC_GetPlagueEffect(class ADBDPlayer* Player);
	void STATIC_Authority_AddSicknessToPlayer(class ADBDPlayer* Player, float sicknessToAdd);
};

// Class DeadByDaylight.PlayerDataStorageFacade
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UPlayerDataStorageFacade : public UObject
{
public:
	unsigned char                                      UnknownData_OYB3[0x68];                                    // 0x0030(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerDataStorageFacade");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerDebugComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UPlayerDebugComponent : public UActorComponent
{
public:
	bool                                               _disableStartUpdateMontageDuringEnter;                     // 0x00B8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _allowPalletPullUpInteraction;                             // 0x00B9(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E9XF[0x6];                                     // 0x00BA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerDebugComponent");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerGameRelevancyComponent
// 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
class UPlayerGameRelevancyComponent : public UActorComponent
{
public:
	struct FTagStateBool                               _isRelevantToGameplay;                                     // 0x00B8(0x0030) (Net, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BQFQ[0x28];                                    // 0x00E8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerGameRelevancyComponent");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerInGameAssetPreloadState
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UPlayerInGameAssetPreloadState : public UActorComponent
{
public:
	unsigned char                                      UnknownData_2SQ9[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerInGameAssetPreloadState");
		return ptr;
	}



	void Server_SetPreloadCompleted();
};

// Class DeadByDaylight.PlayerInteractionHandler
// 0x0338 (FullSize[0x03F0] - InheritedSize[0x00B8])
class UPlayerInteractionHandler : public UActorComponent
{
public:
	unsigned char                                      UnknownData_VNJ3[0x68];                                    // 0x00B8(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PriorityConeAngle;                                         // 0x0120(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BotPriorityConeAngle;                                      // 0x0124(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QEDS[0x10];                                    // 0x0128(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    Authority_SecondaryActionDoneDelegate;                     // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    NewInteractionRequestedDelegate;                           // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ServerValidatedInteractionStartedDelegate;                 // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    ServerValidatedInteractionEndedDelegate;                   // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	DeadByDaylight_EInteractionLayer                   InteractionLayer;                                          // 0x0178(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SJ3X[0xF];                                     // 0x0179(0x000F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnDeactivateSkillCheckDelegate;                            // 0x0188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZI02[0x38];                                    // 0x0198(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _hasInteractionRequest;                                    // 0x01D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hasInteractionRequestInBuffer;                            // 0x01D1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8C22[0x1E];                                    // 0x01D2(0x001E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInteractionDefinition*                      _interactionToSwapTo;                                      // 0x01F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NY9A[0x20];                                    // 0x01F8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInteractionDefinition*                      _currentInteraction;                                       // 0x0218(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FTAH[0xA0];                                    // 0x0220(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ADBDPlayer*>                          _currentPlayerDependencies;                                // 0x02C0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EInputInteractionType               _currentInteractionType;                                   // 0x02D0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6M26[0x7];                                     // 0x02D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkillCheck*                                 _skillCheck;                                               // 0x02D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RQNQ[0x8];                                     // 0x02E0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<float>                                      _progressBasedSkillChecks;                                 // 0x02E8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LXHK[0x60];                                    // 0x02F8(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _requestedInterruptionOtherParty;                          // 0x0358(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInterruptionDefinition*                     _requestedInterruptionDefinition;                          // 0x0360(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _requestedInterruptionIsInterruptor;                       // 0x0368(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UTL5[0x7];                                     // 0x0369(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _currentInterruptionOtherParty;                            // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInterruptionDefinition*                     _currentInterruptionDefinition;                            // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _currentInterruptionIsInterruptor;                         // 0x0380(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _interactionInProgress;                                    // 0x0381(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F9P2[0x36];                                    // 0x0382(0x0036) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UInteractionDefinition*>              _interactionsInZone;                                       // 0x03B8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZNR0[0x28];                                    // 0x03C8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerInteractionHandler");
		return ptr;
	}



	void UnPauseSkillCheckTimer();
	void StartCustomSkillCheck(DBDSharedTypes_ESkillCheckCustomType Type, float WarningSoundDelay);
	void SetSkillCheckTimer(float Delay);
	void SetScanForInteractionsEnabled(bool Enabled);
	void Server_StoreInterruption_Interruptor(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition);
	void Server_SetInteractionToSwapTo(class UInteractionDefinition* Interaction);
	void Server_RequestInterruption_Interruptor();
	void Server_DebugRequestInteraction(const struct FString& interactionName, const struct FString& InteractorName, const struct FString& interactableName);
	void Server_CancelCurrentInteractionByInput();
	void Server_Broadcast_StoreInteraction(const struct FStoredInteraction& interactionToStore);
	void Server_Broadcast_ConfirmChargedCompleted(bool chargeComplete);
	void Server_AnswerInterruption_Interruptee(DeadByDaylight_ERequestState State);
	void ResetSuccessiveSkillCheckCount();
	void RemoveInteraction(class UInteractionDefinition* Interaction);
	void PauseSkillCheckTimer();
	int NumInteractionsInZone();
	void Multicast_StoreInterruption_Interruptor(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition);
	void Multicast_StoreInteraction(const struct FStoredInteraction& interactionToStore);
	void Multicast_SetInteractionToSwapTo(class UInteractionDefinition* Interaction);
	void Multicast_RequestInterruption_Interruptee(class ADBDPlayer* interruptionOtherParty, class UInterruptionDefinition* InterruptionDefinition);
	void Multicast_InterruptionRequestResult_Interruptor(DeadByDaylight_ERequestState State, bool grantInterruptScore);
	void Multicast_InteractionPredictionValidationResult(class UInteractionDefinition* Interaction, DeadByDaylight_EInteractionValidationState State);
	void Multicast_CancelCurrentInteractionByInput();
	void IncrementSuccessiveSkillCheckCount();
	bool HasAvailableInteraction(DeadByDaylight_EInputInteractionType interactionType);
	bool HasActiveSkillCheck();
	class USkillCheck* GetSkillCheck();
	float GetMultiplicativeSkillCheckProbabilityModifier();
	class UInteractionDefinition* GetCurrentInteractionOfType(DeadByDaylight_EInputInteractionType interactionInputType);
	class UInteractionDefinition* GetCurrentInteraction();
	void GetAvailableInteractions(TArray<class UInteractionDefinition*>* Result);
	class UInteractionDefinition* GetAvailableInteractionByID(const struct FString& InteractionID);
	class UInteractionDefinition* GetAvailableInteraction(DeadByDaylight_EInputInteractionType interactionType);
	float GetAdditiveSkillCheckProbabilityModifier();
	void Client_StartCustomSkillCheck(DBDSharedTypes_ESkillCheckCustomType Type, float WarningSoundDelay);
	void Client_NotifyChargeCompleted(class UInteractionDefinition* Interaction);
	void CleanInteractionArray(class AActor* DestroyedActor);
	bool CanPerformInteraction(const struct FString& interactionName);
	void Broadcast_Multicast_ConfirmChargedCompleted(bool chargeComplete);
	void Authority_ClearPlayerDependency(class ADBDPlayer* playerDependency);
	void Authority_ClearPlayerDependencies();
	void AddSelfInteractions(class AActor* interactionRoot);
	void AddInteraction(class UInteractionDefinition* Interaction);
};

// Class DeadByDaylight.PlayerLevelTooltipWidget
// 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
class UPlayerLevelTooltipWidget : public UBaseTooltipWidget
{
public:
	class UUMGTooltipContentPlayerLevelWidget*         PlayerLevelContent;                                        // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerLevelTooltipWidget");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerMoveBackAndForthComponent
// 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
class UPlayerMoveBackAndForthComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_0XV7[0x48];                                    // 0x00B8(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerMoveBackAndForthComponent");
		return ptr;
	}



	void OnMoveTimerDone();
};

// Class DeadByDaylight.PlayerNameRegistration
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UPlayerNameRegistration : public UObject
{
public:
	unsigned char                                      UnknownData_OIX6[0x68];                                    // 0x0030(0x0068) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerNameRegistration");
		return ptr;
	}



};

// Class DeadByDaylight.SpherePlayerOverlapComponent
// 0x0000 (FullSize[0x0450] - InheritedSize[0x0450])
class USpherePlayerOverlapComponent : public USphereComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SpherePlayerOverlapComponent");
		return ptr;
	}



};

// Class DeadByDaylight.CapsulePlayerOverlapComponent
// 0x0000 (FullSize[0x0450] - InheritedSize[0x0450])
class UCapsulePlayerOverlapComponent : public UCapsuleComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CapsulePlayerOverlapComponent");
		return ptr;
	}



};

// Class DeadByDaylight.BoxPlayerOverlapComponent
// 0x0000 (FullSize[0x0450] - InheritedSize[0x0450])
class UBoxPlayerOverlapComponent : public UBoxComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BoxPlayerOverlapComponent");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerPerspectiveComponent
// 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
class UPlayerPerspectiveComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_D6VG[0x78];                                    // 0x00B8(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerPerspectiveComponent");
		return ptr;
	}



	void UpdateLocallyObserved();
	bool IsLocallyObserved();
};

// Class DeadByDaylight.PlayerReportManager
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UPlayerReportManager : public UObject
{
public:
	unsigned char                                      UnknownData_Q7GJ[0x50];                                    // 0x0030(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerReportManager");
		return ptr;
	}



};

// Class DeadByDaylight.PollableEventListener
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UPollableEventListener : public UActorComponent
{
public:
	unsigned char                                      UnknownData_5JRK[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PollableEventListener");
		return ptr;
	}



};

// Class DeadByDaylight.PoolableProjectileComponent
// 0x0000 (FullSize[0x00D8] - InheritedSize[0x00D8])
class UPoolableProjectileComponent : public UAuthoritativePoolableActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PoolableProjectileComponent");
		return ptr;
	}



};

// Class DeadByDaylight.PopupFactory
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UPopupFactory : public UObject
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PopupFactory");
		return ptr;
	}



};

// Class DeadByDaylight.PopupSequencer
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UPopupSequencer : public UObject
{
public:
	unsigned char                                      UnknownData_5SH4[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NE5F[0x20];                                    // 0x0040(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PopupSequencer");
		return ptr;
	}



};

// Class DeadByDaylight.PopupUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPopupUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PopupUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.PortalOutlineUpdateStrategy
// 0x0010 (FullSize[0x00D0] - InheritedSize[0x00C0])
class UPortalOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _survivorAuraColor;                                        // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PortalOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.PortalPlacerStateComponent
// 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
class UPortalPlacerStateComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTeleportCooldownComplete;                                // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DHRT[0xC];                                     // 0x00C8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _remainingPortals;                                         // 0x00D4(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4CG3[0x48];                                    // 0x00D8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ADemogorgonPortal*>                   _placedPortals;                                            // 0x0120(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPortalRestrictedLocation>           _restrictedPortalLocations;                                // 0x0130(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5QCC[0x18];                                    // 0x0140(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PortalPlacerStateComponent");
		return ptr;
	}



	void UpdateRemainingPortalCount();
	void OnLevelReadyToPlay();
	void OnDemogorgonTeleportCooldownComplete__DelegateSignature();
	bool IsUsePortalCooldownDone();
	void InitializeTunableValues(class ASlasherPlayer* killer);
	float GetTeleportDuration();
	int GetRemainingPortalCount();
};

// Class DeadByDaylight.PortalRadiusDetectorComponent
// 0x0058 (FullSize[0x0110] - InheritedSize[0x00B8])
class UPortalRadiusDetectorComponent : public UActorComponent
{
public:
	TArray<class ADemogorgonPortal*>                   Portals;                                                   // 0x00B8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ADBDPlayer*>                          _playersInsideRadius;                                      // 0x00C8(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9KGY[0x38];                                    // 0x00D8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PortalRadiusDetectorComponent");
		return ptr;
	}



	void OnRep_PlayersInsideRadius();
	void OnPortalEffectsAppliedMultiDelegate__DelegateSignature();
	void Authority_OnLevelReadyToPlay();
	void Authority_CallOnPortalEffectsApplied(const struct FScriptDelegate& Callback);
};

// Class DeadByDaylight.PortalTargetingComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UPortalTargetingComponent : public UActorComponent
{
public:
	class ADemogorgonPortal*                           _targetedPortal;                                           // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPortalPlacerStateComponent*                 _portalPlacerState;                                        // 0x00C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7FOI[0x20];                                    // 0x00C8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PortalTargetingComponent");
		return ptr;
	}



	void SetIsPorting(bool isPorting);
	void Server_SetTargetedPortal(class ADemogorgonPortal* targetedPortal);
	void Multicast_SetTargetedPortal(class ADemogorgonPortal* targetedPortal);
	class ADemogorgonPortal* GetTargetedPortal();
};

// Class DeadByDaylight.PostProcessUpdate
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class APostProcessUpdate : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PostProcessUpdate");
		return ptr;
	}



	void PostProcessToggle(bool toggle);
};

// Class DeadByDaylight.PowerButton
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UPowerButton : public UMobileBaseUserWidget
{
public:
	class UActionButton*                               Button;                                                    // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                SwitchIcon;                                                // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CountContainer;                                            // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                RadialProgressBarContainer;                                // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CountLabel;                                                // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      TierImage;                                                 // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                AddonsContainer;                                           // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGInventoryItemButton*                     FirstAddonSlot;                                            // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGInventoryItemButton*                     SecondAddonSlot;                                           // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UProgressBar*                                FillPowerChargeProgression;                                // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DisabledOpacity;                                           // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              EnabledOpacity;                                            // 0x0354(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               EnabledLongPressed;                                        // 0x0358(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3G7P[0x3];                                     // 0x0359(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _itemCount;                                                // 0x035C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PowerButton");
		return ptr;
	}



	void SetSwitchIconActive(bool Active);
	void SetState(DeadByDaylight_EActionButtonState State);
	void SetRadialProgressPercentage(float progression, DeadByDaylight_ERadialProgressBarType ProgressBarType);
	void SetRadialProgressBarActice(bool Active);
	void SetPowerIntensityOpacity(float Opacity);
	void SetFillProgressPercentage(float chargeProgressionPercentage);
	void OnTierChanged(int previousTier, int currentTier, bool IsFirstTime);
	bool IsRadialProgressBarActive();
	class UActionButton* GetActionButton();
};

// Class DeadByDaylight.PremiumTransactionSubsystem
// 0x0020 (FullSize[0x0058] - InheritedSize[0x0038])
class UPremiumTransactionSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_6G5H[0x20];                                    // 0x0038(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PremiumTransactionSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.PresentationPowerFadeComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UPresentationPowerFadeComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PresentationPowerFadeComponent");
		return ptr;
	}



};

// Class DeadByDaylight.ProceduralGenerationData
// 0x0128 (FullSize[0x0160] - InheritedSize[0x0038])
class UProceduralGenerationData : public UDataAsset
{
public:
	TArray<struct FQuadrantSpawnTypeProperties>        QuadrantSpawnTypeProperties;                               // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FQuadrantSpawnCategories>            QuadrantSpawnCategories;                                   // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FThemeProperties>                    ThemeProperties;                                           // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxSurvivorCount;                                          // 0x0068(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_85WJ[0x4];                                     // 0x006C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FKillerItemDependencies>             KillersItemDependencies;                                   // 0x0070(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 SurvivorItemPopulationProbability;                         // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSurvivorItemProperties>             SurvivorItemProperty;                                      // 0x0088(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EscapeStrategyPopulationProbability;                       // 0x0098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEscapeStrategyProperty>             EscapeStrategyProperties;                                  // 0x00A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FEscapeTypeObjects>                  EscapeTypeActors;                                          // 0x00B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FGameplayElementsPopulation>         ElementsPopulation;                                        // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FManagedGameplayElementsPopulation>  ManagedElementsPopulation;                                 // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSurvivorGroupingProbability>        SurvivorGroupingProbabilities;                             // 0x00E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ProceduralMapOffset;                                       // 0x00F0(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralTileWidth;                                       // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralTileHeight;                                      // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     ProceduralQuadTileMapOffset;                               // 0x0104(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ProceduralQuadTileCubeWidth;                               // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DifficultyModifier;                                        // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CharacterCameraHeight;                                     // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CharacterCollisionRadius;                                  // 0x011C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpawnerCollisionRadius;                                    // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TotemVisualHeight;                                         // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FSpecialBehaviourPopulation>         SpecialBehaviourPopulation;                                // 0x0128(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FEventSubstitionData>                _eventProperties;                                          // 0x0138(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_25TJ[0x18];                                    // 0x0148(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ProceduralGenerationData");
		return ptr;
	}



};

// Class DeadByDaylight.PromoPackContentDataAsset
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UPromoPackContentDataAsset : public UPrimaryDataAsset
{
public:
	TMap<DeadByDaylight_EPromoPackContentType, struct FPromoPackContentTypeData> Data;                                                      // 0x0038(0x0050) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PromoPackContentDataAsset");
		return ptr;
	}



};

// Class DeadByDaylight.PromoPackPurchaseUIDataUtility
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPromoPackPurchaseUIDataUtility : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PromoPackPurchaseUIDataUtility");
		return ptr;
	}



	void STATIC_SetRemainingTimeFromHours(struct FPromoPackPurchaseUIData* Data, int remainHours);
};

// Class DeadByDaylight.PromoPackUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPromoPackUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PromoPackUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.PromptManager
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class UPromptManager : public UObject
{
public:
	unsigned char                                      UnknownData_I3W6[0x48];                                    // 0x0030(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PromptManager");
		return ptr;
	}



};

// Class DeadByDaylight.ProtectionHitComponent
// 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
class UProtectionHitComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_QC95[0x70];                                    // 0x00B8(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ProtectionHitComponent");
		return ptr;
	}



	void Authority_HandleProtectionScoringEvents();
};

// Class DeadByDaylight.PlayerProfileDAL
// 0x0058 (FullSize[0x0088] - InheritedSize[0x0030])
class UPlayerProfileDAL : public UObject
{
public:
	unsigned char                                      UnknownData_AW77[0x58];                                    // 0x0030(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.PS4GRDKBaseProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UPS4GRDKBaseProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PS4GRDKBaseProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.PS4ProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UPS4ProfileDAL : public UPS4GRDKBaseProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PS4ProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.PS5ProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UPS5ProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PS5ProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.PurpleGlyphBloodTrailComponent
// 0x0010 (FullSize[0x0250] - InheritedSize[0x0240])
class UPurpleGlyphBloodTrailComponent : public UBloodTrailComponent
{
public:
	unsigned char                                      UnknownData_N45T[0x10];                                    // 0x0240(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PurpleGlyphBloodTrailComponent");
		return ptr;
	}



	void DeactivateGlyphBloodTrail();
};

// Class DeadByDaylight.PushableInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UPushableInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PushableInterface");
		return ptr;
	}



};

// Class DeadByDaylight.RankManager
// 0x0098 (FullSize[0x00C8] - InheritedSize[0x0030])
class URankManager : public UObject
{
public:
	unsigned char                                      UnknownData_6NBO[0x98];                                    // 0x0030(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RankManager");
		return ptr;
	}



};

// Class DeadByDaylight.RankTooltipWidget
// 0x0028 (FullSize[0x0360] - InheritedSize[0x0338])
class URankTooltipWidget : public UBaseTooltipWidget
{
public:
	class UTextBlock*                                  RankInfoLabel;                                             // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  ResetInfoLabel;                                            // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UGridPanel*                                  RankInfoSlotsContainer;                                    // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGPlayerRankInfo*                          SurvivorRankInfoWidget;                                    // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGPlayerRankInfo*                          KillerRankInfoWidget;                                      // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RankTooltipWidget");
		return ptr;
	}



};

// Class DeadByDaylight.DefaultOutlineUpdateStrategy
// 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
class UDefaultOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _revealedColorToSurvivor;                                  // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _revealedColorToKiller;                                    // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DefaultOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.RBTOutlineUpdateStrategy
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class URBTOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RBTOutlineUpdateStrategy");
		return ptr;
	}



	bool IsRevealedToLocalPlayer_BP(class ADBDPlayer* Player);
};

// Class DeadByDaylight.RecentGameEventTracker
// 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
class URecentGameEventTracker : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_JO8V[0xA0];                                    // 0x0038(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RecentGameEventTracker");
		return ptr;
	}



};

// Class DeadByDaylight.RecommendationsGenerator
// 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
class URecommendationsGenerator : public UObject
{
public:
	TWeakObjectPtr<class Ushopmanager>                 _shopManager;                                              // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, class URecommendationsFilter*> _filters;                                                  // 0x0040(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YHQV[0x30];                                    // 0x0090(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RecommendationsGenerator");
		return ptr;
	}



};

// Class DeadByDaylight.RedStainComponent
// 0x0010 (FullSize[0x03E0] - InheritedSize[0x03D0])
class URedStainComponent : public USpotLightComponent
{
public:
	struct FLinearColor                                _initialSpotLightColor;                                    // 0x03D0(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RedStainComponent");
		return ptr;
	}



	void UpdateRedStain(bool shouldBeHidden, float alpha);
	void DBD_HideRedStain(bool hideStain);
};

// Class DeadByDaylight.RegionFinder
// 0x0078 (FullSize[0x00A8] - InheritedSize[0x0030])
class URegionFinder : public UObject
{
public:
	TArray<struct FRegion>                             Regions;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TIMEOUT;                                                   // 0x0040(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_7EB0[0x64];                                    // 0x0044(0x0064) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RegionFinder");
		return ptr;
	}



};

// Class DeadByDaylight.RenderingFeaturesSequencer
// 0x0048 (FullSize[0x0078] - InheritedSize[0x0030])
class URenderingFeaturesSequencer : public UObject
{
public:
	unsigned char                                      UnknownData_U0IL[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDAggregateCullDistanceVolumes*            _aggregateCullDistanceVolumes;                             // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UWorld*                                      _world;                                                    // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DO9E[0x28];                                    // 0x0050(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RenderingFeaturesSequencer");
		return ptr;
	}



};

// Class DeadByDaylight.ReportPlayerPopupScreen
// 0x0030 (FullSize[0x0170] - InheritedSize[0x0140])
class UReportPlayerPopupScreen : public UGenericPopupScreen
{
public:
	unsigned char                                      UnknownData_A6FL[0x30];                                    // 0x0140(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ReportPlayerPopupScreen");
		return ptr;
	}



	void OnTextInputMouseOver(bool IsMouseOver);
	void OnConfirmReportPlayer(const struct FString& Category, const struct FString& Comment);
};

// Class DeadByDaylight.RestrictedPlacementAreaStrategy
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class URestrictedPlacementAreaStrategy : public UObject
{
public:
	unsigned char                                      UnknownData_AL9R[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTunableRowHandle                        RestrictedRadius;                                          // 0x0040(0x0028) (Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0EOF[0x4];                                     // 0x0068(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MaxHeightRestriction;                                      // 0x006C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RestrictedPlacementAreaStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.RestrictedPlacementAreaDefaultStrategy
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class URestrictedPlacementAreaDefaultStrategy : public URestrictedPlacementAreaStrategy
{
public:
	class UClass*                                      RestrictedActor;                                           // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RestrictedPlacementAreaDefaultStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ReverseBearTrap
// 0x00B8 (FullSize[0x03E0] - InheritedSize[0x0328])
class AReverseBearTrap : public AInteractable
{
public:
	unsigned char                                      UnknownData_75E3[0x8];                                     // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      _rbtMesh;                                                  // 0x0330(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimationMontageSlave*                      _animMontageSlave;                                         // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UJU8[0x4];                                     // 0x0340(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _keyID;                                                    // 0x0344(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HJ6B[0x90];                                    // 0x0348(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _exitGatesPoweredAfterAttachment;                          // 0x03D8(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _generatorFixedAfterAttachment;                            // 0x03D9(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MBTA[0x6];                                     // 0x03DA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ReverseBearTrap");
		return ptr;
	}



	void StopMontage();
	void StopExecutionTimer();
	bool ShouldUpdateExecutionTimer();
	void SetVisible(bool visible);
	void SetGateClosedAtAttachment(bool CLOSED);
	void ResetExecutionTimer(float Time);
	void OnWarningLevelChanged(int previousWarningLevel, int currentWarningLevel);
	void OnGeneratorComplete(int remainingGeneratorCount);
	void OnExitWarningZone();
	void OnEnterWarningZone();
	void OnDetachSurvivor(class ACamperPlayer* survivor);
	void OnAttachSurvivorBegin(class ACamperPlayer* survivor);
	void OnAttachSurvivor(class ACamperPlayer* survivor);
	void NotifyOnAttachSurvivorBegin(class ACamperPlayer* survivor);
	void NotifyDetachStarted(class ACamperPlayer* survivor);
	bool IsRBTActivated();
	bool IsInWarningZone();
	bool IsExecutionTimerDone();
	bool IsExecutionTimerActive();
	bool HasDetachStarted();
	bool GetWasGateClosedAtAttachment();
	int GetWarningLevel();
	int GetKeyID();
	bool GetGeneratorFixedAfterAttachment();
	bool GetExitGatesPoweredAfterAttachment();
	float GetExecutionTimerTimeLeft();
	float GetExecutionTimerPercentTimeElapsed();
	class ACamperPlayer* GetAttachedSurvivor();
	void FastForwardExecutionTimer(float DeltaTime);
	void DetachSurvivor(class ACamperPlayer* survivor);
	bool CanExecute();
	void Authority_SetKeyID(int KeyId);
	void AttachSurvivor(class ACamperPlayer* survivor);
};

// Class DeadByDaylight.ReverseBearTrapRemover
// 0x0070 (FullSize[0x0398] - InheritedSize[0x0328])
class AReverseBearTrapRemover : public AInteractable
{
public:
	unsigned char                                      UnknownData_267I[0x8];                                     // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<int>                                        _keys;                                                     // 0x0330(0x0010) (Net, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2F9G[0x50];                                    // 0x0340(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMapActorComponent*                          _mapActor;                                                 // 0x0390(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ReverseBearTrapRemover");
		return ptr;
	}



	void PlayRemoveFailMontage();
	bool HasSearchedForKey(int KeyId);
	bool HasKey(int KeyId);
	class UMapActorComponent* GetMapActor();
	class UPrimitiveComponent* GetInteractorPrimitiveComponent();
	class AReverseBearTrap* GetAttachedRBT(class AActor* Player);
	void AddSearchedKey(int KeyId);
	void AddKey(int KeyId);
};

// Class DeadByDaylight.ReverseBearTrapUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UReverseBearTrapUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ReverseBearTrapUtilities");
		return ptr;
	}



	class AReverseBearTrap* STATIC_GetAttachedRBT(class ADBDPlayer* Player);
};

// Class DeadByDaylight.RewardTrackContainer
// 0x01D0 (FullSize[0x0200] - InheritedSize[0x0030])
class URewardTrackContainer : public UObject
{
public:
	unsigned char                                      UnknownData_E0L4[0x1D0];                                   // 0x0030(0x01D0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RewardTrackContainer");
		return ptr;
	}



};

// Class DeadByDaylight.RewardUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class URewardUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RewardUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.RitualHandlerComponent
// 0x0140 (FullSize[0x01F8] - InheritedSize[0x00B8])
class URitualHandlerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_O3V2[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, class URitualEvaluatorBase*>    _evaluators;                                               // 0x00C8(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CEXR[0xE0];                                    // 0x0118(0x00E0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RitualHandlerComponent");
		return ptr;
	}



	void ReceiveGameEvent(DeadByDaylight_EDBDScoreTypes scoreType, float amount, class AActor* Instigator, class AActor* Target);
	void OnGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
};

// Class DeadByDaylight.RoleSelectionScreen
// 0x0030 (FullSize[0x0150] - InheritedSize[0x0120])
class URoleSelectionScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_LQSY[0x30];                                    // 0x0120(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RoleSelectionScreen");
		return ptr;
	}



	void OnChangeUserButtonClick();
	void OnButtonSelected(int buttonID);
};

// Class DeadByDaylight.RootMovie
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class URootMovie : public UObject
{
public:
	struct FString                                     SwfAssetName;                                              // 0x0030(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGFxMoviePlayer*                             SwfMoviePlayer;                                            // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UDSL[0x10];                                    // 0x0048(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UScreenController*                           m_ScreenController;                                        // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUIController*                               m_UIController;                                            // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameInstance*                               m_GameInstance;                                            // 0x0068(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDInputManager*                            _inputManager;                                             // 0x0070(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3G8B[0x20];                                    // 0x0078(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RootMovie");
		return ptr;
	}



	void SetCursorAsSticky(bool isSticky, bool lockVertical, bool lockHorizontal, float stickinessOverride);
	void RegisterView(const struct FString& screenId, class UGFxObject* ScreenObject);
	void RegisterUIControl(class UGFxObject* flashObj);
	void RegisterScreenControl(class UGFxObject* flashObj);
	void PlaySound(const struct FString& soundId);
	void OpenLinkInBrowser(const struct FString& linkAddress);
	void OnScreenReady(const struct FString& screenId);
	void OnScreenLeave(const struct FString& screenId);
	void OnScreenEnter(const struct FString& screenId);
	void OnMovieClosed();
	void OnFlashReady();
	void OnAssert(int Type, const struct FString& Message);
};

// Class DeadByDaylight.S3GameConfigs
// 0x0180 (FullSize[0x01B8] - InheritedSize[0x0038])
class US3GameConfigs : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_59ME[0x180];                                   // 0x0038(0x0180) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.S3GameConfigs");
		return ptr;
	}



};

// Class DeadByDaylight.S3GameConfigsDS
// 0x00A8 (FullSize[0x00E0] - InheritedSize[0x0038])
class US3GameConfigsDS : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_86T2[0xA8];                                    // 0x0038(0x00A8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.S3GameConfigsDS");
		return ptr;
	}



};

// Class DeadByDaylight.SafeZoneManagerWidget
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class USafeZoneManagerWidget : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                SafeZonePanel;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SafeZoneManagerWidget");
		return ptr;
	}



};

// Class DeadByDaylight.ScourgeHookManagerComponent
// 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
class UScourgeHookManagerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_68Y3[0x60];                                    // 0x00B8(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AMeatHook*>                           _scourgeHooks;                                             // 0x0118(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ScourgeHookManagerComponent");
		return ptr;
	}



	void OnRep_ScourgeHooks();
};

// Class DeadByDaylight.ScreamComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UScreamComponent : public UActorComponent
{
public:
	class UPerkManager*                                _perkManager;                                              // 0x00B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMontagePlayer*                              _montagePlayer;                                            // 0x00C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ScreamComponent");
		return ptr;
	}



	bool PlayScreamSoundAndAnimation(class UAkAudioEvent* AudioEvent, bool fireLoudNoiseEvent, const struct FMontagePlaybackDefinition& montageDefinition, float audibleRange);
	bool PlayScreamSound(class UAkAudioEvent* AudioEvent, bool fireLoudNoiseEvent, float audibleRange);
	bool CanScream();
};

// Class DeadByDaylight.ScreenController
// 0x0260 (FullSize[0x0290] - InheritedSize[0x0030])
class UScreenController : public UObject
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxObject*                                  _screenControllerObj;                                      // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGFxMoviePlayer*                             _moviePlayer;                                              // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, class UScreenBase*>           _screenDictionary;                                         // 0x0048(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<struct FString, DeadByDaylight_EScreenType>   _screenTypeDictionary;                                     // 0x0098(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<class UClass*, TWeakObjectPtr<class UUserWidget>> _cachedUMGScreens;                                         // 0x00E8(0x0050) (ExportObject, Transient, ContainsInstancedReference, UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_80TO[0x158];                                   // 0x0138(0x0158) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ScreenController");
		return ptr;
	}



};

// Class DeadByDaylight.ChaserCharacterComponent
// 0x00D8 (FullSize[0x0200] - InheritedSize[0x0128])
class UChaserCharacterComponent : public UChaseComponent
{
public:
	unsigned char                                      UnknownData_A3RU[0x10];                                    // 0x0128(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDPawnSensingComponent*                    _camperSensor;                                             // 0x0138(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ADBDPlayer*, struct FChaseUpdateInfo>   _chaseUpdateInfo;                                          // 0x0140(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TArray<class ADBDPlayer*>                          _chasedPlayers;                                            // 0x0190(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ADBDPlayer*>                          _authority_survivorsWhoStunnedKillerByPalletDuringChase;   // 0x01A0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TPLN[0x30];                                    // 0x01B0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTagContainer                       _preventChaseTags;                                         // 0x01E0(0x0020) (Edit, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChaserCharacterComponent");
		return ptr;
	}



	void OnKillerLocallyObservedChanged(bool locallyObserved);
	void Multicast_OnChaseStart(class ACamperPlayer* survivor);
	void Multicast_OnChaseEnd(class ACamperPlayer* survivor, const struct FChaseUpdateInfo& ChaseUpdateInfo);
	void Multicast_OnAllChaseEnd();
	void Authority_OnChaseTargetFound(class APawn* Pawn);
};

// Class DeadByDaylight.ChatManager
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class AChatManager : public AActor
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8DFJ[0x18];                                    // 0x0238(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChatManager");
		return ptr;
	}



	void Multicast_DisplayMessage(const struct FString& chatIdentifier, int PlayerIndex, const struct FString& playerName, const struct FString& MirrorsId, const struct FString& Msg);
};

// Class DeadByDaylight.ChatSimulator
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UChatSimulator : public UObject
{
public:
	unsigned char                                      UnknownData_U5FL[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChatSimulator");
		return ptr;
	}



};

// Class DeadByDaylight.CheatUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCheatUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CheatUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.ChunkingManager
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UChunkingManager : public UObject
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7K7N[0x28];                                    // 0x0038(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChunkingManager");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerPositionOffsetComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UDBDPlayerPositionOffsetComponent : public UActorComponent
{
public:
	struct FPerPlatformFloat                           _menuZHeadOffset;                                          // 0x00B8(0x0004) (Edit, DisableEditOnInstance, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UJFD[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerPositionOffsetComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerStart
// 0x0008 (FullSize[0x0270] - InheritedSize[0x0268])
class ADBDPlayerStart : public APlayerStart
{
public:
	unsigned char                                      UnknownData_D5W8[0x8];                                     // 0x0268(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerStart");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerState
// 0x0438 (FullSize[0x0770] - InheritedSize[0x0338])
class ADBDPlayerState : public APlayerState
{
public:
	unsigned char                                      UnknownData_0ECS[0x8];                                     // 0x0338(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnAIFinishedPlayingEvent;                                  // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FString                                     MirrorsId;                                                 // 0x0350(0x0010) (Net, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ContentVersion;                                            // 0x0360(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EAIDifficultyLevel                  _difficultyLevel;                                          // 0x0370(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsPlayerReady;                                             // 0x0371(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EPlayerRole                         GameRole;                                                  // 0x0372(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U2QP[0x5];                                     // 0x0373(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URitualHandlerComponent*                     RitualHandler;                                             // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDedicatedServerHandlerComponent*            DedicatedServerHandler;                                    // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FCharacterStateData                         CamperData;                                                // 0x0388(0x0020) (Net, Transient, RepNotify, NativeAccessSpecifierPublic)
	struct FCharacterStateData                         SlasherData;                                               // 0x03A8(0x0020) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FPlayerStateData                            PlayerData;                                                // 0x03C8(0x0038) (Net, RepNotify, NativeAccessSpecifierPublic)
	struct FEquippedPlayerCustomization                PlayerCustomization;                                       // 0x0400(0x0020) (Net, RepNotify, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CZ0Z[0x8];                                     // 0x0420(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnPlayerGameplayEvent;                                     // 0x0428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameStateChanged;                                        // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayergameStateChanged;                                  // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IQML[0x18];                                    // 0x0458(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FAwardedScores>          _awardedScoresByType;                                      // 0x0470(0x0050) (Protected, NativeAccessSpecifierProtected)
	struct FUserGameStats                              _cachedUserGameStats;                                      // 0x04C0(0x00B0) (Protected, NativeAccessSpecifierProtected)
	TArray<struct FOngoingScoreData>                   _ongoingScoreEvents;                                       // 0x0570(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_72T8[0x8];                                     // 0x0580(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDRecentGameplayEvents                    _recentGameplayEvents;                                     // 0x0588(0x0050) (Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MU4D[0x1];                                     // 0x05D8(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _inParadise;                                               // 0x05D9(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U6RT[0x6];                                     // 0x05DA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UGameplayNotificationManager*                _gameplayNotificationManager;                              // 0x05E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAchievementHandlerComponent*                _achievementHandler;                                       // 0x05E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCharacterStatsHandlerComponent*             _characterStatsHandler;                                    // 0x05F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_G311[0x20];                                    // 0x05F8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     _platformAccountId;                                        // 0x0618(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _selectedCamperIndex;                                      // 0x0628(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _selectedSlasherIndex;                                     // 0x062C(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YD8O[0xFC];                                    // 0x0630(0x00FC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	PlatformsProviders_EPlatformFlag                   _platform;                                                 // 0x072C(0x0001) ELEMENT_SIZE_MISMATCH (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CA1Y[0x3];                                     // 0x0630(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	PlatformsProviders_EProviderFlag                   _provider;                                                 // 0x0730(0x0001) ELEMENT_SIZE_MISMATCH (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L1Z9[0x3];                                     // 0x0730(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	bool                                               _crossplayAllowed;                                         // 0x0734(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _offNetworkFlag;                                           // 0x0735(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _gameLevelLoaded;                                          // 0x0736(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K98Y[0x31];                                    // 0x0737(0x0031) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _showPortraitBorder;                                       // 0x0768(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L61H[0x1];                                     // 0x0769(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _hasActiveSubscription;                                    // 0x076A(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_343F[0x5];                                     // 0x076B(0x0005) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerState");
		return ptr;
	}



	void UpdateOngoingScores();
	void Server_SetSelectedCharacterId(DBDSharedTypes_EPlayerRole forRole, int ID, bool updateDisplayData);
	void Server_SetPlayerGameState(DBDSharedTypes_EGameState newGameState, bool isEscapeHatch);
	void Server_SetGameRole(DBDSharedTypes_EPlayerRole newPlayerRole);
	void Server_SelectSurvivor(int camperIndex);
	void Server_SelectKiller(int slasherIndex);
	void Server_HandleScoreEvent(const struct FGameplayTag& scoreTypeTag, const struct FScoreEventData& ScoreEventData);
	void OnRep_DisplayData();
	void OnRep_CustomizationData();
	void OnRep_BotDifficultyLevel();
	void Multicast_SetSelectedCharacterId(DBDSharedTypes_EPlayerRole forRole, int ID, bool updateDisplayData);
	void Multicast_SetPlayerGameState(DBDSharedTypes_EGameState newGameState, bool isEscapeHatch);
	void Multicast_SetInParadise();
	void Multicast_SetAsLeftMatch();
	void Multicast_SetAsDisconnected();
	void Multicast_FireGameplayEventWithScore(DeadByDaylight_EDBDScoreTypes playerGameplayEventType, float amount, class AActor* effector, class AActor* Target, const struct FAwardedScore& AwardedScore);
	void Multicast_FireGameplayEvent(DeadByDaylight_EDBDScoreTypes playerGameplayEventType, float amount, class AActor* effector, class AActor* Target);
	bool IsInFinishedPlayingState();
	bool HasHappened(DeadByDaylight_EDBDScoreTypes gameplayEventType, float maxSecondsAgo);
	bool HasEscaped();
	DBDSharedTypes_EGameState GetPlayerGameState();
	DBDSharedTypes_EPlayerRole GetGameRole();
	class UGameplayNotificationManager* GetGameplayNotificationManager();
	void FireScoreEvent(DeadByDaylight_EDBDScoreTypes scoreType, float PercentToAward);
	void FireActiveStatusViewEvent(const struct FName& StatusViewID, const struct FName& uniqueSourceID, const struct FStatusViewSource& StatusViewSource);
	void FireActiveStatusEffectEvent(const struct FName& statusEffectId, float Percentage, int iconFilePathIndex, int levelToDisplay);
	void Client_UpdateWallet(const struct FString& currencyId, int amount);
	void Client_SetInParadise();
	void Client_SetGameRole(DBDSharedTypes_EPlayerRole newRole);
	void Client_RemoveItemFromInventory(const struct FName& toRemove, bool UpdateLoadout);
	void Client_RemotelyDispatchGameEventWithScore(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData, const struct FAwardedScore& AwardedScore);
	void Client_RemotelyDispatchGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Client_HandleEscapeScoreEvent();
	void Client_AtlantaUpdateInventoryItem(const struct FName& ItemId, int newCount);
	void Authority_HandleScoreEvent(const struct FGameplayTag& scoreTypeTag, const struct FScoreEventData& ScoreEventData);
	void Authority_ForceEndOngoingScoreEvent(DeadByDaylight_EDBDScoreTypes scoreType);
	void Authority_ForceCancelOngoingScoreEvent(DeadByDaylight_EDBDScoreTypes scoreType);
	void Authority_EndOngoingScoreEvent(const struct FGameplayTag& scoreTypeTag);
	void Authority_CancelOngoingScoreEvent(const struct FGameplayTag& scoreTypeTag);
};

// Class DeadByDaylight.DBDPlayerState_Menu
// 0x0000 (FullSize[0x0770] - InheritedSize[0x0770])
class ADBDPlayerState_Menu : public ADBDPlayerState
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerState_Menu");
		return ptr;
	}



	void Server_SetSelectedCharacterCustomizationMesh(DBDSharedTypes_EPlayerRole forRole, int ID, TArray<struct FName> customizationItemIds);
	void Server_SetSelectedCharacterCustomizationCharms(DBDSharedTypes_EPlayerRole forRole, int ID, TArray<struct FCharmIdSlot> customizationCharms);
	void Server_SetEquipment(DeadByDaylight_ELoadoutSlot Slot, const struct FName& ItemId, bool callOnRep);
	void Multicast_SetSelectedCharacterCustomizationMesh(DBDSharedTypes_EPlayerRole forRole, int ID, TArray<struct FName> customizationItemIds);
	void Multicast_SetSelectedCharacterCustomizationCharms(DBDSharedTypes_EPlayerRole forRole, int ID, TArray<struct FCharmIdSlot> customizationCharms);
};

// Class DeadByDaylight.DBDPlayerState_Lobby
// 0x0008 (FullSize[0x0778] - InheritedSize[0x0770])
class ADBDPlayerState_Lobby : public ADBDPlayerState_Menu
{
public:
	bool                                               IsOwnershipValidated;                                      // 0x0770(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GW53[0x7];                                     // 0x0771(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerState_Lobby");
		return ptr;
	}



};

// Class DeadByDaylight.DBDProjectileUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDProjectileUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDProjectileUtilities");
		return ptr;
	}



	class UAuthoritativePoolProjectileProviderAdapter* STATIC_CreateProjectilePoolAdapter(class UObject* Outer, class UAuthoritativeActorPoolComponent* pool);
};

// Class DeadByDaylight.DBDRankDesignTunables
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UDBDRankDesignTunables : public UObject
{
public:
	class UCurveFloat*                                 UnbrokenTimeAlivePointsCurve;                              // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EvaderStealthPointsByDistanceWhileKillerNotChasingCurve;   // 0x0038(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EvaderStealthPointsByDistanceWhileKillerIsChasingCurve;    // 0x0040(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EvaderChasePointsByDurationCurve;                          // 0x0048(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 EvaderZAxisDistanceScalingCurve;                           // 0x0050(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 ChaserChasePointsByDurationCurve;                          // 0x0058(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDRankDesignTunables");
		return ptr;
	}



};

// Class DeadByDaylight.DBDRichPresenceSubsystem
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UDBDRichPresenceSubsystem : public UGameInstanceSubsystem
{
public:
	OnlinePresence_ERichPresenceUserType               _userType;                                                 // 0x0038(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	OnlinePresence_ERichPresenceStatus                 _richPresenceStatus;                                       // 0x0039(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OHU5[0x2];                                     // 0x003A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _timerRate;                                                // 0x003C(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timerDelay;                                               // 0x0040(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isValidSetup;                                             // 0x0044(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8OSS[0xB];                                     // 0x0045(0x000B) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDRichPresenceSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.DBDHostSettingsParamsBase
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UDBDHostSettingsParamsBase : public UObject
{
public:
	unsigned char                                      UnknownData_Y4A7[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDHostSettingsParamsBase");
		return ptr;
	}



};

// Class DeadByDaylight.DBDHostSettingsParamsSessionInvalid
// 0x0000 (FullSize[0x0040] - InheritedSize[0x0040])
class UDBDHostSettingsParamsSessionInvalid : public UDBDHostSettingsParamsBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDHostSettingsParamsSessionInvalid");
		return ptr;
	}



};

// Class DeadByDaylight.DBDHostSettingsParamsJoinabilityPreset
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UDBDHostSettingsParamsJoinabilityPreset : public UDBDHostSettingsParamsBase
{
public:
	unsigned char                                      UnknownData_7XSM[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDHostSettingsParamsJoinabilityPreset");
		return ptr;
	}



};

// Class DeadByDaylight.DBDHostSettingsParamsRanking
// 0x0008 (FullSize[0x0048] - InheritedSize[0x0040])
class UDBDHostSettingsParamsRanking : public UDBDHostSettingsParamsBase
{
public:
	unsigned char                                      UnknownData_97J7[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDHostSettingsParamsRanking");
		return ptr;
	}



};

// Class DeadByDaylight.DBDServerInstance
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UDBDServerInstance : public UObject
{
public:
	unsigned char                                      UnknownData_MT74[0x68];                                    // 0x0030(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UDBDHostSettingsParamsBase*>          _pendingSessionUpdates;                                    // 0x0098(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x00A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDServerInstance");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerData
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UDBDPlayerData : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnItemUseButtonStateChanged;                               // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TD79[0x28];                                    // 0x00C8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FYawAndPitchRotator_NetQuantize16           _controlRotation;                                          // 0x00F0(0x000C) (Net, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VKQM[0xC];                                     // 0x00FC(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerData");
		return ptr;
	}



	void SetRenderingFeaturesCompleted();
	void SetLoadoutSpawned();
	void SetIntroCompleted();
	void SetCampaignDataSynced();
	void Server_SetIntroCompleted();
	void Server_RenderingFeaturesCompleted();
	void Server_LoadoutSpawned();
	void Server_CampaignDataSynced();
	void OnItemUseButtonStateChanged__DelegateSignature(bool IsPressed);
	bool IsLoadoutSpawned();
	bool IsIntroCompleted();
	bool IsCampaignDataSynced();
	bool GetUseInputPressed();
	bool GetLeftRightInputMashed();
	bool GetInteractionInputMashed();
	struct FRotator GetControlRotation();
	bool DidRenderingFeaturesComplete();
};

// Class DeadByDaylight.DBDSlasherData
// 0x0008 (FullSize[0x0110] - InheritedSize[0x0108])
class UDBDSlasherData : public UDBDPlayerData
{
public:
	unsigned char                                      UnknownData_32NT[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDSlasherData");
		return ptr;
	}



};

// Class DeadByDaylight.DBDSocialNotificationFactory
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class UDBDSocialNotificationFactory : public UObject
{
public:
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UToastManager*                               _toastMgr;                                                 // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDBDPartyFacade*                             _partyFacade;                                              // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFriendManager*                              _friendManager;                                            // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  _toastTable;                                               // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7OKV[0x18];                                    // 0x0058(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDSocialNotificationFactory");
		return ptr;
	}



};

// Class DeadByDaylight.DBDSpecialEventUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDSpecialEventUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDSpecialEventUtilities");
		return ptr;
	}



	bool STATIC_DoesPlayerHasEventOffering(class ADBDPlayer* Player, DeadByDaylight_EOfferingEffectType offeringEffectType);
};

// Class DeadByDaylight.DBDSpectator
// 0x0020 (FullSize[0x02D8] - InheritedSize[0x02B8])
class ADBDSpectator : public ASpectatorPawn
{
public:
	unsigned char                                      UnknownData_7Y2P[0x20];                                    // 0x02B8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDSpectator");
		return ptr;
	}



};

// Class DeadByDaylight.DBDSpringArmComponent
// 0x0080 (FullSize[0x0320] - InheritedSize[0x02A0])
class UDBDSpringArmComponent : public USpringArmComponent
{
public:
	unsigned char                                      bEnableComponentwiseCameraLag : 1;                         // 0x02A0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_6XIQ[0x3];                                     // 0x02A1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     ComponenwiseCameraLagSpeed;                                // 0x02A4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TargetArmMinLength;                                        // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      bEnableDistanceCameraLag : 1;                              // 0x02B4(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U7DR[0x3];                                     // 0x02B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              CameraDistanceLagSpeed;                                    // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0YKT[0x4];                                     // 0x02BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      bDrawDebugTraceMarkers : 1;                                // 0x02C0(0x0001) BIT_FIELD (Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DS4Y[0x7];                                     // 0x02C1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class AActor>>               ignoreActors;                                              // 0x02C8(0x0010) (ZeroConstructor, Transient, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KA55[0x48];                                    // 0x02D8(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDSpringArmComponent");
		return ptr;
	}



	void IgnoreActor(class AActor* Actor, bool bShouldIgnore);
	void ClearIgnoreActors();
};

// Class DeadByDaylight.DBDSurfaceTypeName
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDSurfaceTypeName : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDSurfaceTypeName");
		return ptr;
	}



	TEnumAsByte<Engine_EPhysicalSurface> STATIC_GetSurfaceType(class UPhysicalMaterial* PhysicalMaterial);
	struct FString STATIC_GetSurfaceName(class UPhysicalMaterial* PhysicalMaterial);
	struct FName STATIC_ConvertFromPhysicalMaterial(class UPhysicalMaterial* Material);
	struct FName STATIC_Convert(TEnumAsByte<Engine_EPhysicalSurface> SurfaceType);
};

// Class DeadByDaylight.DBDTags
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDTags : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDTags");
		return ptr;
	}



};

// Class DeadByDaylight.DBDTimerComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UDBDTimerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_K0BF[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDTimerComponent");
		return ptr;
	}



	void Update(float DeltaTime);
	void Unpause();
	void Stop();
	void ResetTo(float Time);
	void Reset();
	void Pause();
	bool IsOnPause();
	bool IsDone();
	float GetTimeLeft();
	float GetTimeElapsed();
	float GetStartTime();
	float GetPercentTimeLeft();
	float GetPercentTimeElapsed();
};

// Class DeadByDaylight.DBDTunableUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDTunableUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDTunableUtilities");
		return ptr;
	}



	float STATIC_GetTunableValue(class UObject* WorldContextObject, const struct FName& valueName);
	float STATIC_GetTunableRowHandleValue(const struct FDBDTunableRowHandle& rowHandle);
	float STATIC_GetSlasherTunableValue(class UObject* WorldContextObject, const struct FName& valueName);
	float STATIC_GetEndGameTunableValue(class UObject* WorldContextObject, const struct FName& valueName);
};

// Class DeadByDaylight.DBDUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDUtilities");
		return ptr;
	}



	bool STATIC_WithinRangeExclusive(float Min, float Max, float value);
	bool STATIC_WithinRange(float Min, float Max, float value);
	float STATIC_ToAngle_negative180to180(float Angle);
	bool STATIC_SphereTraceSingle(const struct FVector& Start, const struct FVector& End, class USphereComponent* Sphere, struct FHitResult* outHitResult, TArray<class AActor*> ignoredActors);
	bool STATIC_SphereTraceAgainstActor(const struct FVector& Start, const struct FVector& End, class USphereComponent* Sphere, class AActor* Actor, struct FHitResult* outHitResult);
	void STATIC_SetComponentCastHiddenShadow(class UPrimitiveComponent* Component, bool CastShadow);
	int STATIC_ResolveCharacterIdFromPlayerState(class ADBDPlayerState* PlayerState);
	void STATIC_PrintStringEmbiggened(class UObject* WorldContextObject, const struct FString& inString, const struct FLinearColor& TextColor, float Duration, int Key, float Scale);
	int STATIC_PointerToInt(class UObject* Obj);
	bool STATIC_NormalizeXY(struct FVector* Vector, float Tolerance);
	void STATIC_LogString(const struct FString& inStr);
	void STATIC_LogMeshMaterialInfo(const struct FString& inStr, class UMeshComponent* Root);
	bool STATIC_IsServer(class UObject* WorldContextObject);
	bool STATIC_IsReplaceDisconnectedPlayersWithBotsActive();
	bool STATIC_IsNonViolent();
	bool STATIC_IsLocallyObservingASurvivor(class UObject* WorldContextObject);
	bool STATIC_IsLocallyObservingAKiller(class UObject* WorldContextObject);
	bool STATIC_IsInTutorialLevel();
	bool STATIC_IsInSurvivorTeam(class UObject* WorldContextObject);
	bool STATIC_IsInKillerTeam(class UObject* WorldContextObject);
	bool STATIC_HasWalkableSurfaceForward(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& fowardVector, float Distance, float raycastStartHeight, float raycastEndHeight, TArray<struct FHitResult>* OutHits, struct FVector* raycastStart);
	bool STATIC_HasLineOfSightToTarget(class UObject* WorldContextObject, const struct FVector& startPosition, const struct FVector& targetPosition, class AActor* ignoredActor, bool useComplex);
	bool STATIC_HasFloorForward(class UObject* WorldContextObject, const struct FVector& Location, const struct FVector& fowardVector, float Distance, float raycastStartHeight, float raycastEndHeight, TArray<struct FHitResult>* OutHits, struct FVector* raycastStart);
	struct FRotator STATIC_GetYawOnly(const struct FRotator& Rotation);
	struct FVector STATIC_GetXYVector(const struct FVector& Vector);
	float STATIC_GetVelocityXYAngleDegrees(class AActor* Actor);
	void STATIC_GetTileSpawnPoints(TArray<class UTileSpawnPoint*>* tileSpawnPoints);
	TArray<class AGenerator*> STATIC_GetThreeClosestGenerators(TArray<class AGenerator*> unrevealedGenerators);
	float STATIC_GetSlasherTunableValue(class UObject* WorldContextObject, const struct FName& valueName);
	class ASlasherPlayer* STATIC_GetSlasher(class UObject* WorldContextObject);
	struct FVector STATIC_GetSimilarVector(const struct FVector& Vector, float maximumDeviation);
	float STATIC_GetPlayRateForMontage(class UAnimMontage* Montage, float Time);
	float STATIC_GetPercentOfRange(float Val, float Min, float Max);
	class ASlasherPlayer* STATIC_GetOwningSlasher(class UAnimInstance* AnimInstance);
	class ADBDBasePlayer* STATIC_GetOwningDBDBasePlayer(class UAnimInstance* AnimInstance);
	class USkeletalMeshComponent* STATIC_GetOwningCharacterSkeletalMeshComponent(class UAnimInstance* AnimInstance);
	class ACamperPlayer* STATIC_GetOwningCamper(class UAnimInstance* AnimInstance);
	class AActor* STATIC_GetOuterMostActor(class UAnimInstance* AnimInstance);
	void STATIC_GetNearbyCampers(class UWorld* World, const struct FVector& Center, float Radius, TArray<class ACamperPlayer*>* outNearbyCampers, TArray<class AActor*> ignoredCampers);
	bool STATIC_GetNearbyActorsOfType(class UWorld* World, const struct FVector& Center, float Radius, TArray<class AActor*>* outNearbyActors, class UClass* actorClassType, TEnumAsByte<Engine_ECollisionChannel> collisionChannel, class AActor* IgnoreActor);
	float STATIC_GetMontageLength(class UAnimMontage* Montage);
	TArray<class UMaterialHelper*> STATIC_GetMaterialHelpersAttachedToPlayerMesh(class ADBDPlayer* Player);
	struct FString STATIC_GetLogStringMaterialInfo(const struct FString& inStr, class UMaterialInterface* Root);
	DBDSharedTypes_EPlayerRole STATIC_GetLocallyObservedCharacterRole(class UObject* WorldContextObject);
	class ADBDPlayer* STATIC_GetLocallyObservedCharacter(class UObject* WorldContextObject);
	class ACamperPlayer* STATIC_GetLocallyControlledSurvivor(class UObject* WorldContextObject);
	class ASlasherPlayer* STATIC_GetLocallyControlledKiller(class UObject* WorldContextObject);
	DBDSharedTypes_EPlayerRole STATIC_GetLocallyControlledCharacterRole(class UObject* WorldContextObject);
	class ADBDPlayer* STATIC_GetLocallyControlledCharacter(class UObject* WorldContextObject);
	class ADBDPlayerControllerBase* STATIC_GetLocalDBDPlayerController(class UObject* WorldContextObject);
	class ADBDPlayerCameraManager* STATIC_GetLocalDBDCameraManager(class UObject* WorldContextObject);
	int STATIC_GetInventoryCountForMultipleCharacters(class UObject* WorldContextObject, TArray<int> characterIndexes, const struct FName& ItemId);
	int STATIC_GetInventoryCount(class UObject* WorldContextObject, int characterIndex, const struct FName& ItemId);
	void STATIC_GetInGameSurvivorsByRef(class UObject* WorldContextObject);
	TArray<class ACamperPlayer*> STATIC_GetInGameSurvivors(class UObject* WorldContextObject);
	TArray<class ADBDPlayer*> STATIC_GetInGamePlayers(class UObject* WorldContextObject);
	struct FCollisionResponseContainer STATIC_GetImpactCollisionResponseContainer(class UPrimitiveComponent* Primitive);
	TEnumAsByte<Engine_ECollisionChannel> STATIC_GetImpactCollisionObjectType(class UPrimitiveComponent* Primitive);
	struct FText STATIC_GetFormattedNumberText(float value, int maxDecimals, int minDecimals, bool leadingZero);
	struct FString STATIC_GetFormattedNumberString(float value, int maxDecimals, int minDecimals, bool leadingZero);
	struct FVector STATIC_GetFloorLocationAt(class UObject* WorldContextObject, const struct FVector& Location, float raycastStartHeight, float raycastEndHeight, bool useComplex);
	class AActor* STATIC_GetFirstActorWithTag(const struct FName& Tag, TArray<class AActor*> actorsArray);
	float STATIC_GetEndGameTunableValue(class UObject* WorldContextObject, const struct FName& valueName);
	float STATIC_GetDistanceToNearestHookedSurvivor(class ADBDPlayer* Player);
	class ADBDGameState* STATIC_GetDBDGameState(class UObject* WorldContextObject);
	class ADBDGameMode* STATIC_GetDBDGameMode(class UObject* WorldContextObject);
	class UDBDGameInstance* STATIC_GetDBDGameInstance(class UObject* WorldContextObject);
	class ADBDAIPlayerController* STATIC_GetDBDAIPlayerController(class ADBDPlayer* Player);
	struct FName STATIC_GetCurrentCharacterName(class UObject* WorldContextObject);
	struct FString STATIC_GetComponentOwnerName(class UActorComponent* ActorComponent);
	struct FTransform STATIC_GetClosestSnapTransformOnOrbit(const struct FVector& centerPoint, const struct FVector& orbitterPosition, float Distance);
	struct FVector STATIC_GetClosestPointOnOrbit(const struct FVector& centerPoint, const struct FVector& orbitterPosition, float Distance);
	class AProceduralLevelBuilder* STATIC_GetBuilder(class UObject* WorldContextObject);
	float STATIC_GetAnimSequenceLength(class UAnimSequence* Sequence);
	void STATIC_GetActorSpawners(TArray<class UActorSpawner*>* actorSpawners);
	struct FString STATIC_GetActorOwnerName(class AActor* Actor);
	DeadByDaylight_EShadowSystem STATIC_GetActiveShadowSystem();
	class AActor* STATIC_FindParentOfClass(class AActor* InChild, class UClass* InClass);
	bool STATIC_FindFloorSingle(class UObject* WorldContextObject, const struct FVector& Location, float raycastLength, struct FHitResult* OutHit);
	float STATIC_DistanceFromPointToPane(const struct FVector& Point, const struct FPlane& Plane);
	class UObject* STATIC_DBDLoadAudioBankByAssetPtr(class AActor* caller);
	void STATIC_DBDLoadAudioBankAsync(class UAkAudioBank* Bank, class AActor* caller);
	void STATIC_DBDLoadAudioBank(class UAkAudioBank* Bank, class AActor* caller);
	bool STATIC_DBDCapsuleTraceSingle(class UObject* WorldContextObject, const struct FVector& Start, const struct FVector& End, float Radius, float HalfHeight, TEnumAsByte<Engine_ECollisionChannel> TraceChannel, bool bTraceComplex, TArray<class AActor*> ActorsToIgnore, TEnumAsByte<Engine_EDrawDebugTrace> DrawDebugType, struct FHitResult* OutHit, bool bIgnoreSelf);
	void STATIC_CrashGameCausingInterrupt();
	bool STATIC_BoxTraceAgainstActor(const struct FVector& Start, const struct FVector& End, class UBoxComponent* Box, class AActor* Actor, struct FHitResult* outHitResult);
	class UActorComponent* STATIC_AddComponentToActor(class UClass* compClass, const struct FName& compName, class AActor* Actor);
};

// Class DeadByDaylight.DBDUtilTimer
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDUtilTimer : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDUtilTimer");
		return ptr;
	}



	void STATIC_Update(struct FDBDTimer* Timer, float DeltaTime);
	void STATIC_Stop(struct FDBDTimer* Timer);
	void STATIC_ResetTo(struct FDBDTimer* Timer, float Time);
	void STATIC_Reset(struct FDBDTimer* Timer);
	bool STATIC_IsDone(const struct FDBDTimer& Timer);
	float STATIC_GetTimeLeft(const struct FDBDTimer& Timer);
	float STATIC_GetTimeElapsed(const struct FDBDTimer& Timer);
	float STATIC_GetStartTime(const struct FDBDTimer& Timer);
	float STATIC_GetPercentTimeLeft(const struct FDBDTimer& Timer);
	float STATIC_GetPercentTimeElapsed(const struct FDBDTimer& Timer);
};

// Class DeadByDaylight.DeadByDaylightGameMode
// 0x0000 (FullSize[0x0328] - InheritedSize[0x0328])
class ADeadByDaylightGameMode : public AgameMode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DeadByDaylightGameMode");
		return ptr;
	}



};

// Class DeadByDaylight.DecalMaskedMaterialsList
// 0x0060 (FullSize[0x0098] - InheritedSize[0x0038])
class UDecalMaskedMaterialsList : public UDataAsset
{
public:
	class UStaticMesh*                                 decalPlaneStaticMesh;                                      // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              decalPlaneExtent;                                          // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_M1CW[0x4];                                     // 0x0044(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, class UMaterialInterface*>      decalMaskedMaterials;                                      // 0x0048(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DecalMaskedMaterialsList");
		return ptr;
	}



};

// Class DeadByDaylight.DecalCollection
// 0x0120 (FullSize[0x0150] - InheritedSize[0x0030])
class UDecalCollection : public UObject
{
public:
	TArray<class UDBDDecalComponent*>                  _decalComponentsArray;                                     // 0x0030(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _activeDecalComponents[0x50];                              // 0x0040(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _inactiveDecalComponents[0x50];                            // 0x0090(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<bool>                                       _DeltaZPool;                                               // 0x00E0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UStaticMeshComponent*, int>             _deltaZMultipliers;                                        // 0x00F0(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q1QR[0x10];                                    // 0x0140(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DecalCollection");
		return ptr;
	}



};

// Class DeadByDaylight.DecalSpawner
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UDecalSpawner : public UObject
{
public:
	class UDecalCollection*                            _decalCollection;                                          // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpawnerStrategy*                            _spawnerStrategy;                                          // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GPMC[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DecalSpawner");
		return ptr;
	}



	class USpawnerStrategy* GetSpawnerStrategy();
};

// Class DeadByDaylight.DecalSpawnerCollection
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UDecalSpawnerCollection : public UObject
{
public:
	TMap<struct FName, class UDecalSpawner*>           _decalSpawners;                                            // 0x0030(0x0050) (Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DecalSpawnerCollection");
		return ptr;
	}



	class UDBDDecalComponent* SpawnDecalAtLocation(const struct FName& decalSpawnerName, const struct FVector& DecalSize, const struct FVector& Location, const struct FRotator& Rotation, float LifeSpan, const struct FName& decalType);
	void ReleaseDecalSpawner(const struct FName& decalSpawnerName);
	class UDecalSpawner* CreateDecalSpawner(class UObject* WorldContextObject, const struct FName& decalSpawnerName, class UMaterialInterface* DecalMaterial, int PoolSize, DeadByDaylight_ESpawnerStrategyType spawnerStrateryType);
};

// Class DeadByDaylight.DecoySlasherComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UDecoySlasherComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnPalletStunned_Authority;                                 // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    TriggerDecoyVisibilityVFX;                                 // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               HasTerrorRadius;                                           // 0x00D8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               HasRedGlow;                                                // 0x00D9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isActive;                                                 // 0x00DA(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _initialized;                                              // 0x00DB(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W3IM[0x4];                                     // 0x00DC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTerrorRadiusEmitterComponent*               _terrorRadiusEmitter;                                      // 0x00E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URedStainComponent*                          _redStainComponent;                                        // 0x00E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DecoySlasherComponent");
		return ptr;
	}



	void SetDecoyIsActive(bool IsActive, const struct FVector& Location, const struct FRotator& Rotation, bool visibleRedGlow);
	void OnRealSlasherTerrorRadiusChanged(float NewValue);
	bool IsDecoyActive();
	class UTerrorRadiusEmitterComponent* GetTerrorRadiusEmitter();
	class ASlasherPlayer* GetRealSlasher();
	void DoPostVFXUpdates(const struct FVector& Location, const struct FRotator& Rotation);
	void CopyCustomizationFromSlasher();
	void Authority_PalletStun(class AActor* Instigator);
};

// Class DeadByDaylight.EditorActorVisualization
// 0x0060 (FullSize[0x0270] - InheritedSize[0x0210])
class UEditorActorVisualization : public USceneComponent
{
public:
	unsigned char                                      ActorVisualization[0x30];                                  // 0x0210(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FTransform                                  RelativeTransform;                                         // 0x0240(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EditorActorVisualization");
		return ptr;
	}



};

// Class DeadByDaylight.LevelReadyToPlayPlayerComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class ULevelReadyToPlayPlayerComponent : public UActorComponent
{
public:
	TArray<struct FLevelReadyToPlayRequirements>       _levelReadyToPlayRequirementsTarget;                       // 0x00B8(0x0010) (Net, ZeroConstructor, Transient, RepNotify, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZVJS[0x20];                                    // 0x00C8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LevelReadyToPlayPlayerComponent");
		return ptr;
	}



	void Server_SetIsReadyToPlay(bool readyToPlay);
	void OnRep_LevelReadyToPlayRequirementsTarget();
};

// Class DeadByDaylight.LevelUpPopupScreenUMG
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class ULevelUpPopupScreenUMG : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LevelUpPopupScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.LightFollower
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class ULightFollower : public UActorComponent
{
public:
	unsigned char                                      UnknownData_8PN8[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LightFollower");
		return ptr;
	}



	void SetLeader(class ULightComponent* Leader, float maxIntensity);
	void AddFollower(class ULightComponent* Follower);
};

// Class DeadByDaylight.LightFunctionActorSpawner
// 0x0008 (FullSize[0x02D0] - InheritedSize[0x02C8])
class ULightFunctionActorSpawner : public UActorSpawner
{
public:
	class UTexture*                                    LightFunctionTexture;                                      // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LightFunctionActorSpawner");
		return ptr;
	}



};

// Class DeadByDaylight.LightingData
// 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
class ULightingData : public UDataAsset
{
public:
	unsigned char                                      DefaultLighting[0x30];                                     // 0x0038(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      DefaultAtlantaLighting[0x30];                              // 0x0068(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FSceneLightingDescription>           Descriptions;                                              // 0x0098(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      AdaptiveShadowMapControllersActor[0x30];                   // 0x00A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LightingData");
		return ptr;
	}



};

// Class DeadByDaylight.LightingFactory
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class ULightingFactory : public UObject
{
public:
	class ULightingData*                               _data;                                                     // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LightingFactory");
		return ptr;
	}



};

// Class DeadByDaylight.LightingHelper
// 0x0090 (FullSize[0x00C0] - InheritedSize[0x0030])
class ULightingHelper : public UObject
{
public:
	class ABaseSky*                                    _levelLighting;                                            // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABaseSky*                                    _levelLightingFixed;                                       // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABaseSky*                                    _levelLightingSpawned;                                     // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ABaseSky*                                    _levelLightingWithoutExposure;                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AActor*                                      _adaptiveShadowMapControllersActor;                        // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULightingInterpolator*                       _lightingInterpolator;                                     // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULightingFactory*                            _lightingFactory;                                          // 0x0060(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPostProcessComponent*                       _postProcessCache;                                         // 0x0068(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _bIsDreamworldActive;                                      // 0x0070(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_41SY[0x4F];                                    // 0x0071(0x004F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LightingHelper");
		return ptr;
	}



	void ToggleDreamworldLighting(bool bActivateDreamworld);
	class UTextureCube* GetTextureCube(const struct FName& mapTheme);
	class UClass* GetSourceLevelLightingClass();
	void DBD_ModifyExposure(float value);
};

// Class DeadByDaylight.LightingInterpolator
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class ULightingInterpolator : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnInterpolationDone;                                       // 0x0030(0x0010) (ZeroConstructor, Transient, InstancedReference, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OOXU[0x38];                                    // 0x0040(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ABaseSky*                                    _targetLighting;                                           // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LightingInterpolator");
		return ptr;
	}



	void STATIC_LerpSkylight(class USkyLightComponent* Target, class USkyLightComponent* A, class USkyLightComponent* B, float alpha);
	void STATIC_LerpLight(class ULightComponent* Target, class ULightComponent* A, class ULightComponent* B, float alpha);
	void STATIC_LerpHeightFog(class UExponentialHeightFogComponent* Target, class UExponentialHeightFogComponent* A, class UExponentialHeightFogComponent* B, float alpha);
};

// Class DeadByDaylight.SpawnerStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USpawnerStrategy : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SpawnerStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.LimitAccumulationSpawnerStrategy
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class ULimitAccumulationSpawnerStrategy : public USpawnerStrategy
{
public:
	unsigned char                                      UnknownData_DBDH[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LimitAccumulationSpawnerStrategy");
		return ptr;
	}



	void SetRecycleThresholdPercentage(float recycleThresholdPercentage);
	void SetRecycleDistancePercentage(float recycleDistancePercentage);
	void SetMaxOverlapping(int maxOverlapping);
};

// Class DeadByDaylight.LoadingScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class ULoadingScreen : public UScreenBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LoadingScreen");
		return ptr;
	}



};

// Class DeadByDaylight.LoadingScreenScaleform
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class ULoadingScreenScaleform : public ULoadingScreen
{
public:
	unsigned char                                      UnknownData_M38G[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LoadingScreenScaleform");
		return ptr;
	}



	void OnLoadingTextTimerComplete();
};

// Class DeadByDaylight.LoadingScreenUMG
// 0x0008 (FullSize[0x0128] - InheritedSize[0x0120])
class ULoadingScreenUMG : public ULoadingScreen
{
public:
	class UUMGLoadingScreenWidget*                     _loadingScreen;                                            // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LoadingScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.LoadingUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class ULoadingUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LoadingUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.LoadoutSlotFloatingWidget
// 0x0008 (FullSize[0x0340] - InheritedSize[0x0338])
class ULoadoutSlotFloatingWidget : public UBaseTooltipWidget
{
public:
	class UTextBlock*                                  Message;                                                   // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LoadoutSlotFloatingWidget");
		return ptr;
	}



};

// Class DeadByDaylight.LobbyControllerSubsystem
// 0x0078 (FullSize[0x00B0] - InheritedSize[0x0038])
class ULobbyControllerSubsystem : public UGameInstanceSubsystem
{
public:
	TWeakObjectPtr<class ULobbyDisplayStandController> _localPlayerDisplayStandController;                        // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, class ULobbyDisplayStandController*> _displayStandControllers;                                  // 0x0040(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_73X3[0x20];                                    // 0x0090(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LobbyControllerSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.LobbyDisplayStandController
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class ULobbyDisplayStandController : public UObject
{
public:
	unsigned char                                      UnknownData_APDJ[0xC0];                                    // 0x0030(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LobbyDisplayStandController");
		return ptr;
	}



};

// Class DeadByDaylight.LocalEventManager
// 0x15D8 (FullSize[0x1608] - InheritedSize[0x0030])
class ULocalEventManager : public UObject
{
public:
	unsigned char                                      UnknownData_ROJE[0x15D8];                                  // 0x0030(0x15D8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LocalEventManager");
		return ptr;
	}



};

// Class DeadByDaylight.LocalPlayerTrackerComponent
// 0x0010 (FullSize[0x0220] - InheritedSize[0x0210])
class ULocalPlayerTrackerComponent : public USceneComponent
{
public:
	struct FScriptMulticastDelegate                    TrackerOnLocallyObservedChanged;                           // 0x0210(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LocalPlayerTrackerComponent");
		return ptr;
	}



	void TriggerOnLocallyObservedChanged();
};

// Class DeadByDaylight.Locker
// 0x00E0 (FullSize[0x0408] - InheritedSize[0x0328])
class ALocker : public AInteractable
{
public:
	struct FScriptMulticastDelegate                    OnSurvivorInLockerChanged;                                 // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              FastDoorActivationAudibleRange;                            // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NormalDoorActivationAudibleRange;                          // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAnimationMontageSlave*                      _montageFollower;                                          // 0x0340(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMontagePlayer*                              _montagePlayer;                                            // 0x0348(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADBDPlayer*                                  _playerOpeningLocker;                                      // 0x0350(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACamperPlayer*                               _survivorInLocker;                                         // 0x0358(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractor*                                 _mainInteractor;                                           // 0x0360(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                         _frontInteractionZone;                                     // 0x0368(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionDefinition*                      _searchEmpty;                                              // 0x0370(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UInteractionDefinition*                      _searchPlayer;                                             // 0x0378(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChildActorComponent*                        _killerInteractionActor;                                   // 0x0380(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ULockerAnimInstance*                         _lockerAnimInstance;                                       // 0x0388(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _interactionExitClosetSemantics;                           // 0x0390(0x0020) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EWI7[0x40];                                    // 0x03B0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _preventAllInteractions;                                   // 0x03F0(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _preventAllInteractionsLocally;                            // 0x03F1(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2RZQ[0x16];                                    // 0x03F2(0x0016) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Locker");
		return ptr;
	}



	void StopMinNearOutlineDistLerp(class ADBDPlayer* Player);
	void SpawnKillerReloadActor(class UClass* actorClass);
	void SetupKillerSpecificInteraction(class UInteractionDefinition* Interaction);
	void SetSurvivorInLocker(class ACamperPlayer* survivorInLocker);
	void SetPlayerOpeningLocker(class ADBDPlayer* Player);
	void OnSurvivorInLockerChanged__DelegateSignature(class ADBDPlayer* oldSurvivor, class ADBDPlayer* newSurvivor);
	void OnSurvivorHealthChanged(DeadByDaylight_ECamperDamageState before, DeadByDaylight_ECamperDamageState after);
	void OnSurvivorEndPlay(class AActor* Actor, TEnumAsByte<Engine_EEndPlayReason> EndPlayReason);
	void OnRep_PreventAllInteractions();
	void Multicast_EjectSurvivor();
	bool IsOccupied();
	bool IsFacingLocker(class ADBDPlayer* Player, float toleranceDegreeAngle);
	class ACamperPlayer* GetSurvivorInLocker();
	class UPrimitiveComponent* GetStunZone();
	class AActor* GetKillerInteractionActor();
	class UInteractor* GetInteractor();
	void EjectSurvivor();
	void Authority_ReportOpenLockerNoiseEventToAI(bool fastActivation);
	void Authority_EnableOtherInteractors(class UInteractor* usableInteractor, bool usable);
	bool AreInteractionsAllowed();
};

// Class DeadByDaylight.LockerAmmoActorOutlineUpdateStrategy
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class ULockerAmmoActorOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LockerAmmoActorOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.LockerAnimInstance
// 0x0000 (FullSize[0x0280] - InheritedSize[0x0280])
class ULockerAnimInstance : public USleepingAnimInstance
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LockerAnimInstance");
		return ptr;
	}



};

// Class DeadByDaylight.LockerOutlineUpdateStrategy
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class ULockerOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LockerOutlineUpdateStrategy");
		return ptr;
	}



	struct FLinearColor GetRedColor();
};

// Class DeadByDaylight.LoudNoise
// 0x0070 (FullSize[0x02A0] - InheritedSize[0x0230])
class ALoudNoise : public AActor
{
public:
	class UDecalComponent*                             _toInfinityDecal;                                          // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystemComponent*                    _distortionParticleSystem;                                 // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                                _ak_audio_loudNoise;                                       // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             _rootScene;                                                // 0x0248(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _loudNoiseMinDistance;                                     // 0x0250(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LZ2Z[0x34];                                    // 0x0254(0x0034) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _loudNoiseLifetime;                                        // 0x0288(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _heightToAddToLoudNoiseLocation;                           // 0x028C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _loudNoiseDecalDistance;                                   // 0x0290(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _cameraDecalDistance;                                      // 0x0294(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OMYY[0x8];                                     // 0x0298(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LoudNoise");
		return ptr;
	}



};

// Class DeadByDaylight.LoudNoiseEventSystem
// 0x0070 (FullSize[0x0128] - InheritedSize[0x00B8])
class ULoudNoiseEventSystem : public UActorComponent
{
public:
	unsigned char                                      UnknownData_RCGE[0x70];                                    // 0x00B8(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LoudNoiseEventSystem");
		return ptr;
	}



};

// Class DeadByDaylight.LoudNoiseHUDIndicator
// 0x0070 (FullSize[0x0280] - InheritedSize[0x0210])
class ULoudNoiseHUDIndicator : public USceneComponent
{
public:
	class UStaticMesh*                                 MaskMesh;                                                  // 0x0210(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                                 DistortionMesh;                                            // 0x0218(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EdgePadding;                                               // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CornerRoundness;                                           // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ScreenFadeOutDistance;                                     // 0x0228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QHBN[0x4];                                     // 0x022C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    LoudNoiseAddedEvent;                                       // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OANO[0x30];                                    // 0x0240(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FLoudNoiseIndicatorData>             _trackedNoises;                                            // 0x0270(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LoudNoiseHUDIndicator");
		return ptr;
	}



	void AddTrackedNoise(const struct FVector& Location, float Duration);
};

// Class DeadByDaylight.LoudNoiseNotifier
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class ULoudNoiseNotifier : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LoudNoiseNotifier");
		return ptr;
	}



	void STATIC_Fire(class UObject* WorldContextObject, class AActor* Instigator, const struct FVector& Location, bool shouldTrack, float audibleRange, class ADBDPlayer* instigatingPlayer, bool isQuickAction);
};

// Class DeadByDaylight.LoudNoiseUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class ULoudNoiseUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LoudNoiseUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.LunarEventComponent
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class ULunarEventComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_XIG9[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _lanternCollectedCount;                                    // 0x00D0(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _additionalEventProgressCount;                             // 0x00D4(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FTQQ[0x30];                                    // 0x00D8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LunarEventComponent");
		return ptr;
	}



	void OnRep_lanternCollectedCount();
	void OnLanternHoldTimerEnd();
	void OnFinishedPlaying(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Multicast_ResetLanternLight(class ALanternInteractable* LanternInteractable);
	void Local_OnCamperLostLantern(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Local_OnCamperEscape(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Authority_OnSlasherDestroysLantern(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Authority_OnPlayerLeaveGame(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Authority_OnPickupLantern(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Authority_OnFixGenerator(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Authority_OnDestroyCamperLightGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Authority_OnCamperLostLantern(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Authority_OnCamperEscape(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
};

// Class DeadByDaylight.MagicFountain
// 0x0018 (FullSize[0x0340] - InheritedSize[0x0328])
class AMagicFountain : public AInteractable
{
public:
	unsigned char                                      UnknownData_DR5I[0x8];                                     // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     AIInteractionOffset;                                       // 0x0330(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_B8OX[0x4];                                     // 0x033C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MagicFountain");
		return ptr;
	}



	bool IsCorrupted();
};

// Class DeadByDaylight.MagicFountainOutlineUpdateStrategy
// 0x0018 (FullSize[0x00D8] - InheritedSize[0x00C0])
class UMagicFountainOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _outlineColor;                                             // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0P2P[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MagicFountainOutlineUpdateStrategy");
		return ptr;
	}



	void SetFountainCorrupted(bool corrupted);
};

// Class DeadByDaylight.ManualIconStrategy
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UManualIconStrategy : public UBasePerkIconStrategy
{
public:
	unsigned char                                      UnknownData_IEX6[0x8];                                     // 0x0030(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ManualIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.MapActorComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UMapActorComponent : public UActorComponent
{
public:
	DeadByDaylight_EMapActorCategory                   Category;                                                  // 0x00B8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_DL3D[0x7];                                     // 0x00B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         _mapActorCollider;                                         // 0x00C0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_S2T5[0x18];                                    // 0x00C8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _detectionEnabled;                                         // 0x00E0(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_5I6L[0x7];                                     // 0x00E1(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MapActorComponent");
		return ptr;
	}



	void Multicast_SetDetectionEnabled(bool Enabled);
	bool IsKnownBy(class ADBDPlayer* Character);
	bool GetDetectionEnabled();
};

// Class DeadByDaylight.MapActorDB
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UMapActorDB : public UObject
{
public:
	unsigned char                                      UnknownData_XLB9[0x50];                                    // 0x0030(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MapActorDB");
		return ptr;
	}



	TArray<class AActor*> GetUniqueRandom(TArray<DeadByDaylight_EMapActorCategory> Categories, int count);
	class AActor* GetRandom(DeadByDaylight_EMapActorCategory Category);
	TArray<DeadByDaylight_EMapActorCategory> CopyListMinusCategories(TArray<DeadByDaylight_EMapActorCategory> Categories, TArray<DeadByDaylight_EMapActorCategory> categoriesToRemove);
};

// Class DeadByDaylight.MapActorDetectorComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UMapActorDetectorComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnActorDetected;                                           // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<DeadByDaylight_EMapActorCategory>           CollectedCategories;                                       // 0x00C8(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPrimitiveComponent*                         _primitive;                                                // 0x00D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MapActorDetectorComponent");
		return ptr;
	}



	void SetDetectionPrimitive(class UPrimitiveComponent* Primitive);
	void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class DeadByDaylight.MapData
// 0x00A8 (FullSize[0x00E0] - InheritedSize[0x0038])
class UMapData : public UDataAsset
{
public:
	struct FName                                       ThemeName;                                                 // 0x0038(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       ThemeWeather;                                              // 0x0044(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AudioStateThemes;                                          // 0x0050(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AudioStateWeather;                                         // 0x005C(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       AudioThemeEvent;                                           // 0x0068(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5T47[0x4];                                     // 0x0074(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      AudioThemeSoundBank[0x30];                                 // 0x0074(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	int                                                MapWidth;                                                  // 0x00A8(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MapHeight;                                                 // 0x00AC(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Draft;                                                     // 0x00B0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_WX02[0x7];                                     // 0x00B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTileProperties>                     MapTileProperties;                                         // 0x00B8(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UBlackboardData*                             Blackboard;                                                // 0x00C8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               Gesture;                                                   // 0x00D0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OT2S[0x7];                                     // 0x00D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProceduralGenerationData*                   _proceduralGenerationData;                                 // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MapData");
		return ptr;
	}



};

// Class DeadByDaylight.MatchHandler
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UMatchHandler : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MatchHandler");
		return ptr;
	}



};

// Class DeadByDaylight.MatchManagementScreen
// 0x00C0 (FullSize[0x01E0] - InheritedSize[0x0120])
class UMatchManagementScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_TQ16[0xC0];                                    // 0x0120(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MatchManagementScreen");
		return ptr;
	}



	void OnRemoveMap(const struct FString& MapId);
	void OnPerksSettingsChange(int value);
	void OnOfferingsSettingsChange(int value);
	void OnItemsAndAddonsSettingsChange(int value);
	void OnBackButtonClick();
	void OnApplyChangesClicked();
	void OnAllowDlcSettingsClick();
	void OnAddMap(const struct FString& MapId);
};

// Class DeadByDaylight.MaterialPerThemeData
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UMaterialPerThemeData : public UDataAsset
{
public:
	TMap<class UMaterialInstance*, class UMaterialInstance*> _materialMap;                                              // 0x0038(0x0050) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MaterialPerThemeData");
		return ptr;
	}



};

// Class DeadByDaylight.MaterialPerThemeSettings
// 0x0058 (FullSize[0x0090] - InheritedSize[0x0038])
class UMaterialPerThemeSettings : public UDataAsset
{
public:
	TMap<struct FName, class UMaterialPerThemeData*>   _themeMap;                                                 // 0x0038(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UMaterialPerThemeData*                       _data;                                                     // 0x0088(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MaterialPerThemeSettings");
		return ptr;
	}



};

// Class DeadByDaylight.MeatHook
// 0x0238 (FullSize[0x0560] - InheritedSize[0x0328])
class AMeatHook : public AInteractable
{
public:
	unsigned char                                      UnknownData_BS9L[0x20];                                    // 0x0328(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               IsSurvivorStruggling;                                      // 0x0348(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               WasSurvivorStruggleCancelled;                              // 0x0349(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsSacrificeEnabled;                                        // 0x034A(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_N8Y9[0x1];                                     // 0x034B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     AIInteractionOffset;                                       // 0x034C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UDBDClipRegionComponent*>             ClipRegions;                                               // 0x0358(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsInBasement;                                              // 0x0368(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsBreakable;                                               // 0x0369(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsSabotageable;                                            // 0x036A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_VILT[0x1];                                     // 0x036B(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                HookIdentityTag;                                           // 0x036C(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               SnapHookedCharacter;                                       // 0x0378(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               FullyHooked;                                               // 0x0379(0x0001) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EDBC[0x6];                                     // 0x037A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTimer                                   YawAdjustTimer;                                            // 0x0380(0x0028) (Edit, BlueprintVisible, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	float                                              HookYaw;                                                   // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TargetHookYaw;                                             // 0x03AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _struggleThreshold;                                        // 0x03B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7FY9[0x4];                                     // 0x03B4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterPusherComponent*                   _characterPusher;                                          // 0x03B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCapsuleComponent*                           _slasherCollisionBlocker;                                  // 0x03C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPollableEventListener*                      _eventListener;                                            // 0x03C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACamperPlayer*                               _hookedSurvivor;                                           // 0x03D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                                  _hookBreakerPlayer;                                        // 0x03D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_947H[0x80];                                    // 0x03E0(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _campersThatSabotagedMeatHook[0x50];                       // 0x03E0(0x0050) UNKNOWN PROPERTY: SetProperty
	class UInteractor*                                 _mainInteractor;                                           // 0x04B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _meatHookEffect;                                           // 0x04B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableInteractionDefinition*            _unhook;                                                   // 0x04C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _camperHookedSnapTransform;                                // 0x04C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AEntity*                                     _entity;                                                   // 0x04D0(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8COT[0x14];                                    // 0x04D8(0x0014) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _preventDrainProgression;                                  // 0x04EC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SMFC[0x3];                                     // 0x04ED(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                               // 0x04F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                                  _interactingPlayer;                                        // 0x04F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _initialized;                                              // 0x0500(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F7H5[0x7];                                     // 0x0501(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMapActorComponent*                          _cachedMapActor;                                           // 0x0508(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TQEU[0x50];                                    // 0x0510(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MeatHook");
		return ptr;
	}



	void UpdateSlasherBlockerCollision();
	void SetTargetHookLookAt(const struct FVector& lookAt, float Time);
	void SetMeatHookInitilized(bool value);
	void SetMapActor(class UMapActorComponent* value);
	void SetIsBeingSabotaged(bool isBeingSabotaged);
	void SetInteractingPlayer(class ADBDPlayer* interactingPlayer);
	void SetEntity(class AEntity* Entity);
	void ResetTargetHookYaw(float Time);
	void OnTickStruggle(float DeltaTime);
	void OnStruggleSkillCheckFailed_Cosmetic();
	void OnStruggleExit();
	void OnStruggleEnter();
	void OnStopPushingPlayer(class ACharacter* Character);
	void OnStartPushingPlayer(class ACharacter* Character);
	void OnSacrificeOut();
	void OnSacrificeIn();
	void OnReactionIn();
	void OnReaction();
	void OnHookingExit();
	void OnHookingEnter();
	void OnHookedSurvivorChanged(class ACamperPlayer* before, class ACamperPlayer* after);
	void OnHookedSurvivorAttacked();
	void OnHookedIdle();
	void OnHookedExit();
	void OnHookedEnter();
	void OnAutoRepair();
	void Multicast_SetIsSacrificed(bool IsSacrificed);
	void Multicast_SetIsSabotaged(bool setIsSabotaged, class ADBDPlayer* hookBreaker, bool useCamperHookRespawnDurationModifiers, float overrideBaseHookRespawnDuration);
	void Multicast_SetIsBrokenFromUnhook(bool setIsBrokendFromUnhook, class ADBDPlayer* hookBreaker, float overrideBaseHookRespawnDuration);
	void Multicast_SetHookedSurvivor(class ACamperPlayer* survivor);
	void Multicast_RefreshCharmCustomization();
	void Multicast_EscapeAttemptResult(class ADBDPlayer* Player, bool Result);
	void Local_MoveSurvivorToHook(class ACamperPlayer* survivor, float Duration);
	void InitializeMeatHookIfPossible();
	void InitializeMeatHook();
	struct FAnimationMontageDescriptor GetUnhookOutMontageDescriptor();
	struct FAnimationMontageDescriptor GetUnhookInMontageDescriptor();
	class UChargeableInteractionDefinition* GetUnhookCID();
	float GetStruggleThreshold();
	float GetStrugglePercent();
	class ADBDPlayer* GetSaboteurPlayer();
	float GetSabotageHookRespawnDuration();
	class UMontagePlayer* GetMontagePlayer();
	class USceneComponent* GetMeatHookEffect();
	class UAkComponent* GetMeatHookAkAudioComponent();
	class UInteractor* GetMainInteractor();
	class USphereComponent* GetKickSlasherDetectionZone();
	bool GetIsSacrificed();
	bool GetIsSabotaged();
	bool GetIsInBasement();
	bool GetIsBroken();
	class UBoxComponent* GetInteractorZoneComponent();
	class UPrimitiveComponent* GetInteractorPrimitiveComponent();
	class ADBDPlayer* GetInteractingPlayer();
	class ACamperPlayer* GetHookedSurvivor();
	class UHookableComponent* GetHookableComponentOfHookedActor();
	class UCharacterPusherComponent* GetCharacterPusher();
	class USceneComponent* GetCamperUnkookFocalPointTransform();
	class USceneComponent* GetCamperHookedSnapTransform();
	void FireHookSoundEvent(const struct FName& NoiseRangeTunable, class ADBDPlayer* soundInstigator);
	void DebugHookedSurvivor(class ACamperPlayer* expectedSurvivor);
	void Cosmetic_SetAsScourgeHookStart();
	bool CanUnhookSurvivor(class ACamperPlayer* survivor);
	bool CanSurvivorStruggle(class ACamperPlayer* survivor);
	bool CanSurvivorAttemptEscape(class ACamperPlayer* survivor);
	bool CanHookSurvivor();
	bool CanBeSabotaged();
	void Authority_SignalUnhookingEnter();
	void Authority_SignalUnhookingCharged();
	void Authority_SignalUnhookingAborted();
	void Authority_SignalSurvivorAttemptingEscapeAborted();
	void Authority_SignalSurvivorAttemptingEscape();
	void Authority_SetIsSacrificed(bool IsSacrificed);
	void Authority_SetIsSabotaged(bool isSabotaged, class ADBDPlayer* Saboteur, bool useCamperHookRespawnDurationModifiers, float overrideBaseHookRespawnDuration);
	void Authority_SetIsBrokenFromUnhook(bool isBrokenFromUnhook, class ADBDPlayer* hookBreaker, float overrideBaseHookRespawnDuration);
	void Authority_SetHookedSurvivor(class ACamperPlayer* survivor);
	void Authority_SendOnUnhookAnalytics(class ADBDPlayer* rescuer);
};

// Class DeadByDaylight.MeatHookAnimInstance
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UMeatHookAnimInstance : public UAnimInstance
{
public:
	bool                                               IsBroken;                                                  // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5FSR[0x3];                                     // 0x0271(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Yaw;                                                       // 0x0274(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ADGI[0x8];                                     // 0x0278(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MeatHookAnimInstance");
		return ptr;
	}



};

// Class DeadByDaylight.MeatHookOutlineUpdateStrategy
// 0x0040 (FullSize[0x0170] - InheritedSize[0x0130])
class UMeatHookOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{
public:
	struct FLinearColor                                HookedOutlineColorSlasher;                                 // 0x0130(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                CarryingOutlineColorSlasher;                               // 0x0140(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                DefaultOutlineColorSlasher;                                // 0x0150(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                VisibleOutlineColorCamper;                                 // 0x0160(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MeatHookOutlineUpdateStrategy");
		return ptr;
	}



	void Local_AddBasementOfferingReveal();
	void Authority_AddBasementHookToPlayerMapItem();
};

// Class DeadByDaylight.MeatHookStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UMeatHookStateMachine : public UStateMachine
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MeatHookStateMachine");
		return ptr;
	}



};

// Class DeadByDaylight.MemoryTracker
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class AMemoryTracker : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MemoryTracker");
		return ptr;
	}



};

// Class DeadByDaylight.MenuAssetLibrary
// 0x0010 (FullSize[0x0130] - InheritedSize[0x0120])
class UMenuAssetLibrary : public UItemsAssetLibrary
{
public:
	unsigned char                                      UnknownData_O8RO[0x10];                                    // 0x0120(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MenuAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.MenuMeatHook
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class AMenuMeatHook : public AActor
{
public:
	unsigned char                                      UnknownData_6XFR[0x10];                                    // 0x0230(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharmSpawnerComponent*                      _charmSpawnerComponent;                                    // 0x0240(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GBK2[0x10];                                    // 0x0248(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MenuMeatHook");
		return ptr;
	}



	void OnCharmsUpdated(TArray<struct FCharmIdSlot> charmIDs);
	void BeginDestroySequence_Internal();
};

// Class DeadByDaylight.MenuUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UMenuUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MenuUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.MigrationSubsystem
// 0x0058 (FullSize[0x0090] - InheritedSize[0x0038])
class UMigrationSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_C39X[0x58];                                    // 0x0038(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MigrationSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.MobileProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UMobileProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MobileProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.MontagePlayer
// 0x0198 (FullSize[0x0250] - InheritedSize[0x00B8])
class UMontagePlayer : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnMontageStarted;                                          // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U8R3[0x48];                                    // 0x00C8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnMontageEnded;                                            // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QTXR[0x60];                                    // 0x0120(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDataTable*                                  _animationMappingsTable;                                   // 0x0180(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDataTable*                                  _playerSpecificMappingsTable;                              // 0x0188(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAnimMontage*                                _currentlyPlayingMontage;                                  // 0x0190(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6Q6W[0x18];                                    // 0x0198(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FMontageInstanceInfo>                _activeMontagesInfo;                                       // 0x01B0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _outSectionName;                                           // 0x01C0(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timeBeforeOut;                                            // 0x01CC(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                      _skeletalMeshComponent;                                    // 0x01D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C6A3[0x28];                                    // 0x01D8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class UAnimMontage*, struct FName>            _montageToNameMap;                                         // 0x0200(0x0050) (Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MontagePlayer");
		return ptr;
	}



	void Stop(float BlendOutTime);
	void SignalAnimInstanceChanged();
	void SetSkeletalMesh(class USkeletalMeshComponent* SkeletalMeshComponent);
	void SetPlayRate(float PlayRate);
	class UAnimMontage* PlayLoopForDuration(const struct FAnimationMontageDescriptor& animMontageID, float Duration, float PlayRate, const struct FName& Out);
	class UAnimMontage* Play(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower);
	void OnMontageEndedInternal(const struct FGuid& Guid, class UAnimMontage* Montage, bool interrupted);
	void OnMontageBlendingOutInternal(const struct FGuid& Guid, class UAnimMontage* Montage, bool interrupted);
	void JumpToSectionEnd(const struct FName& sectionName);
	void JumpToSection(const struct FName& sectionName);
	bool IsPlayingAnyMontage();
	bool IsPlaying(const struct FAnimationMontageDescriptor& montageDescriptor);
	class UAnimInstance* GetAnimInstance();
};

// Class DeadByDaylight.MoriableComponent
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UMoriableComponent : public UActorComponent
{
public:
	TArray<class UInteractionDefinition*>              _moriInteractions;                                         // 0x00B8(0x0010) (ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NU38[0x8];                                     // 0x00C8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MoriableComponent");
		return ptr;
	}



	void OnRep_MoriInteractions();
	void OnMoriUpdateStart();
	void OnMoriFinished();
};

// Class DeadByDaylight.MoriComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UMoriComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_FMAW[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UClass*>                              _moriInteractionClasses;                                   // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MoriComponent");
		return ptr;
	}



	void OnMoriUpdateStart();
	void OnMoriFinished();
	void OnMoriChargeCompleted();
};

// Class DeadByDaylight.MovementModifierActor
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class AMovementModifierActor : public AActor
{
public:
	float                                              MaxSpeedMultiplier;                                        // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_O35W[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MovementModifierActor");
		return ptr;
	}



};

// Class DeadByDaylight.MysteryBoxPopupScreenUMG
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UMysteryBoxPopupScreenUMG : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MysteryBoxPopupScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.NatAudioAmbienceBox
// 0x0010 (FullSize[0x0460] - InheritedSize[0x0450])
class UNatAudioAmbienceBox : public UAmbienceBoxComponent
{
public:
	class UAkAudioEvent*                               _onBeginOverlapAudioEvent;                                 // 0x0450(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               _onEndOverlapAudioEvent;                                   // 0x0458(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NatAudioAmbienceBox");
		return ptr;
	}



	void OnEndOverlapAudioAmbience(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginOverlapAudioAmbience(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

// Class DeadByDaylight.UMGQueueStatusIconWidget
// 0x0038 (FullSize[0x0338] - InheritedSize[0x0300])
class UUMGQueueStatusIconWidget : public UMobileBaseUserWidget
{
public:
	class UImage*                                      statusIndicator;                                           // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                AcceptableColor;                                           // 0x0308(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                ModerateColor;                                             // 0x0318(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                LongColor;                                                 // 0x0328(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGQueueStatusIconWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGRankBanner
// 0x0038 (FullSize[0x0338] - InheritedSize[0x0300])
class UUMGRankBanner : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_IR4D[0x8];                                     // 0x0300(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGTallyRankFrame*                          RankFrameWidget;                                           // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     TooltipButton;                                             // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      HighlightImage;                                            // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               OnLongPressSound;                                          // 0x0320(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    _onLongPressRankTooltipEvent;                              // 0x0328(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRankBanner");
		return ptr;
	}



	void StopHighlight();
	void StartHighlight();
	void SetData(int Rank, DBDSharedTypes_EPlayerRole PlayerRole);
	void HandleTooltipLongPressedEvent();
};

// Class DeadByDaylight.UMGReceivedFriendRequestListElement
// 0x0008 (FullSize[0x03C8] - InheritedSize[0x03C0])
class UUMGReceivedFriendRequestListElement : public UUMGBaseFriendListElement
{
public:
	class URichTextBlock*                              FriendRequestStatusRichText;                               // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGReceivedFriendRequestListElement");
		return ptr;
	}



};

// Class DeadByDaylight.UMGRefundDataWidget
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UUMGRefundDataWidget : public UMobileBaseUserWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRefundDataWidget");
		return ptr;
	}



	void SetDataAndUpdateWidget(const struct FRefundUIData& RefundUIData);
};

// Class DeadByDaylight.UMGRefundPopup
// 0x0038 (FullSize[0x0420] - InheritedSize[0x03E8])
class UUMGRefundPopup : public UUMGGenericPopup
{
public:
	class UVerticalBox*                                RefundDataContainer;                                       // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      RefundDataWidgetClass[0x30];                               // 0x03F0(0x0030) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRefundPopup");
		return ptr;
	}



};

// Class DeadByDaylight.CustomizationDescription
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UCustomizationDescription : public UDataAsset
{
public:
	TArray<struct FCustomizedMeshPart>                 Parts;                                                     // 0x0038(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CustomizationDescription");
		return ptr;
	}



};

// Class DeadByDaylight.CustomizationHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCustomizationHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CustomizationHelper");
		return ptr;
	}



};

// Class DeadByDaylight.CustomizedAnimationComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UCustomizedAnimationComponent : public UActorComponent
{
public:
	class ADBDBasePlayer*                              _owner;                                                    // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCustomizedSkeletalMesh*                     _customizedSkeletalMesh;                                   // 0x00C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _defaultAnimClass;                                         // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OS9R[0x8];                                     // 0x00D0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CustomizedAnimationComponent");
		return ptr;
	}



	void OnCustomizationChanged();
};

// Class DeadByDaylight.CustomizedAudioComponent
// 0x0130 (FullSize[0x01E8] - InheritedSize[0x00B8])
class UCustomizedAudioComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnCustomizedAudioSwitchStateChanged;                       // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U82A[0xA0];                                    // 0x00C8(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     AudioCharacterNameDefaultSwitchState;                      // 0x0168(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterSubNameDefaultSwitchState;                   // 0x0178(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterHeadDefaultSwitchState;                      // 0x0188(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterClothesDefaultSwitchState;                   // 0x0198(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterShoesDefaultSwitchState;                     // 0x01A8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterWeaponDefaultSwitchState;                    // 0x01B8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterAmbianceDefaultSwitchState;                  // 0x01C8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     AudioCharacterStateDefaultSwitchState;                     // 0x01D8(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CustomizedAudioComponent");
		return ptr;
	}



	struct FString GetAudioSwitchState(DeadByDaylight_EAudioCustomizationCategory audioCustomizationCategory);
};

// Class DeadByDaylight.CustomizedSkeletalMesh
// 0x0210 (FullSize[0x02C8] - InheritedSize[0x00B8])
class UCustomizedSkeletalMesh : public UActorComponent
{
public:
	class UClass*                                      SlaveAnimInstanceClass;                                    // 0x00B8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnMeshSwitchBP;                                            // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9JEF[0x30];                                    // 0x00D0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkinnedMeshComponent*                       _meshOwner;                                                // 0x0100(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_UNLT[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _ignoredItemCategories[0x50];                              // 0x0108(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<class USkeletalMeshComponent*>              Components;                                                // 0x0160(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<DeadByDaylight_ECustomizationCategory, class USkeletalMeshComponent*> _categoryToComponents;                                     // 0x0170(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<class USkeletalMeshComponent*>              Slaves;                                                    // 0x01C0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<DeadByDaylight_ECustomizationCategory, class AItemVfx*> _itemVfxs;                                                 // 0x01D0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JCLN[0xA0];                                    // 0x0220(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _characterIdOverride;                                      // 0x02C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K9DG[0x4];                                     // 0x02C4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CustomizedSkeletalMesh");
		return ptr;
	}



	void SetVfxsVisibility(DeadByDaylight_ECustomizationCategory Category, bool visible);
	void SetMeshVisibility(bool visible);
	void SetMeshOwner(class USkinnedMeshComponent* Mesh);
	void SetCastShadow(bool CastShadow);
	void SetAllVfxsVisibility(bool visible);
	void OnMeshSwitchEventBP__DelegateSignature(DeadByDaylight_ECustomizationCategory Category, class USkeletalMeshComponent* Mesh);
	class USkeletalMeshComponent* GetSkeletalMesh(DeadByDaylight_ECustomizationCategory Category);
	class USkinnedMeshComponent* GetMeshOwner();
	TArray<struct FName> GetCurrentCustomizationItems();
	TArray<class USkeletalMeshComponent*> GetComponents();
	void CopyCustomization(class UCustomizedSkeletalMesh* copyFrom);
	bool Contains(TArray<struct FName> ItemIDs);
	void ClearAllVfxs();
};

// Class DeadByDaylight.CustomWidgetWrapperInitializer
// 0x0010 (FullSize[0x0270] - InheritedSize[0x0260])
class UCustomWidgetWrapperInitializer : public UUserWidget
{
public:
	class UCustomWidgetWrapper*                        ListeningWrapper;                                          // 0x0260(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7DK0[0x8];                                     // 0x0268(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CustomWidgetWrapperInitializer");
		return ptr;
	}



};

// Class DeadByDaylight.FirecrackerEffectHandlerComponent
// 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
class UFirecrackerEffectHandlerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnFirecrackerInRangeBegin;                                 // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFirecrackerInRangeUpdate;                                // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFirecrackerInRangeEnd;                                   // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	TArray<struct FFirecrackerEffectData>              _effectDataList;                                           // 0x00E8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FirecrackerEffectHandlerComponent");
		return ptr;
	}



	void SetFirecrackerInRange(class AFirecracker* Firecracker, bool InRange);
	void OnFirecrackerDestroyed(class AActor* DestroyedActor);
};

// Class DeadByDaylight.Firecracker
// 0x0040 (FullSize[0x0368] - InheritedSize[0x0328])
class AFirecracker : public AInteractable
{
public:
	class USphereComponent*                            _effectArea;                                               // 0x0328(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               DebugDisplayEnabled;                                       // 0x0330(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MKPL[0x7];                                     // 0x0331(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UGameplayModifierContainer*>          _effectModifiers;                                          // 0x0338(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ADBDPlayer*                                  _playerOwner;                                              // 0x0348(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _exploded;                                                 // 0x0350(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P97C[0x7];                                     // 0x0351(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class AActor*>                              _actorsInRange;                                            // 0x0358(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Firecracker");
		return ptr;
	}



	bool ShouldDeafen(class ADBDPlayer* Player, float* outDuration);
	bool ShouldBlind(class ADBDPlayer* Player, float* outDuration);
	void OnFuseBurnUpdate(float DeltaSeconds, float fuseTimeLeftPercent);
	void OnFuseBurnExit();
	void OnFuseBurnEnter();
	void OnExplode();
	void OnEffectsInitialized();
	void Multicast_InitFromSpawner(class ACollectable* spawner);
	bool HasModifierOfType(const struct FGameplayTag& Type);
	bool HasFlag(const struct FGameplayTag& flag);
	float GetModifierValue(const struct FGameplayTag& Type);
	float GetExplosionRange();
	float GetExplosionEffectDuration();
	float GetExplosionDelay();
	bool GetExploded();
	TArray<class UGameplayModifierContainer*> GetEffects();
	float GetDeafnessEffectDuration(class ADBDPlayer* Player);
	float GetBlindnessEffectDuration(class AActor* Player);
};

// Class DeadByDaylight.FirecrackerFromEffect
// 0x0008 (FullSize[0x0370] - InheritedSize[0x0368])
class AFirecrackerFromEffect : public AFirecracker
{
public:
	unsigned char                                      UnknownData_54PO[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FirecrackerFromEffect");
		return ptr;
	}



	void Multicast_InitFromEffect(class ADBDPlayer* Player, class AGenerator* trapedGenerator);
};

// Class DeadByDaylight.FirecrackerStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class UFirecrackerStateMachine : public UStateMachine
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FirecrackerStateMachine");
		return ptr;
	}



};

// Class DeadByDaylight.FirstPersonViewComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UFirstPersonViewComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_Z1FI[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FirstPersonViewComponent");
		return ptr;
	}



};

// Class DeadByDaylight.FleeComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UFleeComponent : public UActorComponent
{
public:
	class AActor*                                      _threat;                                                   // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IAXV[0x18];                                    // 0x00C0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FleeComponent");
		return ptr;
	}



};

// Class DeadByDaylight.FlickeringLight
// 0x03A8 (FullSize[0x0600] - InheritedSize[0x0258])
class AFlickeringLight : public AGeneratorDrivenActor
{
public:
	DeadByDaylight_EFlickeringLightType                _lightComponentType;                                       // 0x0258(0x0001) ELEMENT_SIZE_MISMATCH (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_USMC[0x3];                                     // 0x0258(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	TEnumAsByte<Engine_EDetailMode>                    _detailLevelBeforeCastShadows;                             // 0x025C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FPerPlatformBool                            _castShadow;                                               // 0x025D(0x0001) (NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UUHR[0x2];                                     // 0x025E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FBHVRPerDetailModeBool                      _isCastingShadow;                                          // 0x0260(0x00A0) (Edit, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeFloat                     _maxDrawDistance;                                          // 0x0300(0x00A0) (Edit, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeFloat                     _maxDistanceFadeRange;                                     // 0x03A0(0x00A0) (Edit, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeBool                      _castCinematicShadowsOnly;                                 // 0x0440(0x00A0) (Edit, NativeAccessSpecifierPrivate)
	float                                              _innerConneAngle;                                          // 0x04E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _outerConneAngle;                                          // 0x04E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sourceLength;                                             // 0x04E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sourceRadius;                                             // 0x04EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _intensity;                                                // 0x04F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _generatorActivated;                                       // 0x04F4(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isTimelineSpeedRandom;                                    // 0x04F5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YBFK[0x2];                                     // 0x04F6(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maximumTimelimeSpeed;                                     // 0x04F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minimumTimelimeSpeed;                                     // 0x04FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeBool                      _secondaryLightVisibility;                                 // 0x0500(0x00A0) (Edit, NativeAccessSpecifierPrivate)
	float                                              _secondaryLightIntensity;                                  // 0x05A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FVector                                     _secondaryLightTransform;                                  // 0x05A4(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FRotator                                    _secondaryLightRotation;                                   // 0x05B0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	float                                              _secondaryLightAttenuationRadius;                          // 0x05BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _secondaryLightColor;                                      // 0x05C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _secondaryLightSpecularScale;                              // 0x05D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6KD4[0x4];                                     // 0x05D4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULightIntensityTimelineComponent*            _lightIntensityTimeline;                                   // 0x05D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPointLightComponent*                        _pointLightComponent;                                      // 0x05E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPointLightComponent*                        _secondaryPointLightComponent;                             // 0x05E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URectLightComponent*                         _rectLightComponent;                                       // 0x05F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USpotLightComponent*                         _spotLightComponent;                                       // 0x05F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FlickeringLight");
		return ptr;
	}



	void StopFlickering();
	void StartFlickering();
	void Init();
	class ULocalLightComponent* GetActiveLightComponent();
};

// Class DeadByDaylight.FoliageActor
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class AFoliageActor : public AActor
{
public:
	class UFoliageDensityHISM*                         _foliageHISM;                                              // 0x0230(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FoliageActor");
		return ptr;
	}



};

// Class DeadByDaylight.FoliageDensityContainer
// 0x00F8 (FullSize[0x0328] - InheritedSize[0x0230])
class AFoliageDensityContainer : public AActor
{
public:
	TMap<struct FName, class AFoliageActor*>           _foliageActors;                                            // 0x0230(0x0050) (NativeAccessSpecifierPrivate)
	TMap<struct FName, class UFoliageDensityHISM*>     _foliageHISMs;                                             // 0x0280(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S1CM[0x50];                                    // 0x02D0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDMapFoliageDensityTunables*               _mapFoliageDensityTunables;                                // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FoliageDensityContainer");
		return ptr;
	}



};

// Class DeadByDaylight.FoliageDensityHISM
// 0x0008 (FullSize[0x0690] - InheritedSize[0x0688])
class UFoliageDensityHISM : public UHierarchicalInstancedStaticMeshComponent
{
public:
	unsigned char                                      UnknownData_IMSC[0x8];                                     // 0x0688(0x0008) Fix Super Size


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FoliageDensityHISM");
		return ptr;
	}



};

// Class DeadByDaylight.FootSteps
// 0x0328 (FullSize[0x0558] - InheritedSize[0x0230])
class AFootSteps : public AActor
{
public:
	unsigned char                                      UnknownData_XIXP[0x4];                                     // 0x0230(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _raycastHalfAngle;                                         // 0x0234(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _raycastZOffset;                                           // 0x0238(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _raycastDistance;                                          // 0x023C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterial*                                   _material;                                                 // 0x0240(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _minimumDecalSize;                                         // 0x0248(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maximumDecalSize;                                         // 0x024C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _projectionTickness;                                       // 0x0250(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _visibilityMultiplierInterpSpeed;                          // 0x0254(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _fadeCurve;                                                // 0x0258(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _veinsCurve;                                               // 0x0260(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeInt                       _decalPoolSize;                                            // 0x0268(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeFloat                     _recycleThresholdPercentage;                               // 0x0308(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeFloat                     _recycleDistancePercentage;                                // 0x03A8(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FBHVRPerDetailModeInt                       _maxOverlapping;                                           // 0x0448(0x00A0) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	TMap<class UDBDDecalComponent*, struct FFootStep>  _footSteps;                                                // 0x04E8(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UDecalSpawner*                               _decalSpawner;                                             // 0x0538(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S560[0x18];                                    // 0x0540(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FootSteps");
		return ptr;
	}



	void OnLoudNoiseTriggered(class AActor* originator, class AActor* instigatingActor, const struct FVector& Location, bool shouldTrack, float* audibleRange, bool isQuickAction);
};

// Class DeadByDaylight.FXWidget
// 0x0058 (FullSize[0x02B8] - InheritedSize[0x0260])
class UFXWidget : public UUserWidget
{
public:
	class UNiagaraSystem*                              _niagaraSystem;                                            // 0x0260(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MN3L[0x10];                                    // 0x0268(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFXWidgetPlayer                             _particlePlayer;                                           // 0x0278(0x0010) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QDIM[0x30];                                    // 0x0288(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FXWidget");
		return ptr;
	}



	void StopParticle();
	void PlayParticle(float StartAtTime, int NumLoopsToPlay);
	class UNiagaraComponent* GetNiagaraFX();
};

// Class DeadByDaylight.GachaCrateManager
// 0x00A0 (FullSize[0x00D8] - InheritedSize[0x0038])
class UGachaCrateManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_TATQ[0xA0];                                    // 0x0038(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GachaCrateManager");
		return ptr;
	}



};

// Class DeadByDaylight.GameAssetLibrary
// 0x0018 (FullSize[0x00C8] - InheritedSize[0x00B0])
class UGameAssetLibrary : public UAssetLibrary
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HOW6[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.OngoingGameEvent
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class UOngoingGameEvent : public UObject
{
public:
	struct FGameEventData                              _eventData;                                                // 0x0030(0x0028) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N04O[0x48];                                    // 0x0058(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.OngoingGameEvent");
		return ptr;
	}



};

// Class DeadByDaylight.GameEventDispatcher
// 0x00B0 (FullSize[0x00E8] - InheritedSize[0x0038])
class UGameEventDispatcher : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_SZGT[0x50];                                    // 0x0038(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UOngoingGameEvent*>                   _ongoingEvents;                                            // 0x0088(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_93KM[0x50];                                    // 0x0098(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameEventDispatcher");
		return ptr;
	}



	void UnregisterListener(const struct FGameEventDispatcherHandleBP& GameEventDispatcherHandle);
	void RemotelyDispatch(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void RegisterListener(const struct FGameEventDispatcherHandleBP& GameEventDispatcherHandle);
	void LocallyDispatch(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Authority_RemotelyDispatch(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Authority_AccumulateOngoingGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData, float OngoingWaitTime);
};

// Class DeadByDaylight.GameEventListenerCollectionComponent
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UGameEventListenerCollectionComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_4NZK[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameEventListenerCollectionComponent");
		return ptr;
	}



	void UnlistenToGameEvent(const struct FGameplayTag& EventType);
	void UnlistenToAllGameEvents();
	void ListenToGameEvent(const struct FGameplayTag& EventType, const struct FScriptDelegate& delegateToBind);
	void AttachGameEventDispatcher(class UGameEventDispatcher* GameEventDispatcher);
};

// Class DeadByDaylight.GameEventTracker
// 0x0038 (FullSize[0x0068] - InheritedSize[0x0030])
class UGameEventTracker : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnGameplayEvent;                                           // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGameflowEvent;                                           // 0x0040(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NSVG[0x18];                                    // 0x0050(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameEventTracker");
		return ptr;
	}



	void FireGameflowEvent(DeadByDaylight_EDBDScoreTypes EventType, float amount, class ADBDPlayerState* Instigator, const struct FName& Data);
	void FireGameEvent(DeadByDaylight_EDBDScoreTypes EventType, float amount, class AActor* Instigator, class AActor* Target);
};

// Class DeadByDaylight.GameFlowContextSystem
// 0x00E0 (FullSize[0x0118] - InheritedSize[0x0038])
class UGameFlowContextSystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_Z67O[0xC8];                                    // 0x0038(0x00C8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class URootMovie*                                  m_RootMovie;                                               // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RTD5[0x10];                                    // 0x0108(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameFlowContextSystem");
		return ptr;
	}



};

// Class DeadByDaylight.GameplayModifierFunctionLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UGameplayModifierFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameplayModifierFunctionLibrary");
		return ptr;
	}



	void STATIC_Authority_SetPlayerGameplayModifier(class ADBDPlayer* TargetPlayer, const struct FGameplayTag& modifierType, float ModifierValue);
	void STATIC_Authority_SetPlayerGameplayFlag(class ADBDPlayer* TargetPlayer, const struct FGameplayTag& flagType);
	void STATIC_Authority_ClearPlayerGameplayModifier(class ADBDPlayer* TargetPlayer, const struct FGameplayTag& modifierType);
	void STATIC_Authority_ClearPlayerGameplayFlag(class ADBDPlayer* TargetPlayer, const struct FGameplayTag& flagType);
	void STATIC_Authority_ClearAllPlayerGameplayModifiers(class ADBDPlayer* TargetPlayer);
	void STATIC_Authority_ClearAllPlayerGameplayFlags(class ADBDPlayer* TargetPlayer);
};

// Class DeadByDaylight.GameplayNotificationManager
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UGameplayNotificationManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData_VU5I[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameplayNotificationManager");
		return ptr;
	}



	void Multicast_FireGameplayNotification(class UGameplayModifierContainer* modifierContainer, bool addToHistory);
	void FireGameplayNotification(const struct FGameplayNotificationData& notificationData, bool addToHistory);
};

// Class DeadByDaylight.GameplayNotificationUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UGameplayNotificationUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GameplayNotificationUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.GateFactory
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class AGateFactory : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GateFactory");
		return ptr;
	}



	class AGate* GetGate(DeadByDaylight_EGateType GateType);
};

// Class DeadByDaylight.CoopRepairTracker
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UCoopRepairTracker : public UObject
{
public:
	TArray<class ADBDPlayer*>                          _coopRepairerHistory;                                      // 0x0030(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CoopRepairTracker");
		return ptr;
	}



	void SetHasEverCoopRepaired(class ADBDPlayer* Player);
	bool HasEverCoopRepaired(class ADBDPlayer* Player);
};

// Class DeadByDaylight.Generator
// 0x01E8 (FullSize[0x0510] - InheritedSize[0x0328])
class AGenerator : public AInteractable
{
public:
	unsigned char                                      UnknownData_LX0P[0x10];                                    // 0x0328(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               activated;                                                 // 0x0338(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsRepaired;                                                // 0x0339(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsASMCachePreWarm;                                         // 0x033A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsPlaySkillcheckAesthetic;                                 // 0x033B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ForceRevealToLocalPlayer;                                  // 0x033C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QFHM[0x3];                                     // 0x033D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCurveLinearColor*                           KillerOutlineFadeCurve;                                    // 0x0340(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              NativePercentComplete;                                     // 0x0348(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IDQO[0x4];                                     // 0x034C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnGeneratorRepaired;                                       // 0x0350(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnGeneratorRepairedBySurvivor;                             // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsDamagedChanged;                                        // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KLJN[0x30];                                    // 0x0380(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               FireLevelScoreEventOnFix;                                  // 0x03B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PBEC[0x7];                                     // 0x03B1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FTransform>              _activatedTopLightsTransformMap;                           // 0x03B8(0x0050) (Edit, BlueprintVisible, Protected, NativeAccessSpecifierProtected)
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                               // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NAXL[0x24];                                    // 0x0410(0x0024) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGameplayTag                                _repairSemanticTag;                                        // 0x0434(0x000C) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDamageData                                 _damageData;                                               // 0x0440(0x0020) (Net, Transient, RepNotify, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3DQF[0x4];                                     // 0x0460(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isBlocked;                                                // 0x0464(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isBlockedFromCharging;                                    // 0x0465(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8MF4[0x2];                                     // 0x0466(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _blockingSources[0x50];                                    // 0x0466(0x0050) UNKNOWN PROPERTY: SetProperty
	class UChargeableComponent*                        _generatorCharge;                                          // 0x04B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FPlayerFloatTuple>                   _playerStartTimes;                                         // 0x04C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CW5U[0x18];                                    // 0x04D0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isAutoCompleted;                                          // 0x04E8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EFJT[0x3];                                     // 0x04E9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _overchargeLevel;                                          // 0x04EC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCoopRepairTracker*                          _coopRepairTracker;                                        // 0x04F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NXPP[0x10];                                    // 0x04F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _VFX_LightDistanceDefault;                                 // 0x0508(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UHB7[0x4];                                     // 0x050C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Generator");
		return ptr;
	}



	void VFXClampTopActivationSingleLight(float Distance, const struct FName& ParameterName);
	void TriggerSkillCheckFailureLoudNoise(class ADBDPlayer* instigatingPlayer);
	void TriggerSkillCheck(class ADBDPlayer* instigatingPlayer);
	void SpawnBloodEffectToSocket(const struct FName& Name);
	bool ShouldDoOverchargeSkillcheck();
	void SetRepaired(bool showGeneratorCloneLoudNoise, bool isAutoCompleted);
	void SetOverchargeLevel(int overchargeLevel);
	void SetIsBlockedFromCharging(bool isBlockedFromCharging);
	void SetIsAutoCompleted(bool isAutoCompleted);
	void SetComplete(bool complete);
	void ResetGenerator();
	void RemovePlayerStartTime(class ADBDPlayer* Player);
	int PostAkEvent(class UAkAudioEvent* AkEvent, int CallbackMask, const struct FScriptDelegate& PostEventCallback, TArray<struct FAkExternalSourceInfo> ExternalSources, const struct FString& in_EventName);
	void PlayFailSparksFX(class ADBDPlayer* interactingPlayer, bool Explode);
	void OnUpdateChargeProgress(float newPercentComplete);
	void OnResetGenerator();
	void OnRepairedBP(bool showGeneratorCloneLoudNoise);
	void OnRep_IsBlocked();
	void OnRep_DamageData();
	void OnPreWarmASMCache();
	void OnEscapeDoorActivated();
	void OnDamageCosmetic(bool intense);
	void OnChargeChanged(class UChargeableComponent* ChargeableComponent, float percent);
	void OnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime);
	void OnCaptureProbeSecondState();
	void OnBlockingStatusChanged(bool IsBlocked);
	void NotifyRepairStart(class ADBDPlayer* Player);
	void NotifyRepairFinish(class ADBDPlayer* Player, class UInteractor* Interactor);
	void Multicast_PlayFailSparksFX(class ADBDPlayer* Player, bool Explode);
	void Multicast_OnRepaired(bool showGeneratorCloneLoudNoise, bool isAutoCompleted, int updatedRemainingGeneratorCount);
	void Multicast_DamageCosmetic(bool intense);
	bool IsRegressing();
	bool IsIntenseDamage();
	bool IsBlocked();
	bool IsBeingRepaired();
	bool IsBeingDamagedByKiller();
	class USkeletalMeshComponent* GetSkeletalMesh();
	float GetRepairPercentComplete();
	TArray<class ADBDPlayer*> GetRepairers();
	TArray<struct FPlayerFloatTuple> GetPlayerStartTimes();
	float GetPlayerStartTime(class ADBDPlayer* Player);
	DBDSharedTypes_ESkillCheckCustomType GetOverchargeSkillCheckToTrigger();
	int GetOverchargeLevel();
	bool GetIsBlockedFromCharging();
	bool GetIsAutoCompleted();
	class UChargeableComponent* GetGeneratorChargeComponent();
	float GetChargePercentComplete();
	void DisableInaccessibleInteractors();
	void ClearGeneratorOvercharge();
	bool CanSurvivorReactToBlockingEntity(class ACamperPlayer* survivor);
	void BroadcastIsDamagedChangedEvent(class ADBDPlayer* Player);
	void BroadcastGeneratorRepairedBySurvivor(class ADBDPlayer* repairingSurvivor);
	void Authority_RepairDamage(class ADBDPlayer* repairedBy);
	void Authority_RemoveBlockingSource(class UObject* Source);
	void Authority_OnChargeChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete);
	void Authority_OnChargeApplied(float individualChargeAmount, float totalChargeAmount, class AActor* chargeInstigator, bool wasCoop, float DeltaTime);
	bool Authority_HasRepairedDamage(class ADBDPlayer* Player);
	void Authority_Damage(class ADBDPlayer* damagedBy, float immediateRegressionPercent);
	void Authority_AddBlockingSource(class UObject* Source);
	void AddPlayerStartTime(class ADBDPlayer* Player, float StartTime);
	void ActivateTeleportGeneratorIndicator(bool Activate);
};

// Class DeadByDaylight.DBDGeneratorDrivenReflectionCaptureActor
// 0x0018 (FullSize[0x0270] - InheritedSize[0x0258])
class ADBDGeneratorDrivenReflectionCaptureActor : public AGeneratorDrivenActor
{
public:
	class UGenyReflectionCaptureComponent*             genyReflectionCapture;                                     // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_U65L[0x10];                                    // 0x0260(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGeneratorDrivenReflectionCaptureActor");
		return ptr;
	}



	void SwapToSecondState();
};

// Class DeadByDaylight.GeneratorEntity
// 0x0028 (FullSize[0x0258] - InheritedSize[0x0230])
class AGeneratorEntity : public AActor
{
public:
	class AGenerator*                                  _associatedGenerator;                                      // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMontagePlayer*                              _montagePlayer;                                            // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IUR8[0x18];                                    // 0x0240(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GeneratorEntity");
		return ptr;
	}



	void SetSkeletalMeshActive(bool Active);
	void SetAssociatedGenerator(class AGenerator* Generator);
	void PlayMontage(const struct FAnimationMontageDescriptor& animMontageID, float PlayRate, bool isFollower);
	class UMontagePlayer* GetMontagePlayer();
};

// Class DeadByDaylight.GeneratorEntityAnimInstance
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UGeneratorEntityAnimInstance : public UAnimInstance
{
public:
	bool                                               IsCorrupted;                                               // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsCorrupted_End;                                           // 0x0271(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsUncorrupted;                                             // 0x0272(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsUncorrupted_End;                                         // 0x0273(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LS7S[0xC];                                     // 0x0274(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GeneratorEntityAnimInstance");
		return ptr;
	}



};

// Class DeadByDaylight.GeneratorIndicatorWidget
// 0x0000 (FullSize[0x0348] - InheritedSize[0x0348])
class UGeneratorIndicatorWidget : public UBaseIndicatorWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GeneratorIndicatorWidget");
		return ptr;
	}



};

// Class DeadByDaylight.GeneratorOutlineUpdateStrategy
// 0x0038 (FullSize[0x0168] - InheritedSize[0x0130])
class UGeneratorOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _unrepairedAuraColor;                                      // 0x0130(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _fullyRepairedAuraColor;                                   // 0x0140(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y9LF[0x18];                                    // 0x0150(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GeneratorOutlineUpdateStrategy");
		return ptr;
	}



	struct FLinearColor GetYellowColor();
	struct FLinearColor GetWhiteColor();
};

// Class DeadByDaylight.GeneratorRepairWithGenericPerksEscapeAchievement
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UGeneratorRepairWithGenericPerksEscapeAchievement : public UActorComponent
{
public:
	unsigned char                                      UnknownData_VBLR[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GeneratorRepairWithGenericPerksEscapeAchievement");
		return ptr;
	}



};

// Class DeadByDaylight.GeneratorUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UGeneratorUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GeneratorUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.GenericTextInputPopupScreen
// 0x0018 (FullSize[0x0158] - InheritedSize[0x0140])
class UGenericTextInputPopupScreen : public UGenericPopupScreen
{
public:
	unsigned char                                      UnknownData_4VQ5[0x18];                                    // 0x0140(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GenericTextInputPopupScreen");
		return ptr;
	}



	void OnTextInputChoiceSelected(int selectedButtonType, const struct FString& inputText);
};

// Class DeadByDaylight.GenyReflectionCaptureComponent
// 0x0010 (FullSize[0x0220] - InheritedSize[0x0210])
class UGenyReflectionCaptureComponent : public USceneComponent
{
public:
	TArray<struct FReflectionCaptureTwoStates>         generatorDrivenReflectionCapture;                          // 0x0210(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GenyReflectionCaptureComponent");
		return ptr;
	}



};

// Class DeadByDaylight.GestureInteractionDefinition
// 0x0010 (FullSize[0x05C0] - InheritedSize[0x05B0])
class UGestureInteractionDefinition : public UInteractionDefinition
{
public:
	DeadByDaylight_EGestureID                          _gestureID;                                                // 0x05B0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZMRA[0xF];                                     // 0x05B1(0x000F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GestureInteractionDefinition");
		return ptr;
	}



};

// Class DeadByDaylight.GhostStalkedComponent
// 0x0140 (FullSize[0x01F8] - InheritedSize[0x00B8])
class UGhostStalkedComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnIsMarkedChanged;                                         // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsSpottingKillerChanged;                                 // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FTagStateBool                               _isMarked;                                                 // 0x00D8(0x0030) (Net, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U00H[0x8];                                     // 0x0108(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStatusEffect*                               _ghostKillerInstinctEffect;                                // 0x0110(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_IAEK[0x38];                                    // 0x0118(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _markTimer;                                                // 0x0150(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7W41[0x10];                                    // 0x0158(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASlasherPlayer*                              _killer;                                                   // 0x0168(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStalkedComponent*                           _stalkedComponent;                                         // 0x0170(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2C3J[0x80];                                    // 0x0178(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GhostStalkedComponent");
		return ptr;
	}



	void OnKillerStealthChanged(bool IsStealth);
	void OnIsSpottingKiller__DelegateSignature(bool isSpotting);
	void OnIsMarkedChanged__DelegateSignature(bool IsMarked);
	void OnCharacterSightChanged(class ACharacter* Character, class UCharacterSightComponent* sightComponent);
	void Local_OnSpotKiller();
	bool IsMarked();
	void Initialize(class ASlasherPlayer* killer);
	void Client_OnSpotKiller();
	void Authority_OnStalkedChargeFull(bool COMPLETED, TArray<class AActor*> instigatorsForCompletion);
};

// Class DeadByDaylight.GhostStalkPowerComponent
// 0x00A8 (FullSize[0x0160] - InheritedSize[0x00B8])
class UGhostStalkPowerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_TEK8[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStalkerComponent*                           _stalkerComponent;                                         // 0x00E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _ghostStalkedComponentClassPtr[0x30];                      // 0x00F0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	float                                              _crouchAttackRequiredTimeSeconds;                          // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WK1Z[0xC];                                     // 0x0124(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _debugMode;                                                // 0x0130(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XQ0P[0x2F];                                    // 0x0131(0x002F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GhostStalkPowerComponent");
		return ptr;
	}



	void RefreshSurvivorMaximumSightDistance();
	void OnLeanStateChanged(DBDSharedTypes_ELeanState leanState);
	void OnIsCrouchedChanged(bool isCrouched);
	void Authority_OnStalkModeChanged(bool IsInStalkMode);
};

// Class DeadByDaylight.GhostStealthComponent
// 0x0148 (FullSize[0x0200] - InheritedSize[0x00B8])
class UGhostStealthComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnSuccessfulAttackInStealth;                               // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnStealthStateChanged;                                     // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsStealthChanged;                                        // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnIsBeingSpotChanged;                                      // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    Local_OnStealthCancelledByPlayer;                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	DeadByDaylight_EGhostStealthState                  _stealthState;                                             // 0x0108(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WEN6[0x3F];                                    // 0x0109(0x003F) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _cooldownTimer;                                            // 0x0148(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ACharacter*, TWeakObjectPtr<class AScreenIndicatorWorldMarker>> _markers;                                                  // 0x0150(0x0050) (UObjectWrapper, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WWH9[0x10];                                    // 0x01A0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _markerMaxAngleOffset;                                     // 0x01B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useKillerInstinctWhenSpotted;                             // 0x01B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CT4B[0x3];                                     // 0x01B5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCharacterSightableComponent*                _sightableComponent;                                       // 0x01B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UStalkerComponent*                           _stalkerComponent;                                         // 0x01C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UOIY[0x38];                                    // 0x01C8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GhostStealthComponent");
		return ptr;
	}



	void SetRedStainVisibility(bool visible);
	void OnSuccessfulAttackInStealth__DelegateSignature(class ADBDPlayer* Target);
	void OnStealthStateChanged__DelegateSignature(DeadByDaylight_EGhostStealthState stealthState);
	void OnStealthCancelledByPlayer__DelegateSignature(class ADBDPlayer* Player);
	void OnRep_StealthState(DeadByDaylight_EGhostStealthState previousState);
	void OnIsStealthChanged__DelegateSignature(bool IsStealth);
	void OnIsBeingSpotChanged__DelegateSignature(bool isBeingSpot);
	void Multicast_BroadcastOnSuccessfulAttackInStealth(class ADBDPlayer* Target);
	bool IsStealthReadyToActivate();
	bool IsStealth();
	DeadByDaylight_EGhostStealthState GetStealthState();
	float GetStealthChargePercent();
	void Client_SpawnMarkerOnCharacter(class ACharacter* Character);
	void Client_OnPlayerSpottedKiller(class ADBDPlayer* Player);
	void Authority_TryActivateStealth();
};

// Class DeadByDaylight.DBDAITypes
// 0x0190 (FullSize[0x01C0] - InheritedSize[0x0030])
class UDBDAITypes : public UObject
{
public:
	struct FGameplayTag                                AISkills_Context_Service_Root;                             // 0x0030(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Task_Slasher_AttackTarget;                // 0x003C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Slasher_AttackTarget;             // 0x0048(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Task_Slasher_CrawlingTarget;              // 0x0054(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Slasher_CrawlingTarget;           // 0x0060(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Slasher_Investigate_NotInChase;   // 0x006C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Slasher_Investigate_InChase;      // 0x0078(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Slasher_Investigate_MoveAround;   // 0x0084(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Slasher_Patrol;                   // 0x0090(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Slasher_Patrol_MoveAround;        // 0x009C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Camper_Standing;                  // 0x00A8(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Camper_Flee_Run_InChase;          // 0x00B4(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Camper_Flee_Run_NotInChase;       // 0x00C0(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Camper_Patrol;                    // 0x00CC(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Camper_RescueCarriedFriend;       // 0x00D8(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Camper_RemoveTrap;                // 0x00E4(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Camper_Chained;                   // 0x00F0(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Camper_HelpOther;                 // 0x00FC(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Camper_GoalInTerror;              // 0x0108(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AISkills_Context_Service_Camper_Carried;                   // 0x0114(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AIBlackboard_InteractableWishList_FindSkill;               // 0x0120(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PointOfInterest_ActivatedDoor;                          // 0x012C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PointOfInterest_ActivatedDoor_Opened;                   // 0x0138(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PointOfInterest_BrokenGenerator;                        // 0x0144(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PointOfInterest_OccupiedMeatHook;                       // 0x0150(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PointOfInterest_HexTotem;                               // 0x015C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PinLocation_WarpStart;                                  // 0x0168(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PinLocation_WarpEnd;                                    // 0x0174(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PinLocation_EQS;                                        // 0x0180(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PinLocation_WishedObj;                                  // 0x018C(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PinLocation_GoTo;                                       // 0x0198(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PinObject_EQS;                                          // 0x01A4(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FGameplayTag                                AI_PinObject_WishedObj;                                    // 0x01B0(0x000C) (NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EBBT[0x4];                                     // 0x01BC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAITypes");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAtlantaBloodwebDefinition
// 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
class UDBDAtlantaBloodwebDefinition : public UObject
{
public:
	unsigned char                                      UnknownData_NB25[0x110];                                   // 0x0030(0x0110) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAtlantaBloodwebDefinition");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAtlantaDesignTunables
// 0x0810 (FullSize[0x0840] - InheritedSize[0x0030])
class UDBDAtlantaDesignTunables : public UObject
{
public:
	unsigned char                                      AtlantaStructuredDataClass[0x30];                          // 0x0030(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UDBDAtlantaStructuredData*                   AtlantaStructuredData;                                     // 0x0060(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CloseNoiseIndicatorTemplate[0x30];                         // 0x0068(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      ExitOpenedIndicatorTemplate[0x30];                         // 0x0098(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      GeneratorIndicatorTemplate[0x30];                          // 0x00C8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      HookedIndicatorTemplate[0x30];                             // 0x00F8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      KillerCuesIndicatorTemplate[0x30];                         // 0x0128(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      GlobalSoundIndicatorTemplate[0x30];                        // 0x0158(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      DirectionalTerrorRadiusIndicatorTemplate[0x30];            // 0x0188(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      LoudNoiseIndicatorTemplate[0x30];                          // 0x01B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      StealthBrokenIndicatorTemplate[0x30];                      // 0x01E8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      SafeZoneManagerTemplate[0x30];                             // 0x0218(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGRoleSelectionScreenClass[0x30];                         // 0x0248(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGAtlantaTutorialScreenClass[0x30];                       // 0x0278(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGNavigationScreenClass[0x30];                            // 0x02A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGInboxScreenClass[0x30];                                 // 0x02D8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      SharedAuthenticationComponent[0x30];                       // 0x0308(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGPanelScreenClass[0x30];                                 // 0x0338(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGLobbyScreenClass[0x30];                                 // 0x0368(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      AtlantaChaseVignetteStaticMesh[0x30];                      // 0x0398(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      AtlantaChaseVignetteMaterialInstance[0x30];                // 0x03C8(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UMGGenericPopupClass[0x30];                                // 0x03F8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGLevelUpPopupClass[0x30];                                // 0x0428(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGTutorialPopupClass[0x30];                               // 0x0458(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGTallyScreenClass[0x30];                                 // 0x0488(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGLoadingScreenWidgetClass[0x30];                         // 0x04B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGSplashScreenClass[0x30];                                // 0x04E8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGCommandDebugButtonClass[0x30];                          // 0x0518(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGAtlantaObjectiveClass[0x30];                            // 0x0548(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGStoreScreenClass[0x30];                                 // 0x0578(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGCustomizationScreenClass[0x30];                         // 0x05A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGOverlayMenuScreenClass[0x30];                           // 0x05D8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGPerkSelectionPopupClass[0x30];                          // 0x0608(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGBloodStoreMysteryBoxPopupClass[0x30];                   // 0x0638(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGRitualScreenClass[0x30];                                // 0x0668(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGLoadingWidgetClass[0x30];                               // 0x0698(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGCloseTooltipWidgetClass[0x30];                          // 0x06C8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGAtlantaFriendListScreen[0x30];                          // 0x06F8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGToastNotificationScreenClass[0x30];                     // 0x0728(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGAtlantaLegalMenuScreenClass[0x30];                      // 0x0758(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      RankDesignTunableClass[0x30];                              // 0x0788(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UMGStreamVideoWidgetClass[0x30];                           // 0x07B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FSoftObjectPath                             AtlantaTransitionLightEffectsScreen;                       // 0x07E8(0x0020) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDBDCurrencyConversionTunables*              CurrencyConversionTunables;                                // 0x0808(0x0008) (Edit, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MediaPlayerAsset[0x30];                                    // 0x0810(0x0030) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAtlantaDesignTunables");
		return ptr;
	}



};

// Class DeadByDaylight.DBDBaseInputHandler
// 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
class UDBDBaseInputHandler : public UObject
{
public:
	class APawn*                                       _pawn;                                                     // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpringArmComponent*                         _cameraBoom;                                               // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_95JK[0x98];                                    // 0x0040(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDBaseInputHandler");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAtlantaInputHandler
// 0x00E8 (FullSize[0x01C0] - InheritedSize[0x00D8])
class UDBDAtlantaInputHandler : public UDBDBaseInputHandler
{
public:
	unsigned char                                      UnknownData_F10Q[0xE8];                                    // 0x00D8(0x00E8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAtlantaInputHandler");
		return ptr;
	}



	void SetVirtualJoystickCenter(int controlIndex, const struct FVector2D& controlCenter);
	struct FVector2D GetVirtualJoystickVisualSize(int controlIndex);
	struct FVector2D GetVirtualJoystickVisualCenter(int controlIndex);
	struct FVector2D GetVirtualJoystickPosition(int controlIndex);
	struct FVector2D GetVirtualJoystickNormalizedOffset(int controlIndex);
};

// Class DeadByDaylight.AtlantaRitualEvaluatorBase
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAtlantaRitualEvaluatorBase : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaRitualEvaluatorBase");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaRitualEvaluatorInvalid
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAtlantaRitualEvaluatorInvalid : public UAtlantaRitualEvaluatorBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaRitualEvaluatorInvalid");
		return ptr;
	}



};

// Class DeadByDaylight.AtlantaRitualEvaluatorFullLoadout
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UAtlantaRitualEvaluatorFullLoadout : public UAtlantaRitualEvaluatorBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AtlantaRitualEvaluatorFullLoadout");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAtlantaStructuredData
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UDBDAtlantaStructuredData : public UObject
{
public:
	unsigned char                                      AtlantaHeartbeatActor[0x30];                               // 0x0030(0x0030) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAtlantaStructuredData");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAtlantaTutorialParameters
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UDBDAtlantaTutorialParameters : public UObject
{
public:
	float                                              SurvTutorial_WiggleChargeRateMultiplier;                   // 0x0030(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LVHT[0x4];                                     // 0x0034(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAtlantaTutorialParameters");
		return ptr;
	}



};

// Class DeadByDaylight.DBDAttackerComponent
// 0x00D0 (FullSize[0x0188] - InheritedSize[0x00B8])
class UDBDAttackerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnAttackStartDelegate;                                     // 0x00B8(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnAttackFinishDelegate;                                    // 0x00C8(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IZRW[0x28];                                    // 0x00D8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UDBDAttack*>                          _attacks;                                                  // 0x0100(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_62D8[0x10];                                    // 0x0110(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDAttack*                                  _requestedAttack;                                          // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDAttack*                                  _currentAttack;                                            // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ODZ8[0x48];                                    // 0x0130(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAttackDelegatePair>                 _attackHitDelegates;                                       // 0x0178(0x0010) (ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAttackerComponent");
		return ptr;
	}



	void Server_StoreAttack(DBDSharedTypes_EAttackType attackType);
	void OnAttackPhaseChangedDelegate__DelegateSignature(DBDSharedTypes_EAttackType attackType);
	void Multicast_StoreAttack(DBDSharedTypes_EAttackType attackType);
	void Local_RequestAttack(DBDSharedTypes_EAttackType attackType);
	bool IsAttackTransitionRequested(DBDSharedTypes_EAttackType attackType);
	bool IsAttacking();
	bool IsAnyAttackTransitionRequested();
};

// Class DeadByDaylight.DBDAttackUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDAttackUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAttackUtilities");
		return ptr;
	}



	DBDSharedTypes_EAttackType STATIC_GetCurrentAttackType(class AActor* Attacker);
	float STATIC_GetCurrentAttackSubstateRemainingTime(class AActor* Attacker);
};

// Class DeadByDaylight.DBDAudioUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDAudioUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAudioUtilities");
		return ptr;
	}



	void STATIC_DBD_PostUiEvent(class UAkAudioEvent* Event);
	class UObject* STATIC_DBD_LoadPersistentBankByAssetPtr();
	void STATIC_DBD_LoadPersistentBankAsync(class UAkAudioBank* Bank);
	void STATIC_DBD_LoadPersistentBank(class UAkAudioBank* Bank);
};

// Class DeadByDaylight.DBDAuthentication
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UDBDAuthentication : public UObject
{
public:
	TArray<struct FAuthenticationInfo>                 _localInfos;                                               // 0x0030(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FAuthenticationInfo>                 _remoteInfos;                                              // 0x0040(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDAuthentication");
		return ptr;
	}



};

// Class DeadByDaylight.HudScreen
// 0x0120 (FullSize[0x0240] - InheritedSize[0x0120])
class UHudScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_PF5A[0x120];                                   // 0x0120(0x0120) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HudScreen");
		return ptr;
	}



	void OnTutorialNotificationClosedByUserInput();
	void OnSpectatePlayerClick(const struct FString& Name);
	void OnSettingsClicked();
	void OnQuitGameButtonClick();
	void OnPreviousButtonClick();
	void OnPerkClicked(const struct FName& perkId, bool clickedOnPerkWidget);
	void OnNextButtonClick();
	void OnLeaveButtonClick();
	void OnCancelQuitGameButtonClick();
};

// Class DeadByDaylight.HudScreenCoreUMG
// 0x0608 (FullSize[0x0848] - InheritedSize[0x0240])
class UHudScreenCoreUMG : public UHudScreen
{
public:
	class UCoreHudRootWidget*                          _rootWidget;                                               // 0x0240(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q7FS[0x160];                                   // 0x0248(0x0160) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ATutorialsUtilities*                         _tutorialsUtilities;                                       // 0x03A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _playerStatusInterfaces[0x10];                             // 0x03B0(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FInteractionProgressViewData                _interactionProgressViewData;                              // 0x03C0(0x0068) (Transient, NativeAccessSpecifierPrivate)
	struct FItemBundleViewData                         _itemBundleViewData;                                       // 0x0428(0x0150) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4HPQ[0x50];                                    // 0x0578(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FPowerBundleViewData                        _powerBundleViewData;                                      // 0x05C8(0x0148) (Transient, NativeAccessSpecifierPrivate)
	TArray<struct FPlayerStatusViewData>               _playerStatusViewData;                                     // 0x0710(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RC9W[0x128];                                   // 0x0720(0x0128) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HudScreenCoreUMG");
		return ptr;
	}



	void OnTutorialHudFadeOutTriggered();
	void OnTutorialHudFadeInTriggered();
	void OnSpectateRightArrowClicked();
	void OnSpectateLeftArrowClicked();
	void OnSpectateLeaveButtonClicked();
	void OnNotifTutoConfirmButtonClicked();
	void OnHUDWidgetFadeOutCompleted();
	void OnHideStartSequenceCompleted();
};

// Class DeadByDaylight.HudScreenUMG
// 0x01D8 (FullSize[0x0418] - InheritedSize[0x0240])
class UHudScreenUMG : public UHudScreen
{
public:
	unsigned char                                      UnknownData_C3HT[0x8];                                     // 0x0240(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUmgPlayerHud*                               _atlantaHud;                                               // 0x0248(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USafeZoneManagerWidget*                      _safeZoneManager;                                          // 0x0250(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UNoiseIndicatorWidget*>               _closeNoiseIndicatorWidgets;                               // 0x0258(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UExitOpenedIndicatorWidget*>          _exitOpenedIndicatorWidgets;                               // 0x0268(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UGeneratorIndicatorWidget*>           _generatorIndicatorWidgets;                                // 0x0278(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UNoiseIndicatorWidget*>               _hatchIndicatorWidgets;                                    // 0x0288(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UHookedIndicatorWidget*>              _hookedIndicatorWidgets;                                   // 0x0298(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UKillerNoiseIndicatorWidget*>         _killerCuesIndicatorWidgets;                               // 0x02A8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FString, class UNoiseIndicatorWidget*> _loudNoiseIndicatorWidgets;                                // 0x02B8(0x0050) (ExportObject, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UBaseIndicatorWidget*                        _globalSoundIndicatorWidget;                               // 0x0308(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FString, class UNoiseIndicatorWidget*> _offscreenNoiseIndicatorWidgets;                           // 0x0310(0x0050) (ExportObject, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	TMap<int, class UBaseIndicatorWidget*>             _noiseIndicatorMap;                                        // 0x0360(0x0050) (ExportObject, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	class UPromptManager*                              _promptManager;                                            // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAtlantaTutorialObjectiveManager*            _objectiveManager;                                         // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      AtlantaObjectiveClass[0x30];                               // 0x03C0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_1H80[0x28];                                    // 0x03F0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HudScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.ButtonPromptSource
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UButtonPromptSource : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ButtonPromptSource");
		return ptr;
	}



};

// Class DeadByDaylight.CannibalChainsawPower
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UCannibalChainsawPower : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.CannibalChainsawPower");
		return ptr;
	}



};

// Class DeadByDaylight.ChainLinkable
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UChainLinkable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChainLinkable");
		return ptr;
	}



};

// Class DeadByDaylight.ChargeableProgressSource
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UChargeableProgressSource : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ChargeableProgressSource");
		return ptr;
	}



};

// Class DeadByDaylight.IdentityValidation
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UIdentityValidation : public UObject
{
public:
	unsigned char                                      UnknownData_IO78[0x10];                                    // 0x0030(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.IdentityValidation");
		return ptr;
	}



};

// Class DeadByDaylight.Ethereal
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UEthereal : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Ethereal");
		return ptr;
	}



};

// Class DeadByDaylight.Highlightable
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UHighlightable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Highlightable");
		return ptr;
	}



};

// Class DeadByDaylight.KillerControls
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UKillerControls : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerControls");
		return ptr;
	}



};

// Class DeadByDaylight.Madness
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UMadness : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Madness");
		return ptr;
	}



};

// Class DeadByDaylight.MovementSettings
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UMovementSettings : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.MovementSettings");
		return ptr;
	}



};

// Class DeadByDaylight.InactiveCooldownTimerPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UInactiveCooldownTimerPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InactiveCooldownTimerPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DBDBaseGameMode
// 0x0030 (FullSize[0x0358] - InheritedSize[0x0328])
class ADBDBaseGameMode : public AgameMode
{
public:
	struct FDataTableDropdown                          DebugSpecialEvent;                                         // 0x0328(0x0030) (Edit, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDBaseGameMode");
		return ptr;
	}



};

// Class DeadByDaylight.DBDBaseHud
// 0x0010 (FullSize[0x0330] - InheritedSize[0x0320])
class ADBDBaseHud : public AHUD
{
public:
	class UFont*                                       _debugFont;                                                // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NQZ1[0x8];                                     // 0x0328(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDBaseHud");
		return ptr;
	}



	void ShowAnimHudBP();
	bool ShouldDrawAnimHud();
	void DBD_ShowAnimHud(bool Show);
};

// Class DeadByDaylight.DBDBaseMatchGameMode
// 0x0018 (FullSize[0x0370] - InheritedSize[0x0358])
class ADBDBaseMatchGameMode : public ADBDBaseGameMode
{
public:
	class UEndGameComponent*                           _endGameComponent;                                         // 0x0358(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UEscapeRequirementTracker*                   _escapeRequirementTracker;                                 // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ANetworkFenceActor*                          _theFence;                                                 // 0x0368(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDBaseMatchGameMode");
		return ptr;
	}



	class UEndGameComponent* GetEndGameComponent();
};

// Class DeadByDaylight.HISMMaterialHelperSettings
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UHISMMaterialHelperSettings : public UDataAsset
{
public:
	unsigned char                                      _meshMaterialOverride[0x50];                               // 0x0038(0x0050) UNKNOWN PROPERTY: MapProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HISMMaterialHelperSettings");
		return ptr;
	}



};

// Class DeadByDaylight.BatchDrawing
// 0x0068 (FullSize[0x0098] - InheritedSize[0x0030])
class UBatchDrawing : public UObject
{
public:
	class AActor*                                      _actorToSpawnInstancesInto;                                // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class UStaticMesh*, struct FPerMeshInstancingData> _meshesToInstancingData;                                   // 0x0038(0x0050) (Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	class UHISMMaterialHelperSettings*                 _hismMaterialHelperSettings;                               // 0x0088(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialPerThemeSettings*                   _materialPerThemeSettings;                                 // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BatchDrawing");
		return ptr;
	}



};

// Class DeadByDaylight.DBDBloodWebDefinition
// 0x0110 (FullSize[0x0140] - InheritedSize[0x0030])
class UDBDBloodWebDefinition : public UObject
{
public:
	unsigned char                                      UnknownData_3A9J[0x110];                                   // 0x0030(0x0110) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDBloodWebDefinition");
		return ptr;
	}



};

// Class DeadByDaylight.DBDBloodwebDefinitionBase
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDBloodwebDefinitionBase : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDBloodwebDefinitionBase");
		return ptr;
	}



};

// Class DeadByDaylight.DBDCamperData
// 0x0030 (FullSize[0x0138] - InheritedSize[0x0108])
class UDBDCamperData : public UDBDPlayerData
{
public:
	unsigned char                                      UnknownData_58TF[0x30];                                    // 0x0108(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDCamperData");
		return ptr;
	}



};

// Class DeadByDaylight.DBDCharacterMovementUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDCharacterMovementUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDCharacterMovementUtilities");
		return ptr;
	}



	void STATIC_Local_RemoveMaxSpeedMultiplierCurve(class ACharacter* Character, class UCurveFloat* curveToReset);
	void STATIC_Local_AddMaxSpeedMultiplierCurve(class ACharacter* Character, class UCurveFloat* Curve, float Duration, bool autoReset);
};

// Class DeadByDaylight.DBDCharacterUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDCharacterUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDCharacterUtilities");
		return ptr;
	}



	bool STATIC_IsWilliamBillOverbeck(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheWraith(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheTwins_Sister(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheTwins_Brother(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheTwins(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheTrickster(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheTrapper(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheSpirit(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheShape(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsThePig(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheOni(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheNurse(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheNightmare(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheLegion(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheHuntress(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheHillBilly(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheHag(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheGhost(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheExecutioner(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheDoctor(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheDemogorgon(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheClown(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheCannibal(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsTheBlight(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsSteveHarrington(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsSlasherLocallyObserved(class UObject* WorldContextObject);
	bool STATIC_IsQuentinSmith(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsPlague(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsNeaKarlsson(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsNancyWheeler(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsMegThomas(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsLaurieStrode(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsKateDenson(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsJeffJohansen(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsJaneRomero(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsJakePark(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsInDreamworld(class ADBDPlayer* Player);
	bool STATIC_IsFengMin(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsDwightFairfield(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsDavidTapp(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsDavidKing(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsClaudetteMorel(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsAshleyWilliams(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsAdamFrancis(class ADBDBasePlayer* TargetPlayer);
	bool STATIC_IsAceVisconti(class ADBDBasePlayer* TargetPlayer);
	DBDSharedTypes_EPlayerRole STATIC_GetLocallyObservedPlayerRole(class UObject* WorldContextObject);
};

// Class DeadByDaylight.DBDCheatManager
// 0x0090 (FullSize[0x0110] - InheritedSize[0x0080])
class UDBDCheatManager : public UCheatManager
{
public:
	class ADBDMarketingCameraController*               DBDMarketingCameraControllerRef;                           // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      DBDMarketingCameraControllerClass;                         // 0x0088(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_IYUF[0x40];                                    // 0x0090(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UVirtualKeyboard*                            _virtualKeyboard;                                          // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8E68[0x38];                                    // 0x00D8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDCheatManager");
		return ptr;
	}



	void DBD_WakeUpSurvivor();
	void DBD_VisualizeHookRenderRegions();
	void DBD_ValidateDatabases();
	void DBD_ValidateCustomizationItems(const struct FName& ItemName);
	void DBD_UsePrivateMatchMaking(bool Use);
	void DBD_UploadAchievements();
	void DBD_UpdateErrorSimulation(const struct FString& ModuleName, const struct FString& errorId, bool Enabled);
	void DBD_UnloadCharacterAssetLibrary(int characterId);
	void DBD_UnloadAllCharacterAssetLibrary();
	void DBD_UnlinkMirrorsIdFromNintendo();
	void DBD_UnlinkMirrorsIdFromNetEase();
	void DBD_UnlinkMirrorsIdFromFacebook();
	void DBD_UnequipAllCharms();
	void DBD_TryRequestToS3(const struct FString& bucket, const struct FString& internalUrl);
	void DBD_TriggerTutorialRewardsPopup(int step);
	void DBD_TriggerPerkSelectionPopup(int characterLevelCompleted, int characterLevelReached, const struct FString& firstPerkName, int firstPerkLevel, bool IsFirstPerkTeachable, const struct FString& optionalSecondPerkName, int optionalSecondPerkLevel, bool isSecondPerkTeachable);
	void DBD_TriggerPerkSelectionByLevelPopup(int characterLevelCompleted, int characterLevelReached, int characterId);
	void DBD_TriggerEndGameScenario();
	void DBD_TransitionToOnboarding();
	void DBD_ToggleProceduralDebugMode();
	void DBD_ToggleMarketingCamera();
	void DBD_ToggleHUDProfiling();
	void DBD_TeleportWithClothHandling(float X, float Y, float Z);
	void DBD_TeleportToTile(uint32_t X, uint32_t Y);
	void DBD_Teleport(float X, float Y, float Z);
	void DBD_SyncLoadCharacter(int characterId);
	void DBD_StopVideoPlayer();
	void DBD_StopLoadCharacterAssetLibrary(int characterId);
	void DBD_StartInjuredBleedout(float Duration);
	void DBD_SpectateSurvivor();
	void DBD_SpectateKiller();
	void DBD_SpawnStatusEffect(const struct FName& statusEffectId);
	void DBD_SpawnPerk(const struct FName& perkId, int PerkLevel);
	void DBD_SpawnItemInMainMenu(const struct FName& ItemId);
	void DBD_SpawnItemAddon(const struct FName& AddonID);
	void DBD_SpawnItem(const struct FName& ItemId);
	void DBD_SpawnDirectionMarker(float lifetime, float minVisibleDistance, float maxVisibleDistance);
	void DBD_SpawnCharacter(int characterId, bool menuCharacter, const struct FName& OutfitId, float X, float Y, float Z);
	void DBD_SpawnCamperByName(const struct FString& Name, int count, int disableAI);
	void DBD_SpawnCamperByIndex(int Index, int count, int disableAI);
	void DBD_SnapTo(float X, float Y, float Z, float Duration);
	void DBD_SimulateSynchronousFreeze(int miliseconds);
	void DBD_ShutdownRTM();
	void DBD_ShowWebUrl(const struct FString& targetUrl);
	void DBD_ShowVirtualKeyboard(bool Show, bool password);
	void DBD_ShowVirtualJoysticks();
	void DBD_ShowSubtitleString(const struct FString& subtitleString);
	void DBD_ShowSubtitleLocalized(const struct FString& subtitleLocKey);
	void DBD_ShowStoreUI(const struct FString& productId);
	void DBD_ShowRewardedVideoAds(const struct FString& placementId);
	void DBD_ShowLoadout();
	void DBD_ShowKillerPowerDebugInfo(bool Enabled);
	void DBD_ShowHelpConversation();
	void DBD_ShowHelpAndSupport();
	void DBD_ShowGameInstalledPrompt();
	void DBD_ShowErrorPopupAndGoBackToSplashScreen();
	void DBD_ShowErrorPopup();
	void DBD_ShowCharacterSightDebug(bool Show);
	void DBD_ShowBoonTotemBlessingRange(bool SetVisible);
	void DBD_ShowArchiveQuestsRepetition();
	void DBD_ShopCameraQuit();
	void DBD_ShopCameraMain();
	void DBD_ShopCameraBox();
	void DBD_SetWindowDebugMode(bool debugMode);
	void DBD_SetUserBloodpoints(int Points);
	void DBD_SetUseClientMovementPrediction(bool Enabled);
	void DBD_SetTrainVersusBotMode(int useTrainVersusBotMode);
	void DBD_SetTotalXp(int TotalXp);
	void DBD_SetSurvivorLeftCount(int count);
	void DBD_SetSurvivorEmblemPoints(const struct FString& EmblemId, int Points);
	void DBD_SetStoreHitBoxesVisible(bool value);
	void DBD_SetSingleDetectionZoneActive(bool Active);
	void DBD_SetServerCorrectionEnabled(bool Enabled);
	void DBD_SetRunVaultEnabled(bool Enabled);
	void DBD_SetReverseTraverseEnabled(bool Enabled);
	void DBD_SetRandomInputAmplitude(float Amplitude);
	void DBD_SetQATest();
	void DBD_SetProceduralDebugMode(int Mode);
	void DBD_SetPlayerLevel(int currentXp, int PlayerLevel, int Prestige);
	void DBD_SetPips(int survivorPips, int killerPips, const struct FString& lastUpdateTime, bool playedMatch);
	void DBD_SetPerchRadiusThreshold(float Threshold);
	void DBD_SetPartyPrivacy(const struct FString& privacy);
	void DBD_SetOfferingTriggersVisibility(bool IsVisible);
	void DBD_SetObjectiveProgressionForNextGame(const struct FString& objectiveIdStr, int progression);
	void DBD_SetObjectiveProgression(const struct FString& objectiveIdStr, int progression);
	void DBD_SetNumTokensOnPerk(const struct FName& perkId, int numTokens);
	void DBD_SetNewsContentUpdateTimer(float updateInSeconds, bool repeatTimer);
	void DBD_SetMouseLock(bool locked);
	void DBD_SetMobileHudVisible(bool IsVisible);
	void DBD_SetMaxWalkSpeed(float MaxWalkSpeed);
	void DBD_SetKillerHeadVisibility(bool visible);
	void DBD_SetKillerEmblemPoints(const struct FString& EmblemId, int Points);
	void DBD_SetItemNormalizedEnergyLevel(float normalizedLevel);
	void DBD_SetItemEnergyLevel(float Level);
	void DBD_SetInputAvailability(bool isInputEnable);
	void DBD_SetHookDrainStage(int hookDrainStage);
	void DBD_SetHighestWeightSeenNews(int value);
	void DBD_SetHatchetVar(const struct FName& VarName, float value);
	void DBD_SetFriendFavoriteStatus(const struct FString& platformFriendId, bool favoriteStatus);
	void DBD_SetFearMarketUpdateTimer(float updateInSeconds, bool repeatTimer);
	void DBD_SetEthereal(bool Enabled);
	void DBD_SetDockedState(bool docked);
	void DBD_SetDebugSnapPoint(bool Enabled);
	void DBD_SetDebugPrintAvailableInteractions(bool Enabled);
	void DBD_SetDebugFailAllInteractions(bool Enabled);
	void DBD_SetDebugCarry(bool Enabled);
	void DBD_SetDate(const struct FString& dateString, bool isTicking);
	void DBD_SetCustomizationMesh(const struct FName& ItemName);
	void DBD_SetCustomizationCharm(const struct FName& CharmId, int8_t SlotIndex);
	void DBD_SetCrouch(bool Enabled);
	void DBD_SetContinuousPrintState(bool Enabled);
	void DBD_SetContinuousPrintDebug(bool Enabled);
	void DBD_SetChunkProgress(int chunkProgress);
	void DBD_SetChunkingState(unsigned char chunkState);
	void DBD_SetCheatGameVersion(int major, int minor, int patch);
	void DBD_SetCharacterStat(const struct FName& StatName, float amount);
	void DBD_SetAutoItemInteractEnabled(bool Enabled, float pressedDuration, float releasedDuration, float initialDelay);
	void DBD_SetAutoInteractEnabled(bool Enabled, float pressedDuration, float releasedDuration, float initialDelay);
	void DBD_SetAutoGesture1Enabled(bool Enabled, float pressedDuration, float releasedDuration, float initialDelay);
	void DBD_SetAutoFastInteractEnabled(bool Enabled, float pressedDuration, float releasedDuration, float initialDelay);
	void DBD_SetAuthoritativeMovement(bool Enabled);
	void DBD_SetArchiveStoryEditorMode(bool editorMode, const struct FString& csvSavedPath);
	void DBD_SetAllowNavigationInput(bool Enabled);
	void DBD_SetAllowNavigation(bool Enabled);
	void DBD_SetAIPlayerRankAll(int PlayerRank);
	void DBD_SetAIPlayerRank(int PlayerRank);
	void DBD_SetActiveGeneratorCount(int count);
	void DBD_ServerToggleEdgeObjectDebugMode();
	void DBD_SendPlatformInviteForParty();
	void DBD_SendPartyChatMessage(const struct FString& Message);
	void DBD_SendInputToast(int buttonType);
	void DBD_SelectSpawner(int Type);
	void DBD_SelectSlasher(uint32_t slasherIndex);
	void DBD_SelectRandomObsession();
	void DBD_SelectCamper(uint32_t camperIndex);
	void DBD_SegmentationRemoveDecisionPointCampaignSimulation(const struct FString& decisionPoint);
	void DBD_SegmentationRemoveAllDecisionPointCampaignSimulation();
	void DBD_SegmentationPrintAllDecisionPointCampaignSimulation();
	void DBD_SegmentationAddDecisionPointCampaignSimulation(const struct FString& decisionPoint, const struct FString& EventName, const struct FString& startDate, const struct FString& endDate);
	void DBD_SearchPlayerName(const struct FString& playerName);
	void DBD_RevokeConsent(const struct FString& consentId);
	void DBD_RevokeAllConsents();
	void DBD_ReverseBearTrap_ForceTimer(bool force);
	void DBD_ReverseBearTrap_FastForward(float DeltaTime);
	void DBD_ReverseBearTrap_Execute();
	void DBD_RetrieveFriendsListFor(const struct FString& MirrorsId, const struct FString& platform);
	void DBD_ResizeVideoToThumbnail(int SizeX, int SizeY, int positionX, int positionY);
	void DBD_ResizeVideoToFullscreen();
	void DBD_ResistentCamper();
	void DBD_ResetTutorialTips();
	void DBD_ResetSpecialEventSeenCinematics();
	void DBD_ResetSpecialEventEntryScreen(const struct FString& EventId);
	void DBD_ResetSeason();
	void DBD_ResetSaveGame();
	void DBD_ResetPlayerLevelAndXp();
	void DBD_ResetPerkCooldowns();
	void DBD_ResetPallets();
	void DBD_ResetObjectiveProgression(const struct FString& objectiveIdStr);
	void DBD_ResetMeshRelativeOffSet();
	void DBD_ResetIdentityAuthenticationProvider();
	void DBD_ResetHookDrainStage();
	void DBD_ResetGhostStealth();
	void DBD_ResetGameVersion();
	void DBD_ResetFirstTimePlaying();
	void DBD_ResetCloth();
	void DBD_ResetCharacterStat(const struct FName& StatName);
	void DBD_ResetCamera();
	void DBD_ResetBloodpoints();
	void DBD_ResetAllCharacterStats();
	void DBD_RequestServerEnsureLogs();
	void DBD_RequestSearchFriendPopup();
	void DBD_RequestJoinParty(const struct FString& playedId);
	void DBD_RequestEndGame();
	void DBD_RemoveSomeStatusEffects();
	void DBD_RemoveReverseBearTrap();
	void DBD_RemovePlayerFromParty(const struct FString& playerID);
	void DBD_RemovePerkTokens(int numberOfTokensToRemove);
	void DBD_RemoveHP();
	void DBD_RemoveFriend(const struct FString& PlatformId);
	void DBD_RemoveExhaustion();
	void DBD_RemoveAllStatusEffects();
	void DBD_RemoveAllPerks();
	void DBD_ReleaseControlMode();
	void DBD_RejectRequestJoinParty(const struct FString& playedId);
	void DBD_RejectPartyInvite(const struct FString& partyId);
	void DBD_RegisterPlayerName(const struct FString& Name);
	void DBD_RefreshStaticBlast();
	void DBD_RefillActivePhaseWalkCharges();
	void DBD_RedeemPromoCode(const struct FString& codeId);
	void DBD_RebuildNavigationMesh();
	void DBD_Ragdoll(const struct FName& RootBone, float Blend);
	void DBD_PutSurvivorToSleep();
	void DBD_PulldownPallets();
	void DBD_ProcessOffering();
	void DBD_PrivateMatchMakingName(const struct FString& Name);
	void DBD_PrintSteamBuildIds();
	void DBD_PrintQuestConditionsStatus();
	void DBD_PrintDate();
	void DBD_PrintCurrentStateOnce();
	void DBD_PrintAllAtlantaRituals();
	void DBD_PlayMontage(const struct FName& MontageID);
	void DBD_PlayEntityTurn();
	void DBD_PcInputOnAtlanta(bool shouldOverride);
	void DBD_OverrideVersionNumber(const struct FString& VersionNumber);
	void DBD_OptionToggleUseHeadphones();
	void DBD_OptionToggleMuteOnFocusLost();
	void DBD_OptionToggleInvertY();
	void DBD_OptionToggleFullScreen();
	void DBD_OptionToggleAutoAdjust();
	void DBD_OptionSetResolution(int Resolution);
	void DBD_OptionSetQualityLevel(uint32_t qualityLevel);
	void DBD_OptionSetMainVolume(int Volume);
	void DBD_OptionSetLanguage(const struct FString& lang);
	void DBD_OpenVideo(const struct FString& VideoId, const struct FString& Mode);
	void DBD_OpenNetworkErrorPopup();
	void DBD_OpenLogFolder();
	void DBD_NoCrows();
	void DBD_NewAuthToken();
	void DBD_MuteMusicInGame(bool muted);
	void DBD_Mute(bool mute);
	void DBD_MoveBackAndForth(bool move, float moveDuration, bool Run);
	void DBD_MirrorsSteamValidateTransaction(const struct FString& OrderId, const struct FName& ItemId);
	void DBD_MirrorsSteamInitTransaction(const struct FName& ItemId, const struct FString& Description);
	void DBD_MirrorsSteamFinalizeTransaction(const struct FString& OrderId);
	void DBD_MirrorsReportPlayer(const struct FString& reportedPlayerMirrorsId);
	void DBD_MirrorsRefreshWallet();
	void DBD_MirrorsPurchaseOutfit(const struct FName& OutfitId, const struct FString& currencyId);
	void DBD_MirrorsPurchaseNonPremiumItem(const struct FName& objectId, double toPurchaseQuantity, const struct FString& currencyId);
	void DBD_MirrorsPurchaseCharacter(const struct FName& characterCatalogId, const struct FString& currencyId);
	void DBD_MirrorsPurchaseBundle(const struct FName& objectId, double toPurchaseQuantity, const struct FString& currencyId, bool isPremium);
	void DBD_MirrorsPurchaseAllOutfits();
	void DBD_MirrorsPurchaseAllItems();
	void DBD_MirrorsPurchaseAllAtlantaItems();
	void DBD_MirrorsLoadPlayerData();
	void DBD_MirrorsGetTutorialRewards();
	void DBD_MirrorsGetCharacterCustomizationItemData();
	void DBD_MirrorsGetAvailableBundles();
	void DBD_MirrorsDropInventoryItem(const struct FString& objectId, int DropCount);
	void DBD_MirrorsDropAllInventoryItems();
	void DBD_MirrorsConsumeItem(const struct FName& objectId);
	void DBD_MirrorsClaimTutorialRewards(const struct FString& PlayerRole, bool isSkippingTutorial);
	void DBD_MirrorsClaimMessageRewards();
	void DBD_MirrorsBuyFearMarketItem(const struct FName& perkId, const struct FString& currencyId);
	void DBD_MayThereBeOutlines(const struct FString& value, float Red, float Green, float Blue);
	void DBD_MasterCheat();
	void DBD_MarketingSetupGameplayCheats();
	void DBD_MarketingSetupCinematicCheats();
	void DBD_LogGlobalUObjectArray();
	void DBD_LogActivatables();
	void DBD_LockHatchState(int State);
	void DBD_LoadCharacterAssetLibrary(int characterId);
	void DBD_LoadCatalogDataFromS3();
	void DBD_ListStatusEffects();
	void DBD_ListPerks();
	void DBD_ListItemAddons();
	void DBD_ListInventory();
	void DBD_ListInteractionInZone();
	void DBD_ListDBStatusEffects();
	void DBD_ListDBPerks();
	void DBD_ListDBOfferings();
	void DBD_ListDBItems();
	void DBD_ListDBItemAddons();
	void DBD_ListDBCustomizations();
	void DBD_ListAvailableInteractions();
	void DBD_ListAllStatusEffects();
	void DBD_ListAllPerks();
	void DBD_ListAllItemAddons();
	void DBD_LevelUp();
	void DBD_LeaveParty();
	void DBD_LeaveMatch();
	void DBD_KillLobby();
	void DBD_Kill(bool sacrificed);
	void DBD_IsServerDedicated();
	void DBD_IsAssetLoaded(const struct FName& assetPath);
	void DBD_InvitePlayerToParty(const struct FString& playerID);
	void DBD_InvalidateIdentityAuthenticationProviderToken();
	void DBD_InitializeRTM();
	void DBD_IncreaseAtlantaRitualProgression(const struct FString& ritualId, int ritualProgression);
	void DBD_ImportLocalSaveGame();
	void DBD_HookEscapeAutoSuccess(bool success);
	void DBD_HideSubtitles();
	void DBD_HideRankPipsProgression(bool hideRank);
	void DBD_HealBots();
	void DBD_GetSyncedUTCTime();
	void DBD_GetSuggestedFriendsPerPlatform();
	void DBD_GetRecentlyPlayedWithPlayers();
	void DBD_GetPlayerPips();
	void DBD_GetPlayerName();
	void DBD_GetPlayerLevel();
	void DBD_GetNextProgressionPerks(int Level, int characterId);
	void DBD_GetKrakenID();
	void DBD_GetHighestWeightSeenNews();
	void DBD_GetChunkingState();
	void DBD_GenerateAuthToken();
	void DBD_FrenzyForever();
	void DBD_ForceSurvivorGreyedOut(bool isGreyedOut);
	void DBD_ForceSlasherToIgnoreLocalPlayer(bool Activate);
	void DBD_ForceSkillChecks(bool Enabled);
	void DBD_ForceRebalanceRTM();
	void DBD_ForceFlee(bool toward);
	void DBD_ForceDisableSkillChecks(bool Enabled);
	void DBD_ForceControlMode(DBDSharedTypes_EControlMode forcedControlMode);
	void DBD_ForceBackendUnreachable(int force);
	void DBD_FlushPersistentDebugDrawings();
	void DBD_FlushAnalytics();
	void DBD_FindActorWithTag(const struct FString& TagName);
	void DBD_FillHP();
	void DBD_ExportLocalSaveGame();
	void DBD_EquipCharmsIn3Slots(const struct FName& charmIdInSlot0, const struct FName& charmIdInSlot1, const struct FName& charmIdInSlot2);
	void DBD_EntitlementsInfo();
	void DBD_EnsureFail();
	void DBD_EndGameWithReason(DeadByDaylight_EEndGameReason reason);
	void DBD_EndGame();
	void DBD_EndEndGameScenario();
	void DBD_EnableTerrorRadius();
	void DBD_EnableScaleformInputCapture(bool capture, bool Lock);
	void DBD_EnableDebugUnavailableInteractions(bool Enabled);
	void DBD_EnableCapsuleDynamicResize(bool Enabled);
	void DBD_EmulateKrakenSpecificError(const struct FString& Endpoint, int ErrorCode);
	void DBD_EarnXpAmount(int matchXp);
	void DBD_EarnPlayerXp(int MatchTime, bool isFirstMatch, int consecutiveMatch, const struct FString& playerType, const struct FString& highestEmblemQuality, bool queueForTally);
	void DBD_DynamicCapsuleResizerAlwaysEnabled(bool Enabled);
	void DBD_DumpOnlineSessions();
	void DBD_DumpCharacterObjectStates();
	void DBD_DropSurvivorItems();
	void DBD_DropShrinePerk(const struct FName& perkId);
	void DBD_DropAllShrinePerks();
	void DBD_DisplayPopupToast(int toastId);
	void DBD_DisplayPlayerStat(const struct FName& StatName);
	void DBD_DisplayPlayerGameState();
	void DBD_DisplayObjectiveProgression(const struct FString& objectiveIdStr);
	void DBD_DisplayFriendsListData();
	void DBD_DisplayFriendsList();
	void DBD_DisplayFriendInfo(const struct FString& friendId);
	void DBD_DisplayEventProgression(const struct FString& EventId);
	void DBD_DisplayChunkingDefines();
	void DBD_DisplayCharacterStat(const struct FName& StatName);
	void DBD_DispatchOnPostItemAddonsCreation();
	void DBD_DisconnectionPenaltyShow();
	void DBD_DisconnectionPenaltySetEndOfBan(const struct FString& endOfBan);
	void DBD_DisconnectionPenaltyAddPointsDS(const struct FString& UserId, const struct FString& Role, const struct FString& reason);
	void DBD_DisconnectionPenaltyAddPoints(int amount);
	void DBD_DisableTerrorRadius();
	void DBD_DisableStartUpdateMontageDuringEnter(bool disable);
	void DBD_DestroyAllNotControlledCharacter();
	void DBD_DeleteRank();
	void DBD_DeleteAllCharacterAssetLibrary();
	void DBD_DebugPrintInteractionsInZone();
	void DBD_DebugPlague(bool enable);
	void DBD_DebugIsInterruptable(bool interruptable);
	void DBD_DebugGhost(bool debug);
	void DBD_DebugCompetence(int On);
	void DBD_CyclePlayerSpawnPoints(int cycleDelay);
	void DBD_CreateParty();
	void DBD_CrashGameWithNullPtr();
	void DBD_CrashGameWithCheck();
	void DBD_CopyPlayerName();
	void DBD_CopyPlayerMirrorsIdToClipboard();
	void DBD_CopyPartyIdToClipboard();
	void DBD_ContextSystemRequestTransition(uint32_t ContextGroupUid, uint32_t contextUId, int transitionId);
	void DBD_ContextSystemRequestEnd(uint32_t ContextGroupUid);
	void DBD_ConsumeLevelPerk(int characterLevelReached);
	void DBD_ConsumeBloodwebs(int initialLevel, int count);
	void DBD_CompleteEscapeRequirements();
	void DBD_ComeToMeSurvivors();
	void DBD_ComeToMeMyChildren();
	void DBD_ColorblindMode(int deficiencyType, int Severity, bool CorrectDeficiency, bool ShowCorrectionWithDeficiency);
	void DBD_CloseVideo();
	void DBD_CloseSystemPromptAndResetStack();
	void DBD_CloseRTM();
	void DBD_ClearPotentialReferencesToChunksNotYetDownloaded();
	void DBD_ClaimRetentionReward(const struct FString& calendarId);
	void DBD_ChangeVideoVolume(float Volume);
	void DBD_ChangeVideoPlaybackMode(const struct FString& Mode);
	void DBD_ChangeVideoMedia(const struct FString& VideoId);
	void DBD_ChangeBaseUrlForSpecificEndpointAndRequestType(const struct FString& Endpoint, const struct FString& RequestType, const struct FString& baseUrl);
	void DBD_CancelPartyInvite(const struct FString& partyId, const struct FString& cancelledPlayerId);
	void DBD_BuyBloodwebsLevel(int initialLevel, int count);
	void DBD_BlessDullTotems();
	void DBD_BackToIIS();
	void DBD_AutoWiggle();
	void DBD_AtlantaRitualForceRegenerateDaily();
	void DBD_AtlantaRitualForceRegenerateAll();
	void DBD_AtlantaRitualClearOnboardingProgress();
	void DBD_AtlantaOpenDeepLinkURL(const struct FString& URL);
	void DBD_AT_TrialsLoop(uint32_t NumBots, int camperId, const struct FString& killerId);
	void DBD_AsyncLoadItem(const struct FName& ItemId);
	void DBD_ASMShowGridDebugOutput();
	void DBD_ArchivesToggleNodeDebug();
	void DBD_ArchivesResetXpProgression();
	void DBD_ArchivesResetVignette(const struct FString& storyId, const struct FString& VignetteId);
	void DBD_ArchivesResetStory(const struct FString& storyId, int Level);
	void DBD_ArchivesResetStarProgression();
	void DBD_ArchivesResetPremiumPass();
	void DBD_ArchivesResetPopupSeenStatus(const struct FString& ArchiveId);
	void DBD_ArchivesResetNode(const struct FString& storyId, int Level, const struct FString& nodeID, bool forceClose);
	void DBD_ArchivesResetJournal(const struct FString& storyId);
	void DBD_ArchivesResetAll();
	void DBD_ArchivesMasterLevel(const struct FString& storyId, int Level, const struct FString& nodeIdToExclude);
	void DBD_ArchivesJournalUnlockEntries(const struct FString& storyId, const struct FString& VignetteId, int entriesToAdd);
	void DBD_ArchivesGetStoryIds();
	void DBD_ArchivesGetActiveNodesFromCache();
	void DBD_ArchivesForceFetchStoryIds();
	void DBD_ArchivesForceActivateNode(const struct FString& storyId, int Level, const struct FString& nodeID);
	void DBD_ArchivesFetchActiveNodes();
	void DBD_ArchivesDisplayNodeStatus(const struct FString& storyId, int Level, const struct FString& nodeID);
	void DBD_ArchivesCompleteJounal(const struct FString& ArchiveId);
	void DBD_ArchivesAddXp(int amountXp);
	void DBD_ArchivesAddTiers(int amountTiers);
	void DBD_ArchivesAddStars(int amountStars);
	void DBD_ArchivesAddProgressionToAllActiveNodes(int progression);
	void DBD_ArchivesAddObjectiveProgression(const struct FString& storyId, int Level, const struct FString& nodeID, const struct FString& ObjectiveId, int Progress);
	void DBD_ArchivesActivateNode(const struct FString& storyId, int Level, const struct FString& nodeID);
	void DBD_ApplySameSurvivorSicknessStatusToKiller(bool sameVisual);
	void DBD_ApplyDeepWound();
	void DBD_AnalyticsProvidersForgetMe();
	void DBD_AnalyticsProvidersClearPersistentData();
	void DBD_AllowPalletPullUp(bool allowPullUp);
	void DBD_AddToPlayerStat(const struct FName& StatName, float amount);
	void DBD_AddToCharacterStat(const struct FName& StatName, float amount);
	void DBD_AddSlasherPips(int count, bool forceReset);
	void DBD_AddRecentlyPlayedWithPlayer(const struct FString& playerKrakenId);
	void DBD_AddPerkTokens(int numberOfTokensToAdd);
	void DBD_AddPerkToInventory(const struct FName& perkId, int Level);
	void DBD_AddPartyInviteToast(const struct FString& partyId);
	void DBD_AddOfferingToInventory(const struct FName& ItemId, int amount);
	void DBD_AddOffering(const struct FName& Name);
	void DBD_AddNotificationToast();
	void DBD_AddMadness(float madnessToAdd);
	void DBD_AddItemToInventory(const struct FName& ItemId, int amount);
	void DBD_AddItemAddonToInventory(const struct FName& ItemAddonID, int amount);
	void DBD_AddInvitationToast();
	void DBD_AddHP();
	void DBD_AddFriend(const struct FString& userKrakenID);
	void DBD_AddEverythingToInventory(int amount);
	void DBD_AddCharacterExperience(int amount);
	void DBD_AddCamperPips(int count, bool forceReset);
	void DBD_AddBotWithId(int ID);
	void DBD_AddBot();
	void DBD_AddAllPerksToInventory(int Level);
	void DBD_AddAllItemsAddonsOfferingsToInventory(int amount);
	void DBD_ActivateWeakenedMechanic(bool On);
	void DBD_ActivateEscapeDoor();
	void DBD_ActivateAIAllSlashers(bool Activate, int PlayerRank);
	void DBD_ActivateAIAllCampers(bool Activate, int PlayerRank);
	void DBD_ActivateAIAll(bool Activate, int PlayerRank);
	void DBD_ActivateAI(bool Activate, int PlayerRank);
	void DBD_AcceptRequestJoinParty(const struct FString& playedId);
	void DBD_AcceptPartyInvite(const struct FString& partyId);
};

// Class DeadByDaylight.DBDClientSyncer
// 0x01F8 (FullSize[0x0428] - InheritedSize[0x0230])
class ADBDClientSyncer : public AActor
{
public:
	TArray<struct FSpawnInfo>                          _actorsToSpawnLocally;                                     // 0x0230(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FSpawnInfo>                          _currentQueue;                                             // 0x0240(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7FNK[0x8];                                     // 0x0250(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPaperTileMap*                               _tileMap;                                                  // 0x0258(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R5XS[0x1C8];                                   // 0x0260(0x01C8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDClientSyncer");
		return ptr;
	}



	void Multicast_SyncSeed(int Seed, class UPaperTileMap* TileMap, int GenerationPlayerCount, const struct FString& PremadeMap);
	void Multicast_SyncFinalLocallySpawnCount(int16_t numLocal);
	void Multicast_SyncActorToSpawnLocally(TArray<struct FSpawnInfo> spawnInfos, int16_t startIndex);
};

// Class DeadByDaylight.DBDClipRegionComponent
// 0x0010 (FullSize[0x0220] - InheritedSize[0x0210])
class UDBDClipRegionComponent : public UDBDLocatorComponent
{
public:
	TArray<struct FAffectedMaterialAndVariant>         AffectedMaterialsAndVariants;                              // 0x0210(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDClipRegionComponent");
		return ptr;
	}



	void NotifyShouldClipComponent(class UMeshComponent* InMeshComponent);
	float ClipDistance(class UMeshComponent* InMeshComponent);
	void ApplyClipToDynamicMaterial(class UMaterialInstanceDynamic* dynamicInstanceToClip, int InRegionID);
	void ApplyClip(class UMaterialInstanceDynamic* InMaterial2clip, int InRegionID);
	void STATIC_ApplyArrayOfClipsToDynamicMaterial(TArray<class UDBDClipRegionComponent*> InRegions, class UMaterialInstanceDynamic* dynamicInstanceToClip);
};

// Class DeadByDaylight.ColorBlindFunctionLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UColorBlindFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ColorBlindFunctionLibrary");
		return ptr;
	}



	void STATIC_CallOnColorBlindSettingsChange(class AActor* callingActor);
};

// Class DeadByDaylight.ColorBlindSettingsListenerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UColorBlindSettingsListenerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ColorBlindSettingsListenerInterface");
		return ptr;
	}



	void OnColorBlindSettingsChange(SlateCore_EColorVisionDeficiency ColorBlindMode, int colorBlindIntensity);
};

// Class DeadByDaylight.DBDConsoleCommandUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDConsoleCommandUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDConsoleCommandUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.DBDCoreUMGDesignTunables
// 0x0060 (FullSize[0x0090] - InheritedSize[0x0030])
class UDBDCoreUMGDesignTunables : public UObject
{
public:
	unsigned char                                      CoreHudRootWidgetClass[0x30];                              // 0x0030(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      CorePlayerControllerClass[0x30];                           // 0x0060(0x0030) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDCoreUMGDesignTunables");
		return ptr;
	}



};

// Class DeadByDaylight.KillInteractionDefinition
// 0x0048 (FullSize[0x0720] - InheritedSize[0x06D8])
class UKillInteractionDefinition : public UChargeableInteractionDefinition
{
public:
	unsigned char                                      UnknownData_7XRP[0x8];                                     // 0x06D8(0x0008) Fix Super Size
	TArray<struct FString>                             _nonOverrideableTargetInteractions;                        // 0x06E0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _chargeCompleted;                                          // 0x06F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isKillShownInThirdPerson;                                 // 0x06F1(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _manuallyManageMeshHiding;                                 // 0x06F2(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CYRD[0x5];                                     // 0x06F3(0x0005) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FAnimationMontageDescriptor                 _exitMontage;                                              // 0x06F8(0x0020) (Edit, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3ING[0x8];                                     // 0x0718(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillInteractionDefinition");
		return ptr;
	}



	void OnMoriCancelled();
	void OnKillAudioActivation(bool Active, class ADBDPlayer* interactingPlayer);
	class ACamperPlayer* GetOwningSurvivor();
	struct FAnimationMontageDescriptor GetExitAnimationMontage();
	bool GetChargeCompleted();
};

// Class DeadByDaylight.LacerationUIData
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class ULacerationUIData : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LacerationUIData");
		return ptr;
	}



};

// Class DeadByDaylight.LandingPageTabsDataAsset
// 0x00F0 (FullSize[0x0128] - InheritedSize[0x0038])
class ULandingPageTabsDataAsset : public UPrimaryDataAsset
{
public:
	TMap<DeadByDaylight_EStorefrontState, struct FLandingPageTabData> BigButtonsData;                                            // 0x0038(0x0050) (Edit, NativeAccessSpecifierPublic)
	TMap<DeadByDaylight_EStorefrontState, struct FLandingPageTabData> MediumButtonsData;                                         // 0x0088(0x0050) (Edit, NativeAccessSpecifierPublic)
	TMap<DeadByDaylight_EStorefrontState, struct FLandingPageTabData> SmallButtonsData;                                          // 0x00D8(0x0050) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LandingPageTabsDataAsset");
		return ptr;
	}



};

// Class DeadByDaylight.LanternInteractable
// 0x0058 (FullSize[0x0380] - InheritedSize[0x0328])
class ALanternInteractable : public AInteractable
{
public:
	struct FScriptMulticastDelegate                    OnLanternStateChanged;                                     // 0x0328(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLanternCollectedByPlayerCosmetic;                        // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_57H3[0x20];                                    // 0x0348(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _collectableClass;                                         // 0x0368(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_517H[0x10];                                    // 0x0370(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LanternInteractable");
		return ptr;
	}



	void SlasherDestroyLantern(class ADBDPlayer* Player);
	void OnSlasherDestroyedLantern(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void OnCamperWasHooked(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void OnCamperLeavingHook(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void OnBackToCollectableTimerEnd();
	DeadByDaylight_ELanternState GetLanternState();
	void CollectLight(class ADBDPlayer* Player);
	void ChangeLanternState(DeadByDaylight_ELanternState newLanternState);
	bool CanBeDestroyed();
	bool CanBeCollected();
};

// Class DeadByDaylight.LanternLightCollectable
// 0x0008 (FullSize[0x04D0] - InheritedSize[0x04C8])
class ALanternLightCollectable : public ACollectable
{
public:
	class ALanternInteractable*                        _parentLantern;                                            // 0x04C8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LanternLightCollectable");
		return ptr;
	}



	void SetParentLantern(class ALanternInteractable* parentLantern);
};

// Class DeadByDaylight.LegalMenuScreen
// 0x0048 (FullSize[0x0168] - InheritedSize[0x0120])
class ULegalMenuScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_TSVQ[0x48];                                    // 0x0120(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LegalMenuScreen");
		return ptr;
	}



	void OnOkClick();
	void OnDeclineClick();
	void OnAcceptClick();
};

// Class DeadByDaylight.LegalMenuScreenScaleform
// 0x0000 (FullSize[0x0168] - InheritedSize[0x0168])
class ULegalMenuScreenScaleform : public ULegalMenuScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LegalMenuScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.LegalMenuScreenUMG
// 0x0008 (FullSize[0x0170] - InheritedSize[0x0168])
class ULegalMenuScreenUMG : public ULegalMenuScreen
{
public:
	class UUMGAtlantaLegalMenuScreen*                  _atlLegalMenuScreen;                                       // 0x0168(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LegalMenuScreenUMG");
		return ptr;
	}



	void OnLegalMenuButtonClick(bool isAccept);
};

// Class DeadByDaylight.LevelAISetupComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class ULevelAISetupComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LevelAISetupComponent");
		return ptr;
	}



};

// Class DeadByDaylight.WorldRunawayMeshComponent
// 0x0024 (FullSize[0x0B90] - InheritedSize[0x0B6C])
class UWorldRunawayMeshComponent : public USkeletalMeshComponent
{
public:
	float                                              _runAwayMustTickDuration;                                  // 0x0B6C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _returnMustTickDuration;                                   // 0x0B70(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9W5U[0x1C];                                    // 0x0B74(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.WorldRunawayMeshComponent");
		return ptr;
	}



	void SetShouldRunAwayWithRandomDelay(bool should, float delayRange);
	void SetShouldRunAwayWithDelay(bool should, float Delay);
	void SetShouldRunAway(bool should);
	bool GetShouldRunAway();
};

// Class DeadByDaylight.LevelCrowWRMeshComponent
// 0x0000 (FullSize[0x0B90] - InheritedSize[0x0B90])
class ULevelCrowWRMeshComponent : public UWorldRunawayMeshComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LevelCrowWRMeshComponent");
		return ptr;
	}



};

// Class DeadByDaylight.LevelParadise
// 0x00D8 (FullSize[0x0308] - InheritedSize[0x0230])
class ALevelParadise : public AActor
{
public:
	float                                              LoopStartDistance;                                         // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LoopDistance;                                              // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class USceneComponent*                             MainPlayerSpawnPoint;                                      // 0x0238(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USceneComponent*>                     OtherSurvivorSpawnPoints;                                  // 0x0240(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USceneComponent*>                     ParadiseTiles;                                             // 0x0250(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                      ParadiseViewTarget;                                        // 0x0260(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_I3NG[0x90];                                    // 0x0268(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _spawnedMainPawn;                                          // 0x02F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _runnerComponent;                                          // 0x0300(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.LevelParadise");
		return ptr;
	}



	void ParadiseEntered(const struct FParadiseData& PlayerData);
	void OnInterpolationDone();
	void EnterParadise(const struct FParadiseData& PlayerData);
};

// Class DeadByDaylight.ShopCameraManager
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class AShopCameraManager : public AInfo
{
public:
	TArray<struct FCharacterCameraTag>                 CatalogCharactersCamera;                                   // 0x0230(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FCharacterCameraTag>                 StoryCharactersCamera;                                     // 0x0240(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ShopCameraManager");
		return ptr;
	}



};

// Class DeadByDaylight.shopmanager
// 0x0950 (FullSize[0x0980] - InheritedSize[0x0030])
class Ushopmanager : public UObject
{
public:
	unsigned char                                      UnknownData_J4WR[0xA8];                                    // 0x0030(0x00A8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x00D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RLTY[0x6C0];                                   // 0x00E0(0x06C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBannerDataProcessor*                        _bannerDataProcessor;                                      // 0x07A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URecommendationsGenerator*                   _recommendationsGenerator;                                 // 0x07A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T4FR[0x1D0];                                   // 0x07B0(0x01D0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.shopmanager");
		return ptr;
	}



};

// Class DeadByDaylight.SkillCheck
// 0x0190 (FullSize[0x0248] - InheritedSize[0x00B8])
class USkillCheck : public UActorComponent
{
public:
	unsigned char                                      UnknownData_AW0B[0xB0];                                    // 0x00B8(0x00B0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _owner;                                                    // 0x0168(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargeableInteractionDefinition*            _currentInteraction;                                       // 0x0170(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UEEQ[0xD0];                                    // 0x0178(0x00D0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SkillCheck");
		return ptr;
	}



	bool ShouldShowWarning();
	void Server_OnSkillCheckSuccess(const struct FSkillCheckResponse& SkillCheckResponse);
	void Server_OnSkillCheckFailure(const struct FSkillCheckResponse& SkillCheckResponse);
	void Server_DeactivateSkillCheck();
	void Server_ActivateSkillCheck(class UChargeableInteractionDefinition* Interaction, DBDSharedTypes_ESkillCheckCustomType Type, const struct FSkillCheckDefinition& definition);
	void OnSkillCheckInput();
	void Multicast_SkillCheckResponse(const struct FSkillCheckResponse& SkillCheckResponse);
	void Multicast_DeactivateSkillCheck();
	void Multicast_ActivateSkillCheck(class UChargeableInteractionDefinition* Interaction, DBDSharedTypes_ESkillCheckCustomType Type, const struct FSkillCheckDefinition& definition);
	void Local_OnSkillCheckSuccessTrigger(bool Bonus, bool insane, DBDSharedTypes_ESkillCheckCustomType Type, bool FailedCountedAsGood);
	void Local_OnSkillCheckFailureTrigger(bool hadInput, bool insane, DBDSharedTypes_ESkillCheckCustomType Type);
	void Local_ActivateSkillCheck(class UInteractionDefinition* Interaction, float WarningSoundDelay);
	void Local_ActivateCustomSkillCheck(DBDSharedTypes_ESkillCheckCustomType Type, float WarningSoundDelay);
	bool IsOffCenterSkillCheck();
	bool IsHexSkillCheck(class ADBDPlayer* DBDPlayer);
	bool IsDisplayed();
	float GetStartDelayInSeconds();
	bool STATIC_CanSkillCheckTypeGrantScore(DBDSharedTypes_ESkillCheckCustomType Type);
};

// Class DeadByDaylight.SlashableActivationSourceCollection
// 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
class USlashableActivationSourceCollection : public UActorComponent
{
public:
	unsigned char                                      UnknownData_0F71[0x40];                                    // 0x00B8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlashableActivationSourceCollection");
		return ptr;
	}



	void STATIC_RemoveSource(class UObject* Source);
	void STATIC_ForceActivate(class UObject* WorldContextObject);
	void STATIC_AddSource(class UObject* Source);
};

// Class DeadByDaylight.SlashableInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USlashableInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlashableInterface");
		return ptr;
	}



};

// Class DeadByDaylight.SlasherAnimInstance
// 0x0170 (FullSize[0x03E0] - InheritedSize[0x0270])
class USlasherAnimInstance : public UAnimInstance
{
public:
	struct FScriptMulticastDelegate                    OnFootTrapped;                                             // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	bool                                               _isCrouched;                                               // 0x0280(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isRevvingChainsaw;                                        // 0x0281(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isAttackSuccessMontagePlaying;                            // 0x0282(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isCamOn;                                                  // 0x0283(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isAttacking;                                              // 0x0284(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isAnyMontagePlaying;                                      // 0x0285(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isFrenzy;                                                 // 0x0286(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isFrenzyCD;                                               // 0x0287(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isInParadise;                                             // 0x0288(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _enableArmOverrideTier3;                                   // 0x0289(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isRingingBell;                                            // 0x028A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isCarrying;                                               // 0x028B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     _firstPersonCarryOffset;                                   // 0x028C(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     _firstPersonCarryOffsetLookingDown;                        // 0x0298(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isPassivePhaseWalking;                                    // 0x02A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isActivePhaseWalking;                                     // 0x02A5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isInAir;                                                  // 0x02A6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isVaultingToFall;                                         // 0x02A7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isSpectator;                                              // 0x02A8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _firstPersonView;                                          // 0x02A9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isIdle;                                                   // 0x02AA(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _validSlasher;                                             // 0x02AB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _animDirection;                                            // 0x02AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _animSpeed;                                                // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _animPitch;                                                // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _animTurning;                                              // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _animYaw;                                                  // 0x02BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _pelvisHeight;                                             // 0x02C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _idleTime;                                                 // 0x02C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                _directionSwitch;                                          // 0x02C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     _leftClearFrontSpaceVector;                                // 0x02CC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     _rightClearFrontSpaceVector;                               // 0x02D8(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     _velocity;                                                 // 0x02E4(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     _rightFootEffectorLocation;                                // 0x02F0(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     _leftFootEffectorLocation;                                 // 0x02FC(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRotator                                    _meshRotation;                                             // 0x0308(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_0M0B[0x4];                                     // 0x0314(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UAnimMontage*>                        _attackSuccessAnimations;                                  // 0x0318(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UAnimMontage*>                        _camOnAnimations;                                          // 0x0328(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ASlasherPlayer*                              _mySlasher;                                                // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTagStateBool                               _isVaultingToFallState;                                    // 0x0340(0x0030) (Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EInteractionAnimation               _interactionType;                                          // 0x0370(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YBBP[0x7];                                     // 0x0371(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPortalPlacerStateComponent*                 _demogorgonPortalPlacerState;                              // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _demogorgonTeleportDuration;                               // 0x0380(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HQPN[0x4];                                     // 0x0384(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChargedAttackStateComponent*                _demogorgonChargedAttackStateComponent;                    // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isDemogorgonCharging;                                     // 0x0390(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DGM8[0x3];                                     // 0x0391(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _demogorgonChargingPercent;                                // 0x0394(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOniDemonModeAttackStateComponent*           _oniAttackState;                                           // 0x0398(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isOniCharging;                                            // 0x03A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EOniAttackType                      _oniAttackType;                                            // 0x03A1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RBFN[0x2];                                     // 0x03A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _oniChargeDuration;                                        // 0x03A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EAttackSubstate                     _previousAttackSubstate;                                   // 0x03A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EAttackSubstate                     _attackSubstate;                                           // 0x03A9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YXH9[0x6];                                     // 0x03AA(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UEvilWithinComponent*                        _evilWithinComponent;                                      // 0x03B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UFrenzyComponent*                            _frenzyComponent;                                          // 0x03B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPhaseWalkingComponent*                      _phaseWalkingComponent;                                    // 0x03C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UArmIKSensorComponent*                       _armIKSensorComponent;                                     // 0x03C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_99EX[0x10];                                    // 0x03D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlasherAnimInstance");
		return ptr;
	}



	void SetIsCrouched(bool value);
	void CallOnFootTrapped();
};

// Class DeadByDaylight.SlasherAttackPickerComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class USlasherAttackPickerComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlasherAttackPickerComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent
// 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
class USlasherHitsWhileCarryingTrackerComponent : public UActorComponent
{
public:
	unsigned char                                      _campersHitDuringLastCarry[0x50];                          // 0x00B8(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      UnknownData_9RPE[0x18];                                    // 0x0108(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlasherHitsWhileCarryingTrackerComponent");
		return ptr;
	}



	void OnPostAttack(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void OnPickup(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void OnAttack(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
};

// Class DeadByDaylight.SlasherMovementComponent
// 0x0024 (FullSize[0x0910] - InheritedSize[0x08EC])
class USlasherMovementComponent : public UDBDCharacterMovementComponent
{
public:
	unsigned char                                      UnknownData_4XCE[0x4];                                     // 0x08EC(0x0004) Fix Super Size
	unsigned char                                      UnknownData_651F[0x20];                                    // 0x08F0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlasherMovementComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SlasherOutlineUpdateStrategy
// 0x0048 (FullSize[0x0108] - InheritedSize[0x00C0])
class USlasherOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FScriptMulticastDelegate                    OnRevealed;                                                // 0x00C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FLinearColor                                _nonRevealedColor;                                         // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _revealedColor;                                            // 0x00E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                _revealedColorForKiller;                                   // 0x00F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_USAR[0x8];                                     // 0x0100(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlasherOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.SlasherPlayer
// 0x0508 (FullSize[0x15C0] - InheritedSize[0x10B8])
class ASlasherPlayer : public ADBDPlayer
{
public:
	unsigned char                                      UnknownData_8FFW[0x8];                                     // 0x10B8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_2ZKT[0x58];                                    // 0x10C0(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnOffensiveAction;                                         // 0x1118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FVector                                     PutDownTraceLocation;                                      // 0x1128(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       DefaultSlasherPower;                                       // 0x1134(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              LoudNoiseDisplayTime;                                      // 0x1140(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector                                     TargetPriorityFactor;                                      // 0x1144(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldDisplayAttackZones;                                  // 0x1150(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HN8O[0x7];                                     // 0x1151(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      CamperExposer;                                             // 0x1158(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EKillerMoodInfluence                KillerMoodInfluence;                                       // 0x1160(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1F9Z[0x7];                                     // 0x1161(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<DBDSharedTypes_EKillerAbilities>            KillerAbilities;                                           // 0x1168(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UKillerSoundCuesComponent*                   KillerSoundCuesComponent;                                  // 0x1178(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShowKillerPowerDebugInfo;                                  // 0x1180(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasDamagedGeneratorSinceHook;                              // 0x1181(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ATCC[0x6];                                     // 0x1182(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnStalkModeChangedEvent;                                   // 0x1188(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_E1BZ[0x18];                                    // 0x1198(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UAkComponent>                 _audioComponent;                                           // 0x11B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UDBDNavModifierComponent*                    _terrorNavModifierComponent;                               // 0x11B8(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _slasherLightIntensity;                                    // 0x11C0(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _defaultAmountToSquish;                                    // 0x11C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7OQ0[0x8];                                     // 0x11C8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class ADBDPlayer*, struct FTargetFocusTimer>  _stalkTimers;                                              // 0x11D0(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	class UStillnessTrackerComponent*                  _stillnessTracker;                                         // 0x1220(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnTemplate, Transient, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAimAssistComponent*                         _aimAssistComponent;                                       // 0x1228(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FDBDTimer                                   _recentlyCloakedTimer;                                     // 0x1230(0x0028) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FDBDTimer                                   _flashlightBlindEvasionScoreTimer;                         // 0x1258(0x0028) (Transient, Protected, NativeAccessSpecifierProtected)
	struct FDBDTimer                                   _flashlightBurnoutEvasionScoreTimer;                       // 0x1280(0x0028) (Transient, Protected, NativeAccessSpecifierProtected)
	TMap<class ADBDPlayer*, struct FAnimationMontageDescriptor> _predictedCamperHitMontages;                               // 0x12A8(0x0050) (Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BLQI[0x8];                                     // 0x12F8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USlasherTREmitterComponent*                  _terrorRadiusEmitter;                                      // 0x1300(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OHO8[0x8];                                     // 0x1308(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULoudNoiseHUDIndicator*                      _loudNoiseIndicator;                                       // 0x1310(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlasherHitsWhileCarryingTrackerComponent*   _hitsWhileCarryingTracker;                                 // 0x1318(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _stealthIncreaseRate;                                      // 0x1320(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _stealthDecreaseRate;                                      // 0x1324(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDateTime                                   _stillnessStartTime;                                       // 0x1328(0x0008) (ZeroConstructor, Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BXU9[0x68];                                    // 0x1330(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTagStateBool                               _isInStalkMode;                                            // 0x1398(0x0030) (Net, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NX1W[0xC0];                                    // 0x13C8(0x00C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isKilling;                                                // 0x1488(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int8_t                                             _allowedKillCount;                                         // 0x1489(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int8_t                                             _allowedKillAfterStrugglePhase;                            // 0x148A(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _allowedKillLastSurvivor;                                  // 0x148B(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BZ63[0x8];                                     // 0x148C(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                _cachedBloodlustTier;                                      // 0x1494(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_R0EM[0x8];                                     // 0x1498(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	uint32_t                                           _killerPowerDebugFlags;                                    // 0x14A0(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                                _presenceTag;                                              // 0x14A4(0x000C) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _persistantStateTags;                                      // 0x14B0(0x0020) (Edit, NativeAccessSpecifierPrivate)
	struct FGameplayTagContainer                       _animGameplayTags;                                         // 0x14D0(0x0020) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	bool                                               _enableKillerCrouchInput;                                  // 0x14F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canStartAttackWhileCrouched;                              // 0x14F1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2ZA2[0x6];                                     // 0x14F2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ACamperPlayer*                               _carriedCamper;                                            // 0x14F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMoriComponent*                              _moriComponent;                                            // 0x1500(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitValidatorComponent*                      _hitValidator;                                             // 0x1508(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UHitValidatorConfigurator*                   _hitValidationConfigurator;                                // 0x1510(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDAttackerComponent*                       _attackerComponent;                                        // 0x1518(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QLUO[0x10];                                    // 0x1520(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DBDSharedTypes_EAttackType                         _basicAttackType;                                          // 0x1530(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JUS5[0x7];                                     // 0x1531(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UArmIKSensorComponent*                       _armIKSensorComponent;                                     // 0x1538(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ACamperPlayer*                               _survivorBeingKilled;                                      // 0x1540(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7ZAT[0x18];                                    // 0x1548(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFirstPersonViewComponent*                   _firstPersonViewComponent;                                 // 0x1560(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKillerIntroComponent*                       _killerIntroComponent;                                     // 0x1568(0x0008) (Edit, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UKillerBlindingFXComponent*                  _blindingFXComponent;                                      // 0x1570(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1AXM[0x8];                                     // 0x1578(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UKillerRedStainUpdateStrategy*               _redStainUpdateStrategy;                                   // 0x1580(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _squishFactorParameter;                                    // 0x1588(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9CZQ[0x4];                                     // 0x1594(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USceneComponent*                             _attackZonePivot;                                          // 0x1598(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USlasherStunnableComponent*                  _slasherStunnableComponent;                                // 0x15A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _turnInPlaceThresholdAngle;                                // 0x15A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_9PYI[0x14];                                    // 0x15AC(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlasherPlayer");
		return ptr;
	}



	bool WasRecentlyCloaked();
	void UpdateRageTierEffect(int previousTier, int currentTier);
	void TriggerPutDownAnimation();
	void TriggerPickUpAnimation();
	void SpawnSlasherPower();
	bool ShouldTurnInPlaceRight();
	bool ShouldTurnInPlaceLeft();
	bool ShouldTurnInPlace();
	bool ShouldApplyBloodlustSpeedModifier();
	void SetSurvivorBeingKilled(class ACamperPlayer* survivor);
	void SetStalkTierWalkSpeedMultiplier(float stalkTierWalkSpeedMultiplier);
	void SetLightIntensity(float Intensity);
	void SetIsKilling(bool IsKilling);
	void SetIsHookingSurvivor(bool value);
	void SetGuidedAction(DeadByDaylight_ESlasherGuidedAction action);
	void SetChainsawSprinting(bool chainsawSprinting);
	void SetCarriedCamper(class ACamperPlayer* camper);
	void SetAttackZonePivot(class USceneComponent* attackZonePivot);
	void SetAttackDetectionZoneSet(DeadByDaylight_EAttackZoneSet attackZoneSet);
	void Server_SendAttackInput(bool Pressed);
	void ResetNeutralIdleRotationYaw();
	void PlayBloodHitsEffects();
	void OnSurvivorsLeftChanged(int survivorRemaining);
	void OnSurvivorKilled(class ACamperPlayer* playerToKill, bool consumeKill);
	void OnSuccessfulInterruption(class ACamperPlayer* interruptedSurvivor);
	void OnStealthChanged(bool stealth);
	void OnStalkModeChangedEvent__DelegateSignature(bool IsInStalkMode);
	void OnStalkModeChangedCosmetic(bool stalkMode);
	void OnStalkModeChanged(bool stalkMode);
	void OnPerformingChargableInteraction(float Progress);
	void OnLoudNoiseTriggered(class AActor* originator, class AActor* instigatingActor, const struct FVector& Location, bool shouldTrack, float* audibleRange, bool isQuickAction);
	void OnLoudNoiseIndicatorDestroyed();
	void OnKillerAbilityUpdateActivate(DBDSharedTypes_EKillerAbilities killerAbility, float percent);
	void OnKillerAbilityEndDeactivate(DBDSharedTypes_EKillerAbilities killerAbility, bool Forced);
	void OnKillerAbilityEndActivate(DBDSharedTypes_EKillerAbilities killerAbility);
	void OnKillerAbilityBeginDeactivate(DBDSharedTypes_EKillerAbilities killerAbility, bool Forced);
	void OnKillerAbilityBeginActivate(DBDSharedTypes_EKillerAbilities killerAbility);
	void OnDropCamperEnd(class ADBDPlayer* camper);
	void OnCamperHitFX(class ACamperPlayer* camper, bool showBloodSpatter);
	void OnAttackStart(DBDSharedTypes_EAttackType attackType);
	void OnAttackFinish(DBDSharedTypes_EAttackType attackType);
	void Multicast_SetGuidedAction(DeadByDaylight_ESlasherGuidedAction action);
	void Multicast_SetAttackDetectionZoneSet(DeadByDaylight_EAttackZoneSet attackZoneSet);
	void Multicast_MergeLockOnDamageZones(bool enable);
	void Multicast_DisplayAttackZones(bool Display);
	void MergeLockOnDamageZones(bool enable);
	bool Local_CancelAttack();
	bool IsWalkLocked();
	bool IsUncloaking();
	bool IsOfferingAllowingKill(class ACamperPlayer* camper);
	bool IsKilling();
	bool IsInterruptBlocked();
	bool IsInBlinkCooldown();
	bool IsImmuneToObservingPlayerDetection(class ADBDPlayer* observingPlayer);
	bool IsIdling();
	bool IsHooking();
	bool IsCrouchAvailable_BP();
	bool IsCloaking();
	bool IsChargingBlink();
	bool IsChainsawSprinting();
	bool IsChainBlinking();
	bool IsCarrying();
	bool IsASurvivorInTerrorRadius();
	bool IsAllowedToKill(class ACamperPlayer* camper);
	void IncrementInterruptBlock();
	bool HasPreLevelGenerationModifier(const struct FName& modifierID);
	bool HasKillerAbility(DBDSharedTypes_EKillerAbilities killerAbility);
	class USlasherTREmitterComponent* GetTerrorRadiusEmitter();
	class ACamperPlayer* GetSurvivorBeingKilled();
	struct FDateTime GetStillnessStartTime();
	float GetStealthRatio();
	float GetStalkTierWalkSpeedMultiplier();
	struct FGameplayTagContainer GetSlasherAnimGameplayTags();
	int GetRageTier();
	struct FGameplayTag GetPresenceTag();
	struct FVector GetPlayerDropOffPoint();
	class ACamperPlayer* GetObsessionTarget();
	struct FRotator GetLookRotation();
	float GetLightIntensity();
	bool GetIsAttacking();
	float GetIdleNeutralRotationYaw();
	DeadByDaylight_ESlasherGuidedAction GetGuidedAction();
	float GetDifferenceBetweenIdleNeutralAndCurrentRotationYaw();
	float GetCurrentRotationYaw();
	class UChaserCharacterComponent* GetChaserCharacterComponent();
	TArray<struct FName> GetCharacterCustomAnimTags();
	class ACamperPlayer* GetCarriedCamper();
	float GetBlindedPercent();
	float GetAnimDirection();
	void DisplayAttackZones(bool Display);
	void DecrementInterruptBlock();
	void DBD_SetAttackZones(DeadByDaylight_EAttackZoneSet attackZoneSet);
	void DBD_MergeLockOnDamageZones(bool enable);
	void DBD_DisplayAttackZones(bool Display);
	void DBD_AllowKilling();
	void Cosmetic_OnPickUpEnd();
	void Cosmetic_OnDropCamperEnd();
	void Cosmetic_OnCancelCarry();
	void Client_RequestStun(DBDSharedTypes_EStunType stunType, class ADBDPlayer* stunner);
	bool CanSlashAttack_BP();
	bool CanPickupSurvivor();
	bool CanPerformKillerAbility(DBDSharedTypes_EKillerAbilities killerAbility);
	bool CanGainRage();
	bool CanEscapeCarry(class ACamperPlayer* Player);
	bool CancelAttackByInput();
	bool CanAttack_BP(DBDSharedTypes_EAttackType attackType);
	bool CanAttack(DBDSharedTypes_EAttackType attackType);
	bool CanAffectLocalPlayer();
	void BroadcastOnInstantTeleport();
	void BroadcastOffensiveAction();
	void Authority_SetInStalkMode(bool stalkMode, bool Forced);
	void Authority_HandleKillerInterruptingSurvivor(class ADBDPlayer* Target);
	void Authority_AttemptEscapeCarry(class ACamperPlayer* Player);
	void Authority_AllowKilling(int numKills);
	void AttackInputReleased();
	void AttackInputPressed();
	void ActionKillerReleased();
	void ActionKillerPressed();
};

// Class DeadByDaylight.SlasherStateMachine
// 0x0000 (FullSize[0x0130] - InheritedSize[0x0130])
class USlasherStateMachine : public UPlayerStateMachine
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlasherStateMachine");
		return ptr;
	}



};

// Class DeadByDaylight.StunnableComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UStunnableComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StunnableComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SlasherStunnableComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class USlasherStunnableComponent : public UStunnableComponent
{
public:
	unsigned char                                      UnknownData_RWIK[0x38];                                    // 0x00B8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlasherStunnableComponent");
		return ptr;
	}



	void Server_NotifyStunHasBeenProcessed();
};

// Class DeadByDaylight.TerrorRadiusEmitterComponent
// 0x00E0 (FullSize[0x02F0] - InheritedSize[0x0210])
class UTerrorRadiusEmitterComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_HDQY[0x18];                                    // 0x0210(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _simulatedFixedDistance;                                   // 0x0228(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _imitatesAudioOnly;                                        // 0x022C(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _generatesChaseMusic;                                      // 0x022D(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _active;                                                   // 0x022E(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isFakeTerrorRadius;                                       // 0x022F(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _radius;                                                   // 0x0230(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GVS0[0x4];                                     // 0x0234(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<TWeakObjectPtr<class UTerrorRadiusReceiverComponent>, bool> _receiversInTerrorRadiusMap;                               // 0x0238(0x0050) (Transient, NativeAccessSpecifierPrivate)
	TMap<TWeakObjectPtr<class UTerrorRadiusReceiverComponent>, bool> _receiversPhysicallyInRadiusRangeMap;                      // 0x0288(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DG02[0x18];                                    // 0x02D8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TerrorRadiusEmitterComponent");
		return ptr;
	}



	void SetTerrorRadius(float Radius);
	void SetSimulatedFixedDistance(float Distance);
	void SetIsActive(bool Active);
	void SetImitatesAudioOnly(bool imitatesAudioOnly);
	void SetGeneratesChaseMusic(bool generatesChaseMusic);
	void RemoveEmitterFromList();
	bool IsInTerrorRadius(class UTerrorRadiusReceiverComponent* receiver);
	float GetSimulatedFixedDistance();
	float GetRadius();
	bool GetIsActive();
	bool GetImitatesAudioOnly();
	bool GetGeneratesChaseMusic();
};

// Class DeadByDaylight.SlasherTREmitterComponent
// 0x00C0 (FullSize[0x03B0] - InheritedSize[0x02F0])
class USlasherTREmitterComponent : public UTerrorRadiusEmitterComponent
{
public:
	unsigned char                                      UnknownData_F6YL[0xC0];                                    // 0x02F0(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SlasherTREmitterComponent");
		return ptr;
	}



	void SetBaseTerrorRadius(float baseTerrorRadius, bool progressive);
};

// Class DeadByDaylight.SoftBanManager
// 0x0040 (FullSize[0x0070] - InheritedSize[0x0030])
class USoftBanManager : public UObject
{
public:
	unsigned char                                      UnknownData_ZMCR[0x40];                                    // 0x0030(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SoftBanManager");
		return ptr;
	}



};

// Class DeadByDaylight.SoundIndicatorUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USoundIndicatorUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SoundIndicatorUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.SpawnElement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USpawnElement : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SpawnElement");
		return ptr;
	}



};

// Class DeadByDaylight.SpecialEventGameplaySpawnerComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class USpecialEventGameplaySpawnerComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SpecialEventGameplaySpawnerComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SpecialEventLoadingScreen
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class USpecialEventLoadingScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_C1NZ[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SpecialEventLoadingScreen");
		return ptr;
	}



	void OnLoadingTextTimerComplete();
};

// Class DeadByDaylight.specialeventmanager
// 0x02C0 (FullSize[0x02F0] - InheritedSize[0x0030])
class Uspecialeventmanager : public UObject
{
public:
	unsigned char                                      UnknownData_AU3A[0x80];                                    // 0x0030(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USpecialEventsContainer*                     _specialEventsContainer;                                   // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WM6W[0x238];                                   // 0x00B8(0x0238) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.specialeventmanager");
		return ptr;
	}



	DeadByDaylight_ESpecialEventStatus STATIC_GetStatus(const struct FCombinedSpecialEventData& SpecialEventData);
	bool STATIC_GetSpecialEvent(class UObject* WorldContextObject, const struct FName& EventId, struct FCombinedSpecialEventData* outSpecialEventData);
	bool STATIC_GetCurrentSpecialEvent(class UObject* WorldContextObject, struct FCombinedSpecialEventData* outSpecialEventData);
};

// Class DeadByDaylight.SpecialEventsContainer
// 0x0118 (FullSize[0x0148] - InheritedSize[0x0030])
class USpecialEventsContainer : public UObject
{
public:
	unsigned char                                      UnknownData_MHY3[0x118];                                   // 0x0030(0x0118) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SpecialEventsContainer");
		return ptr;
	}



};

// Class DeadByDaylight.SplashScreen
// 0x0018 (FullSize[0x0138] - InheritedSize[0x0120])
class USplashScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_ILNF[0x18];                                    // 0x0120(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SplashScreen");
		return ptr;
	}



	void UpdateShadersPrecompilingProgression(float percentageCompleted);
	void UpdateLoadingProgression(const struct FString& loadingProgression);
	void UpdateDownloadProgression(const struct FDownloadProgression& DownloadProgression);
	void ShowShadersPrecompilingProgression();
	void ShowSaveGamePopup();
	void ShowPressKeyState();
	void ShowLoadingState();
	void ShowDownloadProgression();
	void ShowCharacterSlideShow(TArray<struct FCharacterSlideData>* characterSlides);
	void SetVersionText(const struct FString& versionText);
	void OnSaveGamePopupComplete();
	void HideShadersPrecompilingProgression();
	void HidePressKeyState();
	void HideLoadingState();
	void HideDownloadProgression();
	void HideCharacterSlideShow();
};

// Class DeadByDaylight.SplashScreenScaleform
// 0x0000 (FullSize[0x0138] - InheritedSize[0x0138])
class USplashScreenScaleform : public USplashScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SplashScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.SplashScreenUMG
// 0x0008 (FullSize[0x0140] - InheritedSize[0x0138])
class USplashScreenUMG : public USplashScreen
{
public:
	class UUMGSplashScreen*                            _splashScreen;                                             // 0x0138(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SplashScreenUMG");
		return ptr;
	}



	void TriggerAnyKey();
};

// Class DeadByDaylight.SpringArmCameraTargetingStrategy
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class USpringArmCameraTargetingStrategy : public UBaseCameraTargetingStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SpringArmCameraTargetingStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.StadiaProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UStadiaProfileDAL : public UPS4GRDKBaseProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StadiaProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.StadiaVirtualKeyboardManager
// 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
class UStadiaVirtualKeyboardManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_R6J2[0x38];                                    // 0x0038(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StadiaVirtualKeyboardManager");
		return ptr;
	}



};

// Class DeadByDaylight.StakeOutPerk
// 0x0018 (FullSize[0x03E8] - InheritedSize[0x03D0])
class UStakeOutPerk : public UPerk
{
public:
	TArray<int>                                        MaxTokensByLevel;                                          // 0x03D0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              TokenChargeTime;                                           // 0x03E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M6LD[0x4];                                     // 0x03E4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StakeOutPerk");
		return ptr;
	}



	void Server_ConsumeToken();
	void Local_BroadcastConsumeToken();
};

// Class DeadByDaylight.StalkedComponent
// 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
class UStalkedComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnBeingStalkedChanged;                                     // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              _maxStalkPoints;                                           // 0x00C8(0x0004) (Edit, Net, ZeroConstructor, EditConst, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _stalkableWhileSightingStalker;                            // 0x00CC(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isBeingStalked;                                           // 0x00CD(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0MSF[0x2];                                     // 0x00CE(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChargeableComponent*                        _stalkPointsChargeable;                                    // 0x00D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U0IP[0x58];                                    // 0x00D8(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StalkedComponent");
		return ptr;
	}



	void OnRep_MaxStalkPoints();
	void OnRep_IsBeingStalked();
	void OnBeingStalkedChanged__DelegateSignature(bool isBeingStalked);
	bool HasStalkPoints();
};

// Class DeadByDaylight.StalkerComponent
// 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
class UStalkerComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_Z0YW[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _distributeStalkRate;                                      // 0x00E0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canStalkWhileInChase;                                     // 0x00E1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2RD0[0x6];                                     // 0x00E2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UStalkedComponent*>                   _playerStalkedComponents;                                  // 0x00E8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JDQ7[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChargeableComponent*                        _stalkPointsChargeable;                                    // 0x0108(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I5DN[0x20];                                    // 0x0110(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StalkerComponent");
		return ptr;
	}



	void OnStalkPointsAdded__DelegateSignature(float stalkPoints);
	void OnPlayerBeingStalkedChanged(bool isBeingStalked);
	bool IsStalkingSomeone();
	bool HasMaxStalkPoints();
	float GetTotalStalkingPoints();
	float GetScoreMultiplier();
	float GetPercentStalkingPoints();
	float GetMaxStalkingPoints();
	bool CanStalk();
};

// Class DeadByDaylight.StandDisplayable
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UStandDisplayable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StandDisplayable");
		return ptr;
	}



};

// Class DeadByDaylight.StartLitActivationTimerRemainingCooldownElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UStartLitActivationTimerRemainingCooldownElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StartLitActivationTimerRemainingCooldownElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.StartScreenBase
// 0x0000 (FullSize[0x0238] - InheritedSize[0x0238])
class AStartScreenBase : public ALevelScriptActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StartScreenBase");
		return ptr;
	}



	void TravelToMenu();
	void BeginDestroyTravelSequence();
};

// Class DeadByDaylight.StartupInitializerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UStartupInitializerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StartupInitializerInterface");
		return ptr;
	}



};

// Class DeadByDaylight.StateTagUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UStateTagUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StateTagUtilities");
		return ptr;
	}



	void STATIC_RemoveStateTagToPlayer(class ADBDPlayer* Player, const struct FGameplayTag& Tag);
	bool STATIC_HasStateTag(class ADBDPlayer* Player, const struct FGameplayTag& Tag);
	bool STATIC_HasAnyStateTag(class ADBDPlayer* Player, const struct FGameplayTagContainer& Tag);
	bool STATIC_CurrentInteractionHasStateTag(class ADBDPlayer* Player, const struct FGameplayTag& Tag);
	bool STATIC_CurrentInteractionHasAnyStateTag(class ADBDPlayer* Player, const struct FGameplayTagContainer& Tags);
	void STATIC_AddStateTagToPlayer(class ADBDPlayer* Player, const struct FGameplayTag& Tag);
};

// Class DeadByDaylight.StationaryPointLightComponent
// 0x0000 (FullSize[0x03C0] - InheritedSize[0x03C0])
class UStationaryPointLightComponent : public UPointLightComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StationaryPointLightComponent");
		return ptr;
	}



};

// Class DeadByDaylight.StationarySpotLightComponent
// 0x0000 (FullSize[0x03D0] - InheritedSize[0x03D0])
class UStationarySpotLightComponent : public USpotLightComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StationarySpotLightComponent");
		return ptr;
	}



};

// Class DeadByDaylight.StatusEffectCollectionComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UStatusEffectCollectionComponent : public UActorComponent
{
public:
	TArray<class UStatusEffect*>                       _array;                                                    // 0x00B8(0x0010) (ExportObject, Net, ZeroConstructor, Transient, RepNotify, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UStatusEffect*>                       _local_oldArray;                                           // 0x00C8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_969F[0x18];                                    // 0x00D8(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StatusEffectCollectionComponent");
		return ptr;
	}



	void OnRep_Array();
};

// Class DeadByDaylight.StatusEffectDataAsset
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UStatusEffectDataAsset : public UGameplayModifierContainerDataAsset
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StatusEffectDataAsset");
		return ptr;
	}



};

// Class DeadByDaylight.StatusView
// 0x0070 (FullSize[0x02A0] - InheritedSize[0x0230])
class AStatusView : public AActor
{
public:
	bool                                               IsActive;                                                  // 0x0230(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SUNE[0x3];                                     // 0x0231(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                Level;                                                     // 0x0234(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              PercentageFill;                                            // 0x0238(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsClockwiseTimer;                                          // 0x023C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JZKK[0x5B];                                    // 0x023D(0x005B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _localDBDPlayer;                                           // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StatusView");
		return ptr;
	}



	void ResetView(class ADBDPlayer* DBDPlayer);
	void FireNotification(const struct FStatusViewSource& StatusViewSource);
};

// Class DeadByDaylight.SteamProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class USteamProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SteamProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.StorefrontConfiguration
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UStorefrontConfiguration : public UDataAsset
{
public:
	TMap<DeadByDaylight_EStorefrontState, struct FStorefrontStateData> States;                                                    // 0x0038(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StorefrontConfiguration");
		return ptr;
	}



};

// Class DeadByDaylight.StoreScreen
// 0x0218 (FullSize[0x0338] - InheritedSize[0x0120])
class UStoreScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_9IDS[0x218];                                   // 0x0120(0x0218) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StoreScreen");
		return ptr;
	}



	void OnUnlockWithCurrency(int currencyId, const struct FString& combinedItem);
	void OnUnlockDlc(const struct FString& DLCId);
	void OnTabSelected(int Index);
	void OnStorySelected();
	void OnStoreItemSelected(const struct FString& ItemId);
	void OnStoreItemLinkSelected(const struct FString& ItemId);
	void OnStoreCharacterSelected(int characterIndex);
	void OnStoreCatalogCategorySelected(int categoryIndex);
	void OnSearchInputChanged(const struct FString& searchInput);
	void OnRotateCharacter(float mouseDistanceChange);
	void OnPromoCodeButtonClicked();
	void OnNotEnoughTokens();
	void OnMarketSlotButtonClick(int SlotIndex);
	void OnFiltersUpdated(bool All, bool rarityCommon, bool rarityUncommon, bool rarityRare, bool rarityVeryRare, bool rarityUltraRare, bool rarityArtifact, bool rarityLegendary, bool raritySpecialEvent, bool includeAllOwnedItems);
	void OnFeaturedStoreItemSelected(const struct FString& ItemId, bool isOutfit);
	void OnFeaturedCharacterSelected(int characterIndex);
	void OnFeaturedButtonSelected(int linkIndex);
	void OnFeaturedBannerItemSelected(const struct FString& ItemId, bool isOutfit);
	void OnFeaturedBannerDlcSelected(const struct FString& DLCId);
	void OnEquipItem(const struct FString& ItemId);
	void OnCatalogSelected();
	void OnBuyCurrencyBundle(int Index);
};

// Class DeadByDaylight.StoreScreenScaleform
// 0x0000 (FullSize[0x0338] - InheritedSize[0x0338])
class UStoreScreenScaleform : public UStoreScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StoreScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.StoreScreenUMG
// 0x0068 (FullSize[0x03A0] - InheritedSize[0x0338])
class UStoreScreenUMG : public UStoreScreen
{
public:
	class UUMGCustomizationScreenWidget*               _customizationScreen;                                      // 0x0338(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGAtlantaStoreScreen*                      _storeScreen;                                              // 0x0340(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X0NA[0x58];                                    // 0x0348(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StoreScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.StreamVideoFactory
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UStreamVideoFactory : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StreamVideoFactory");
		return ptr;
	}



};

// Class DeadByDaylight.StreamVideoManager
// 0x00C0 (FullSize[0x00F0] - InheritedSize[0x0030])
class UStreamVideoManager : public UObject
{
public:
	unsigned char                                      UnknownData_3STJ[0xC0];                                    // 0x0030(0x00C0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StreamVideoManager");
		return ptr;
	}



	void OnStreamVideoDone();
};

// Class DeadByDaylight.StreamVideoPlayer
// 0x0080 (FullSize[0x02B0] - InheritedSize[0x0230])
class AStreamVideoPlayer : public AActor
{
public:
	unsigned char                                      UnknownData_PN55[0x20];                                    // 0x0230(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMediaPlayer*                                MediaPlayer;                                               // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMediaSoundComponent*                        SoundComponent;                                            // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGStreamVideoWidget*                       StreamVideoWidget;                                         // 0x0260(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UStreamMediaSource*                          StreamMediaSource;                                         // 0x0268(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                             _audioComponent;                                           // 0x0270(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NTNC[0x38];                                    // 0x0278(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StreamVideoPlayer");
		return ptr;
	}



	void OnVideoAssetLoaded();
	void OnSkipButtonTriggered();
	void OnMediaOpened(const struct FString& OpenedUrl);
	void OnMediaClosed();
	void OnEndReached();
};

// Class DeadByDaylight.StreamVideoScreenUMG
// 0x0020 (FullSize[0x0140] - InheritedSize[0x0120])
class UStreamVideoScreenUMG : public UScreenBase
{
public:
	unsigned char                                      UnknownData_H27R[0x20];                                    // 0x0120(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StreamVideoScreenUMG");
		return ptr;
	}



	void OnCloseTriggered();
};

// Class DeadByDaylight.StreamVideoSubsystem
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UStreamVideoSubsystem : public UGameInstanceSubsystem
{
public:
	class UStreamVideoManager*                         StreamVideoManager;                                        // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStreamVideoFactory*                         StreamVideoFactory;                                        // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StreamVideoSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.SubscriptionRewardDataAsset
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class USubscriptionRewardDataAsset : public UPrimaryDataAsset
{
public:
	TMap<DeadByDaylight_ESubscriptionRewardType, struct FSubscriptionRewardTypeData> Data;                                                      // 0x0038(0x0050) (Edit, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SubscriptionRewardDataAsset");
		return ptr;
	}



};

// Class DeadByDaylight.SubtitlesManager
// 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
class USubtitlesManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_1UZI[0x38];                                    // 0x0038(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SubtitlesManager");
		return ptr;
	}



	int STATIC_PostAkEventWithSubtitles(class UAkGameObject* Target, TArray<struct FAkEventWithSubtitle> akEventRandomizer, float maxSubtitleDistance, int CallbackMask, const struct FScriptDelegate& PostEventCallback, TArray<struct FAkExternalSourceInfo> ExternalSources);
};

// Class DeadByDaylight.SurveillancePerk
// 0x0008 (FullSize[0x03D8] - InheritedSize[0x03D0])
class USurveillancePerk : public UPerk
{
public:
	float                                              generatorRegressionStopRevealTime;                         // 0x03D0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BEY5[0x4];                                     // 0x03D4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurveillancePerk");
		return ptr;
	}



	void HandleGeneratorIsDamagedChanged(class AGenerator* Generator, class ADBDPlayer* Player);
};

// Class DeadByDaylight.SurviveTimerScoreEventComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class USurviveTimerScoreEventComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_L8ED[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurviveTimerScoreEventComponent");
		return ptr;
	}



	void Authority_OnGameStarted();
};

// Class DeadByDaylight.SurvivorAtlantaTutorialLevel
// 0x0010 (FullSize[0x0338] - InheritedSize[0x0328])
class ASurvivorAtlantaTutorialLevel : public AAtlantaTutorialLevel
{
public:
	unsigned char                                      UnknownData_Q5EY[0x10];                                    // 0x0328(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurvivorAtlantaTutorialLevel");
		return ptr;
	}



	void SetSlasherPlayer(class ASlasherPlayer* SlasherPlayer);
	class ASlasherPlayer* GetSlasherPlayer();
	class ADBDAIPlayerController* GetSlasherAIPlayerController();
	class ACamperPlayer* GetCamperPlayer();
};

// Class DeadByDaylight.SurvivorAttackableComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class USurvivorAttackableComponent : public UAttackableComponent
{
public:
	unsigned char                                      UnknownData_Z6DJ[0x28];                                    // 0x00B8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurvivorAttackableComponent");
		return ptr;
	}



	void Multicast_HitCosmetic_NonLocal(class ADBDPlayer* Attacker, DBDSharedTypes_EAttackType attackType, bool causedKO, bool isWeaponHit);
	void Multicast_HitCosmetic(class AActor* Attacker, DBDSharedTypes_EAttackType attackType, bool causedKO, bool isWeaponHit);
	void Authority_HitCosmetic(class AActor* Attacker, DBDSharedTypes_EAttackType attackType, bool causeKO, bool isWeaponHit);
};

// Class DeadByDaylight.SurvivorCollectableOutlineUpdateStrategy
// 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
class USurvivorCollectableOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _outlineColor;                                             // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _nearlyConsumedColor;                                      // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurvivorCollectableOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.SurvivorDisconnectionComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class USurvivorDisconnectionComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurvivorDisconnectionComponent");
		return ptr;
	}



	void Authority_OnPlayerDisconnected(class ADBDPlayer* Player);
};

// Class DeadByDaylight.FootstepsPerceptionComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UFootstepsPerceptionComponent : public UActorComponent
{
public:
	TArray<struct FGameplayTag>                        _allowFootstepsSeenPerkFlags;                              // 0x00B8(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FGameplayTag>                        _disallowFootstepsSeenPerkFlags;                           // 0x00C8(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JGH8[0x8];                                     // 0x00D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FootstepsPerceptionComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SurvivorFootstepsPerceptionComponent
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class USurvivorFootstepsPerceptionComponent : public UFootstepsPerceptionComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurvivorFootstepsPerceptionComponent");
		return ptr;
	}



};

// Class DeadByDaylight.SurvivorHitSprintEffect
// 0x0000 (FullSize[0x0350] - InheritedSize[0x0350])
class USurvivorHitSprintEffect : public UStatusEffect
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurvivorHitSprintEffect");
		return ptr;
	}



};

// Class DeadByDaylight.SurvivorOutlineUpdateStrategy
// 0x0068 (FullSize[0x0128] - InheritedSize[0x00C0])
class USurvivorOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _inDangerColorForSurvivor;                                 // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _noRecoveryDyingColor;                                     // 0x00D0(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _fullRecoveryDyingColor;                                   // 0x00E0(0x0010) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _saviourColorForSurvivor;                                  // 0x00F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _colorForKiller;                                           // 0x0100(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture*                                    _revealedGradient;                                         // 0x0110(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTexture*                                    _nonRevealedGradient;                                      // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _trappedIconActive;                                        // 0x0120(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KNIX[0x7];                                     // 0x0121(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurvivorOutlineUpdateStrategy");
		return ptr;
	}



	void SetTrappedIconActive(bool value);
	bool IsBlockingAuraReadingFromKiller(class ASlasherPlayer* killer);
	bool STATIC_IsActivelyHidingAuraFromKiller(class ACamperPlayer* Subject, class ASlasherPlayer* witness);
	TArray<class UGameplayModifierContainer*> STATIC_GetEffectsProtectingFromKillerAuraReading(class ACamperPlayer* Subject, class ASlasherPlayer* killer);
};

// Class DeadByDaylight.SurvivorPlagueEffect
// 0x01E8 (FullSize[0x0538] - InheritedSize[0x0350])
class USurvivorPlagueEffect : public UStatusEffect
{
public:
	unsigned char                                      UnknownData_EWSQ[0x48];                                    // 0x0350(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _sicknessAmount;                                           // 0x0398(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _sicknessCap;                                              // 0x039C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vomitSlowDuration;                                        // 0x03A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _vomitSlowAmount;                                          // 0x03A4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<float>                                      _sicknessThresholds;                                       // 0x03A8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _wasRecentlyHitByVomit;                                    // 0x03B8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HLI3[0x7];                                     // 0x03B9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             _nonNauseatingInteractions;                                // 0x03C0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_C6VN[0x18];                                    // 0x03D0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTunableStat                                _sicknessGainPerSecondFromInfectedInteractable;            // 0x03E8(0x0080) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RENZ[0x90];                                    // 0x0468(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _debugMode;                                                // 0x04F8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CKSN[0x3F];                                    // 0x04F9(0x003F) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurvivorPlagueEffect");
		return ptr;
	}



	void RefreshSicknessGainValues();
	void OnSurvivorVomit_Aesthetic();
	void OnSurvivorBecomesInfected_Aesthetic();
	void OnSicknessCured_Aesthetic();
	void OnSicknessChanged_Aesthetic(float newSickness);
	void OnMaxSicknessReached_Aesthetic();
	void OnHitByVomit(bool isSuperVomit);
	void Multicast_OnSurvivorVomit();
	void Multicast_OnSurvivorBecomesInfected();
	void Multicast_OnSicknessCured();
	void Multicast_OnSicknessChanged(float newSickness);
	void Multicast_OnMaxSicknessReached();
	void Multicast_AddOnScreenDebugMessage(uint64_t Key, float Duration, const struct FColor& DisplayColor, const struct FString& debugMessage);
	bool IsInfected();
	bool IsDebugModeActive();
	bool HasMaxLevelSickness();
	TArray<float> GetSicknessThresholds();
	float GetSicknessPercentage();
	unsigned char GetSicknessLevel();
	float GetSicknessAmount();
	unsigned char GetMaxSicknessLevel();
	void Authority_ResetSickness(float newSickness);
	void Authority_OnHitByVomitProjectileAesthetic();
	void Authority_OnHitByVomitProjectile(float sicknessToAdd);
	void Authority_OnHitBySuperVomitProjectile();
	void Authority_InfectInteractable(class AInteractable* Interactable);
	void Authority_AddSickness(float sicknessToAdd);
};

// Class DeadByDaylight.SurvivorStatusInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USurvivorStatusInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SurvivorStatusInterface");
		return ptr;
	}



};

// Class DeadByDaylight.SwitchProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class USwitchProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SwitchProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.TallyScreen
// 0x00D8 (FullSize[0x01F8] - InheritedSize[0x0120])
class UTallyScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_N9GG[0xD8];                                    // 0x0120(0x00D8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TallyScreen");
		return ptr;
	}



	void OnSpectateButtonClick();
	void OnShowSlasherInfos();
	void OnReportPlayerButtonClick(const struct FString& playerID);
	void OnRateMatch(int rateValue);
	void OnPlayerOptionClick(const struct FString& krakenId, const struct FString& playerID, unsigned char Option);
	void OnPlayerInfoClick(const struct FString& playerID);
	void OnLevelingSequenceComplete();
	void OnLeaveButtonClick();
	void OnCustomerSupportButtonClick();
	void OnBloodwebButtonClick();
};

// Class DeadByDaylight.TallyScreenScaleform
// 0x0000 (FullSize[0x01F8] - InheritedSize[0x01F8])
class UTallyScreenScaleform : public UTallyScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TallyScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.TallyScreenUMG
// 0x0008 (FullSize[0x0200] - InheritedSize[0x01F8])
class UTallyScreenUMG : public UTallyScreen
{
public:
	class UUMGAtlantaTallyScreen*                      _atlTallyScreen;                                           // 0x01F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TallyScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.TallyUIUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTallyUIUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TallyUIUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.TeachableTooltipWidget
// 0x0020 (FullSize[0x0358] - InheritedSize[0x0338])
class UTeachableTooltipWidget : public UBaseTooltipWidget
{
public:
	class UTextBlock*                                  SubTitleLabel;                                             // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      HeaderSmoke;                                               // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGHtmlRichText*                            EffectText;                                                // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGHtmlRichText*                            AvailabilityText;                                          // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TeachableTooltipWidget");
		return ptr;
	}



};

// Class DeadByDaylight.NoiseIndicatorWidget
// 0x0000 (FullSize[0x0348] - InheritedSize[0x0348])
class UNoiseIndicatorWidget : public UBaseIndicatorWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NoiseIndicatorWidget");
		return ptr;
	}



	void SetIndicatorPanel(class UCanvasPanel* panel);
};

// Class DeadByDaylight.TerrorRadiusIndicatorWidget
// 0x0008 (FullSize[0x0350] - InheritedSize[0x0348])
class UTerrorRadiusIndicatorWidget : public UNoiseIndicatorWidget
{
public:
	float                                              _anchorY;                                                  // 0x0348(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R470[0x4];                                     // 0x034C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TerrorRadiusIndicatorWidget");
		return ptr;
	}



	void SetSoundDistancePercentage(float distancePercentage);
};

// Class DeadByDaylight.TerrorRadiusReceiverComponent
// 0x00C8 (FullSize[0x0180] - InheritedSize[0x00B8])
class UTerrorRadiusReceiverComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnIsInTerrorRadiusChanged;                                 // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCurveFloat*                                 _trVerticalDistanceFactor;                                 // 0x00C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _heartbeatMasterVolumeInterpolationSpeed;                  // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R5K4[0xAC];                                    // 0x00D4(0x00AC) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TerrorRadiusReceiverComponent");
		return ptr;
	}



	bool IsInTerrorRadiusRange();
	bool IsInTerrorRadius();
};

// Class DeadByDaylight.TheGhostUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTheGhostUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TheGhostUtilities");
		return ptr;
	}



	bool STATIC_IsKillerStealth(class AActor* killer);
};

// Class DeadByDaylight.TickInEditorSkeletalMesh
// 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
class ATickInEditorSkeletalMesh : public ASkeletalMeshActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TickInEditorSkeletalMesh");
		return ptr;
	}



};

// Class DeadByDaylight.TileBank
// 0x0100 (FullSize[0x0130] - InheritedSize[0x0030])
class UTileBank : public UObject
{
public:
	unsigned char                                      UnknownData_OYQC[0xF0];                                    // 0x0030(0x00F0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ATile*>                               _allTileBlueprints;                                        // 0x0120(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TileBank");
		return ptr;
	}



};

// Class DeadByDaylight.TileEventComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UTileEventComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_JDDE[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TileEventComponent");
		return ptr;
	}



};

// Class DeadByDaylight.TileMatrix
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UTileMatrix : public UObject
{
public:
	TArray<struct FArrayOfATile>                       _matrix;                                                   // 0x0030(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ATile*>                               _tiles;                                                    // 0x0040(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ATile*>                               _extraTiles;                                               // 0x0050(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FQuadrantInfo>                       _quadInfoArray;                                            // 0x0060(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FArrayOfInt32>                       _quadIndexMatrix;                                          // 0x0070(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TileMatrix");
		return ptr;
	}



};

// Class DeadByDaylight.DBDCurrencyConversionTunables
// 0x0050 (FullSize[0x0088] - InheritedSize[0x0038])
class UDBDCurrencyConversionTunables : public UDataAsset
{
public:
	TMap<DBDSharedTypes_ECurrencyType, struct FCurrencyConversion> Currencies;                                                // 0x0038(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDCurrencyConversionTunables");
		return ptr;
	}



};

// Class DeadByDaylight.NatObjectRandomizer
// 0x0018 (FullSize[0x0240] - InheritedSize[0x0228])
class UNatObjectRandomizer : public UObjectRandomizer
{
public:
	TArray<struct FPotentialRandomizableSpawnerPool>   PotentialRandomizableSpawnerPools;                         // 0x0228(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_R1A4[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NatObjectRandomizer");
		return ptr;
	}



};

// Class DeadByDaylight.NavArea_Danger
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UNavArea_Danger : public UNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NavArea_Danger");
		return ptr;
	}



};

// Class DeadByDaylight.NavArea_Slasher
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UNavArea_Slasher : public UNavArea
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NavArea_Slasher");
		return ptr;
	}



};

// Class DeadByDaylight.NavigationQueryFilter_EvadeLoop
// 0x0238 (FullSize[0x0288] - InheritedSize[0x0050])
class UNavigationQueryFilter_EvadeLoop : public UNavigationQueryFilter
{
public:
	unsigned char                                      UnknownData_UKZ7[0x238];                                   // 0x0050(0x0238) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NavigationQueryFilter_EvadeLoop");
		return ptr;
	}



};

// Class DeadByDaylight.NavigationScreen
// 0x0190 (FullSize[0x02B0] - InheritedSize[0x0120])
class UNavigationScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_VHFF[0x190];                                   // 0x0120(0x0190) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NavigationScreen");
		return ptr;
	}



	void OnToggleChatVisibility();
	void OnStartButtonClick();
	void OnSettingsClick();
	void OnSendChatMsgButtonClick(const struct FString& Message);
	void OnReadyButtonClick();
	void OnPlayerOptionSelected(const struct FString& krakenId, const struct FString& playerID, unsigned char Option);
	void OnPlayerInfoClick(int playerID);
	void OnMatchManagementButtonClick();
	void OnMatchMakingBanTimeout();
	void OnInviteFriendClick();
	void OnDailyRitualsClick();
	void OnCrowdPlayButtonClick();
	void OnChatInputMouseOver(bool IsMouseOver);
	void OnCharacterSwapArrowClick(bool isNext);
	void OnCharacterInfoClick();
	void OnCancelButtonClick();
};

// Class DeadByDaylight.NavigationScreenScaleform
// 0x0000 (FullSize[0x02B0] - InheritedSize[0x02B0])
class UNavigationScreenScaleform : public UNavigationScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NavigationScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.NavigationScreenUMG
// 0x0010 (FullSize[0x02C0] - InheritedSize[0x02B0])
class UNavigationScreenUMG : public UNavigationScreen
{
public:
	unsigned char                                      UnknownData_JNKZ[0x8];                                     // 0x02B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGLobbyScreen*                             _atlNavigationScreen;                                      // 0x02B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NavigationScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.NewContentPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UNewContentPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NewContentPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.NewsContentManager
// 0x00D8 (FullSize[0x0108] - InheritedSize[0x0030])
class UNewsContentManager : public UObject
{
public:
	unsigned char                                      UnknownData_T1XB[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YRPW[0xB8];                                    // 0x0050(0x00B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NewsContentManager");
		return ptr;
	}



};

// Class DeadByDaylight.NoAccumulationSpawnerStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UNoAccumulationSpawnerStrategy : public USpawnerStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NoAccumulationSpawnerStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.NoiseIndicatorEmitterInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UNoiseIndicatorEmitterInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NoiseIndicatorEmitterInterface");
		return ptr;
	}



};

// Class DeadByDaylight.NotExhaustedActivationTimerElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UNotExhaustedActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.NotExhaustedActivationTimerElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ObjectPlacementUpdateStrategy
// 0x0020 (FullSize[0x0050] - InheritedSize[0x0030])
class UObjectPlacementUpdateStrategy : public UObject
{
public:
	unsigned char                                      UnknownData_XDBG[0x20];                                    // 0x0030(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ObjectPlacementUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.AlwaysUseCurrentLocationPlacementStrategy
// 0x0000 (FullSize[0x0050] - InheritedSize[0x0050])
class UAlwaysUseCurrentLocationPlacementStrategy : public UObjectPlacementUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AlwaysUseCurrentLocationPlacementStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.BufferLastValidLocationObjectPlacementStrategy
// 0x0008 (FullSize[0x0058] - InheritedSize[0x0050])
class UBufferLastValidLocationObjectPlacementStrategy : public UObjectPlacementUpdateStrategy
{
public:
	float                                              _maxDistanceToOwner;                                       // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X0N6[0x4];                                     // 0x0054(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.BufferLastValidLocationObjectPlacementStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ObjectPlacementValidationStrategy
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UObjectPlacementValidationStrategy : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ObjectPlacementValidationStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DefaultObjectPlacementValidationStrategy
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UDefaultObjectPlacementValidationStrategy : public UObjectPlacementValidationStrategy
{
public:
	struct FVector                                     _objectPlacementRaycastStart;                              // 0x00B8(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector                                     _objectPlacementRaycastEnd;                                // 0x00C4(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FFloatRange                                 _objectHeightRangeAroundBaseLocation;                      // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DefaultObjectPlacementValidationStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ObjectPlacementValidationWithRestrictionStrategy
// 0x0010 (FullSize[0x00F0] - InheritedSize[0x00E0])
class UObjectPlacementValidationWithRestrictionStrategy : public UDefaultObjectPlacementValidationStrategy
{
public:
	TArray<class URestrictedPlacementAreaStrategy*>    _restrictedAreas;                                          // 0x00E0(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, NoClear, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ObjectPlacementValidationWithRestrictionStrategy");
		return ptr;
	}



	void OnLevelReadyToPlay();
};

// Class DeadByDaylight.ObjectPlacerComponent
// 0x0050 (FullSize[0x0260] - InheritedSize[0x0210])
class UObjectPlacerComponent : public USceneComponent
{
public:
	class UStaticMeshComponent*                        _objectMesh;                                               // 0x0210(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _socketName;                                               // 0x0218(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _indicatorOffsetY;                                         // 0x0224(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _indicatorOffsetX;                                         // 0x0228(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _itemObjectId;                                             // 0x022C(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _showIndicator;                                            // 0x0238(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _stayActiveWhileItemInUse;                                 // 0x0239(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E67P[0xE];                                     // 0x023A(0x000E) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObjectPlacementUpdateStrategy*              _objectPlacementUpdateStrategy;                            // 0x0248(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObjectPlacementValidationStrategy*          _objectPlacementValidationStrategy;                        // 0x0250(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoClear, IsPlainOldData, NoDestructor, PersistentInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AM5D[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ObjectPlacerComponent");
		return ptr;
	}



	void SetObjectMesh(class UStaticMeshComponent* objectMesh);
	void SetIndicatorOffsetY(float Y);
	void SetIndicatorOffsetX(float X);
	bool IsPlacementValid();
	struct FRotator GetObjectPlacementRotation();
	struct FVector GetObjectPlacementLocation();
	void ActivateObjectPlacement(bool Active);
};

// Class DeadByDaylight.DBDCustomizationTool
// 0x0D20 (FullSize[0x0F50] - InheritedSize[0x0230])
class ADBDCustomizationTool : public AActor
{
public:
	unsigned char                                      OverallLightingClass[0x30];                                // 0x0230(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FDBDCustomizationToolData                   CustomizationData;                                         // 0x0260(0x0CD8) (Edit, Protected, NativeAccessSpecifierProtected)
	TArray<class AActor*>                              _spawnedActors;                                            // 0x0F38(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KJ9K[0x8];                                     // 0x0F48(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDCustomizationTool");
		return ptr;
	}



};

// Class DeadByDaylight.RitualEvaluatorBase
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class URitualEvaluatorBase : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.RitualEvaluatorBase");
		return ptr;
	}



	bool EvaluateEvent(const struct FRitualEvent& RitualEvent);
};

// Class DeadByDaylight.DBDDateTimeProvider
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDDateTimeProvider : public UDateTimeProvider
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDDateTimeProvider");
		return ptr;
	}



};

// Class DeadByDaylight.DBDDebugCameraController
// 0x0000 (FullSize[0x0690] - InheritedSize[0x0690])
class ADBDDebugCameraController : public ADebugCameraController
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDDebugCameraController");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGameMode
// 0x00A8 (FullSize[0x0418] - InheritedSize[0x0370])
class ADBDGameMode : public ADBDBaseMatchGameMode
{
public:
	struct FScriptMulticastDelegate                    OnPlayersLoadoutsCreated;                                  // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, NativeAccessSpecifierProtected)
	class UClass*                                      _killerPlayerControllerClass;                              // 0x0380(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      _survivorPlayerControllerClass;                            // 0x0388(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class APlayerStart*>                        _initialPlayerStarts;                                      // 0x0390(0x0010) (ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P2PQ[0x4C];                                    // 0x03A0(0x004C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                KillerCreationPositionOrder;                               // 0x03EC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_MQ3H[0x28];                                    // 0x03F0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGameMode");
		return ptr;
	}



	void SetEscapeOpened(bool Val);
	void RegisterOnPlayerStateChanged(class APlayerState* PlayerState);
	void OnPlayergameStateChanged(DBDSharedTypes_EGameState playerGameState);
	void LevelLoaded(const struct FString& LevelName);
	bool IsEscapeOpen();
	void HostGame();
	void DBD_BlockCamperEscape(bool shouldBlock);
	bool AreLoadoutsCreated();
};

// Class DeadByDaylight.DBDDebugGameMode
// 0x00C8 (FullSize[0x04E0] - InheritedSize[0x0418])
class ADBDDebugGameMode : public ADBDGameMode
{
public:
	unsigned char                                      UnknownData_1MVH[0x8];                                     // 0x0418(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<class ADBDPlayerController*, int>             LoadoutIndex;                                              // 0x0420(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      PlayersWithItems[0x50];                                    // 0x0470(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<struct FCamperLoadout>                      CamperPawnOverrides;                                       // 0x04C0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FSlasherLoadout>                     SlasherPawnOverrides;                                      // 0x04D0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDDebugGameMode");
		return ptr;
	}



};

// Class DeadByDaylight.DBDDebugInputComponent
// 0x0020 (FullSize[0x00D8] - InheritedSize[0x00B8])
class UDBDDebugInputComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_BR7Y[0x20];                                    // 0x00B8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDDebugInputComponent");
		return ptr;
	}



	void DBD_ItsAlive(bool aliveEnabled);
};

// Class DeadByDaylight.DBDDecalComponent
// 0x00C0 (FullSize[0x0310] - InheritedSize[0x0250])
class UDBDDecalComponent : public UDecalComponent
{
public:
	TArray<class UStaticMeshComponent*>                staticMeshDecals;                                          // 0x0250(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TMap<class UStaticMeshComponent*, class UGlassStaticMesh*> staticMeshGlass;                                           // 0x0260(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<class UMaterialInstanceDynamic*>            materialInstances;                                         // 0x02B0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GDYJ[0x50];                                    // 0x02C0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDDecalComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDDesignTunables
// 0x0210 (FullSize[0x0240] - InheritedSize[0x0030])
class UDBDDesignTunables : public UObject
{
public:
	int                                                WinStreakThresholdLarge;                                   // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WinStreakThresholdSmall;                                   // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                MaxFearTokens;                                             // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                QuantityOfItemsToBuyBeforeFreeBloodwebRefresh;             // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FPerkLevelDefinition>                PerkLevelDefinitions;                                      // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      MetaModifiers[0x50];                                       // 0x0050(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      RangedSurvivorAuraPerceptionModifiers[0x50];               // 0x00A0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      SurvivorRevelatoryAuraPerceptionModifiers[0x50];           // 0x00F0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      DisruptableAuraReadingFlags[0x50];                         // 0x0140(0x0050) UNKNOWN PROPERTY: SetProperty
	bool                                               ShouldUseKillerLobby;                                      // 0x0190(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_JIQO[0x7];                                     // 0x0191(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      TextDesignTunableClass[0x30];                              // 0x0191(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UDBDTextDesignTunables*                      TextTunables;                                              // 0x01C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      CoreUMGDesignTunableClass[0x30];                           // 0x01D0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UDBDCoreUMGDesignTunables*                   CoreUMGDesignTunables;                                     // 0x0200(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      AtlantaDesignTunableClass[0x30];                           // 0x0208(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UDBDAtlantaDesignTunables*                   AtlantaDesignTunables;                                     // 0x0238(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDDesignTunables");
		return ptr;
	}



	float GetTunableValue(const struct FName& ID, bool warnIfRowMissing);
};

// Class DeadByDaylight.DBDTextDesignTunables
// 0x00E8 (FullSize[0x0118] - InheritedSize[0x0030])
class UDBDTextDesignTunables : public UObject
{
public:
	struct FString                                     creditsHtml;                                               // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       LegalTextTitle;                                            // 0x0040(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       LegalText;                                                 // 0x0058(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       ConsentTextTitle;                                          // 0x0070(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       ConsentText;                                               // 0x0088(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       LegalTextSIEA;                                             // 0x00A0(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       LegalTextSIEE;                                             // 0x00B8(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       SystemMessage_ChatDisconnected;                            // 0x00D0(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       SystemMessage_ChatReturnedToLobby;                         // 0x00E8(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)
	struct FText                                       SystemMessage_ChatMatchServerClosed;                       // 0x0100(0x0018) (Edit, BlueprintVisible, Config, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDTextDesignTunables");
		return ptr;
	}



};

// Class DeadByDaylight.DBDDiceRoller
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDDiceRoller : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDDiceRoller");
		return ptr;
	}



	bool STATIC_GetRollResultByTunableValue(class AActor* RollingActor, const struct FName& tunableValueName, float MultiplicativeModifier, float AdditiveModifier);
	bool STATIC_GetRollResultByDiceRollType(class ADBDPlayer* RollingPlayer, DeadByDaylight_EDiceRollType DiceRollType);
	float STATIC_GetInteractionRollSuccessPercentageByDiceRollType(class UInteractionDefinition* Interaction, class ADBDPlayer* RollingPlayer, DeadByDaylight_EDiceRollType DiceRollType);
	bool STATIC_CalculateTickedRollResult(class AActor* RollingActor, float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier);
	bool STATIC_CalculateRollResult(class AActor* RollingActor, float BaseProbability, float MultiplicativeModifier, float AdditiveModifier);
	bool STATIC_CalculateOverTimeRollResult(class AActor* RollingActor, float BaseProbability, float DeltaTime, float ExpectedTime, float MultiplicativeModifier, float AdditiveModifier);
};

// Class DeadByDaylight.DBDEasyAntiCheat
// 0x0028 (FullSize[0x0058] - InheritedSize[0x0030])
class UDBDEasyAntiCheat : public UObject
{
public:
	unsigned char                                      UnknownData_1ENF[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _connectedToServer;                                        // 0x0050(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZCJY[0x7];                                     // 0x0051(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDEasyAntiCheat");
		return ptr;
	}



};

// Class DeadByDaylight.DBDEasyAntiCheatEnable
// 0x0098 (FullSize[0x00F0] - InheritedSize[0x0058])
class UDBDEasyAntiCheatEnable : public UDBDEasyAntiCheat
{
public:
	unsigned char                                      UnknownData_7OCP[0x98];                                    // 0x0058(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDEasyAntiCheatEnable");
		return ptr;
	}



};

// Class DeadByDaylight.DBDEasyAntiCheatLinux
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UDBDEasyAntiCheatLinux : public UDBDEasyAntiCheatEnable
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDEasyAntiCheatLinux");
		return ptr;
	}



};

// Class DeadByDaylight.DBDEasyAntiCheatWindows
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UDBDEasyAntiCheatWindows : public UDBDEasyAntiCheatEnable
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDEasyAntiCheatWindows");
		return ptr;
	}



};

// Class DeadByDaylight.DBDEngineUtils
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDEngineUtils : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDEngineUtils");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGame_Lobby
// 0x0068 (FullSize[0x03C0] - InheritedSize[0x0358])
class ADBDGame_Lobby : public ADBDBaseGameMode
{
public:
	unsigned char                                      UnknownData_RXLA[0x18];                                    // 0x0358(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UIdentityValidation*                         _identityValidation;                                       // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BFCU[0x48];                                    // 0x0378(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGame_Lobby");
		return ptr;
	}



	void DBD_RemoveBotByIndex(int botIndex);
	void DBD_FillLobbyWithBotsByName(const struct FString& selectedKiller, int Rank);
	void DBD_FillLobby();
	void DBD_AddBotToLobbyNoLoadoutByName(const struct FString& SelectedCharacter);
	void DBD_AddBotToLobbyNoLoadout(int SelectedCharacter);
	void DBD_AddBotToLobbyByName(const struct FString& SelectedCharacter, const struct FString& Item, const struct FString& Addon1, const struct FString& Addon2, const struct FString& Offering, const struct FString& perk1, const struct FString& perk2, const struct FString& perk3, const struct FString& perk4, int Rank);
	void DBD_AddBotToLobby(int SelectedCharacter, const struct FString& Item, const struct FString& Addon1, const struct FString& Addon2, const struct FString& Offering, const struct FString& perk1, const struct FString& perk2, const struct FString& perk3, const struct FString& perk4, int Rank);
};

// Class DeadByDaylight.DBDGame_Menu
// 0x0030 (FullSize[0x0388] - InheritedSize[0x0358])
class ADBDGame_Menu : public ADBDBaseGameMode
{
public:
	bool                                               StartWithSlasher;                                          // 0x0358(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_YWOH[0x7];                                     // 0x0359(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAtlantaPartyFlowHandler*                    _partyFlowHandler;                                         // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_81RP[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AMatineeActor*                               _matineeFadeActor;                                         // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMatineeActor*                               _matineeIntroActor;                                        // 0x0378(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class AMatineeActor*                               _matineeLoopActor;                                         // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGame_Menu");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGame_Start
// 0x00A8 (FullSize[0x0400] - InheritedSize[0x0358])
class ADBDGame_Start : public ADBDBaseGameMode
{
public:
	unsigned char                                      UnknownData_3SAA[0x60];                                    // 0x0358(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _startupInitializer[0x10];                                 // 0x0358(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	unsigned char                                      UnknownData_9S69[0x38];                                    // 0x03C8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGame_Start");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGameEngine
// 0x0008 (FullSize[0x0F80] - InheritedSize[0x0F78])
class UDBDGameEngine : public UGameEngine
{
public:
	unsigned char                                      UnknownData_F8N2[0x8];                                     // 0x0F78(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGameEngine");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGameEventUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDGameEventUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGameEventUtilities");
		return ptr;
	}



	void STATIC_RemotelyDispatchGameEvent(class UObject* WorldContextObject, const struct FGameplayTag& gameEventType, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int CustomIntValue);
	void STATIC_LocallyDispatchGameEvent(class UObject* WorldContextObject, const struct FGameplayTag& gameEventType, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int CustomIntValue);
	void STATIC_FireGameEvent(class UObject* WorldContextObject, DeadByDaylight_EDBDScoreTypes scoreType, float amount, class AActor* Instigator, class AActor* Target);
	void STATIC_DispatcherFireGameEvent(class UObject* WorldContextObject, const struct FGameplayTag& gameEventType, bool broadcastOverNetwork, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int CustomIntValue);
	void STATIC_Authority_DispatcherFireGameEvent(class UObject* WorldContextObject, const struct FGameplayTag& gameEventType, bool broadcastOverNetwork, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, class UObject* CustomObjectParameter, int CustomIntValue);
	void STATIC_Authority_AccumulateOngoingGameEvent(class UObject* WorldContextObject, const struct FGameplayTag& gameEventType, class ADBDPlayer* Instigator, class AActor* Target, float CustomValue, float OngoingWaitTime, class UObject* CustomObjectParameter, int CustomIntValue);
};

// Class DeadByDaylight.DBDGameFlowUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDGameFlowUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGameFlowUtilities");
		return ptr;
	}



	void STATIC_TriggerWorldFlowEvent(class UObject* WorldContextObject, DeadByDaylight_EWorldFlowEvent worldFlowEvent);
	void STATIC_TriggerUIFlowEvent(class UObject* WorldContextObject, DeadByDaylight_EUIFlowEvent uiFlowEvent);
};

// Class DeadByDaylight.DBDGameInstance
// 0x0820 (FullSize[0x0A10] - InheritedSize[0x01F0])
class UDBDGameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData_MGLD[0x48];                                    // 0x01F0(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DesignTunableClass;                                        // 0x0238(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDBDDesignTunables*                          DesignTunables;                                            // 0x0240(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      RegionClass;                                               // 0x0248(0x0008) (Edit, BlueprintVisible, ZeroConstructor, NoClear, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      ShopManagerClass;                                          // 0x0250(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      FriendManagerClass;                                        // 0x0258(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UGameEventTracker*                           GameEventTracker;                                          // 0x0260(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UDBDKeyDisplayInfo*                          KeyDisplayInfo;                                            // 0x0268(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               LeaveGameRequested;                                        // 0x0270(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0F3X[0x7];                                     // 0x0271(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPlayerProfileDAL*                           PlayerProfileDAL;                                          // 0x0278(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                GenerationSeed;                                            // 0x0280(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LAJX[0x4];                                     // 0x0284(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PaperTileAssetName;                                        // 0x0288(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                GenerationPlayerCount;                                     // 0x0298(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ITBT[0x4];                                     // 0x029C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PremadeMap;                                                // 0x02A0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FForceSpawnTileData>                 ForceSpawnTileData;                                        // 0x02B0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KDWB[0x28];                                    // 0x02C0(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AOfferingSequenceManager*                    OfferingSequence;                                          // 0x02E8(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FParadiseData>                       ParadiseData;                                              // 0x02F0(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PlayerProfileLoadFailed;                                   // 0x0300(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EUHR[0x7];                                     // 0x0301(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UNewsContentManager*                         NewsContentManager;                                        // 0x0308(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UContentScheduleManager*                     ContentScheduleManager;                                    // 0x0310(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCDNPatchManager*                            CDNPatchManager;                                           // 0x0318(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterProgressionManager*                CharacterProgressionManager;                               // 0x0320(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCharacterXPManager*                         CharacterXPManager;                                        // 0x0328(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAtlantaRitualsManager*                      AtlRitualsManager;                                         // 0x0330(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UAtlantaFreeTicketsManager*                  FreeTicketsManager;                                        // 0x0338(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     AuthOrEACErrorAdditionalInfo;                              // 0x0340(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasServerLeftMatch;                                        // 0x0350(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               HasWrittenGameEndStats;                                    // 0x0351(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_572R[0x6];                                     // 0x0352(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UFearMarketManager*                          FearMarketManager;                                         // 0x0358(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class Ushopmanager*                                shopmanager;                                               // 0x0360(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UFriendManager*                              FriendManager;                                             // 0x0368(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWalletHandler*                              WalletHandler;                                             // 0x0370(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FName                                       TutorialRequesterName;                                     // 0x0378(0x000C) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_EWGA[0x4];                                     // 0x0384(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UControllerPairingManager*                   ControllerPairingManager;                                  // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PS6O[0xE8];                                    // 0x0390(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChunkingManager*                            ChunkingManager;                                           // 0x0478(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerDisconnect;                                        // 0x0480(0x0010) (Edit, ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LDOU[0xE8];                                    // 0x0490(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAssetLibraryManager*                        _assetLibraryManager;                                      // 0x0578(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _bloodwebManagerClass[0x30];                               // 0x0580(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UOnlineTransactionServiceComponent*          _onlineTransactionService;                                 // 0x05B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _sharedAuthenticationManagerClass[0x30];                   // 0x05B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_MM0O[0x130];                                   // 0x05E8(0x0130) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDPersistentData*                          _persistentData;                                           // 0x0718(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerDataStorageFacade*                    _playerDataFacade;                                         // 0x0720(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URankManager*                                _rankManager;                                              // 0x0728(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDPlayerLevelManager*                      _playerLevelManager;                                       // 0x0730(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerNameRegistration*                     _playerNameRegistration;                                   // 0x0738(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class Uspecialeventmanager*                        _specialEventManager;                                      // 0x0740(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBonusPointEventsManager*                    _bonusPointEventsManager;                                  // 0x0748(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDTimeTravelManager*                       _timeTravelManager;                                        // 0x0750(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UToastManager*                               _toastManager;                                             // 0x0758(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDSocialNotificationFactory*               _socialNotificationFactory;                                // 0x0760(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDPartyFacade*                             _partyFacade;                                              // 0x0768(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPenaltyTracker*                             _penaltyTracker;                                           // 0x0770(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XV0Z[0x28];                                    // 0x0778(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULightingHelper*                             _ligthingHelper;                                           // 0x07A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOfferingHandler*                            _offeringHandler;                                          // 0x07A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EYR3[0x8];                                     // 0x07B0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UActorKnowledgeCollection*>           _actorKnowledgeCollections;                                // 0x07B8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMapActorDB*                                 _mapActorDB;                                               // 0x07C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInteractionProficiency*>             _interactionProficiencies;                                 // 0x07D0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDHud*                                     _theHud;                                                   // 0x07E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_94H2[0x28];                                    // 0x07E8(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBloodwebManager*                            BloodwebManager;                                           // 0x0810(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USharedAuthenticationComponent*              _sharedAuthenticationManager;                              // 0x0818(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPopupSequencer*                             _popupSequencer;                                           // 0x0820(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPopupFactory*                               _popupFactory;                                             // 0x0828(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDAuthentication*                          _auth;                                                     // 0x0830(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDEasyAntiCheat*                           _eac;                                                      // 0x0838(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_333J[0xD8];                                    // 0x0840(0x00D8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<TWeakObjectPtr<class UObject>>              _execObjects;                                              // 0x0918(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _networkFailureDetected;                                   // 0x0928(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _networkConnectionMonitoringOnly;                          // 0x0929(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _achievementStatsUploadEnabled;                            // 0x092A(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isDisconnected;                                           // 0x092B(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isGamepadReconnected;                                     // 0x092C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isProfileOffline;                                         // 0x092D(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isAppSuspended;                                           // 0x092E(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isAppResumed;                                             // 0x092F(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isInvitationRejected;                                     // 0x0930(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isAdditionalContentInstalled;                             // 0x0931(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isCloudInventoryInitialized;                              // 0x0932(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HCMP[0x2D];                                    // 0x0933(0x002D) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UOfferingEffectCollection*                   _resultOfferingAndPerkEffects;                             // 0x0960(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UInventoryHandler*                           _inventoryHandler;                                         // 0x0968(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ULocalEventManager*                          _localEventManager;                                        // 0x0970(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPlayerReportManager*                        _playerReportManager;                                      // 0x0978(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCinematicManager*                           _cinematicManager;                                         // 0x0980(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USoftBanManager*                             _softBanManager;                                           // 0x0988(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UConsentManager*                             _consentManager;                                           // 0x0990(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOnlineSystemHandler*                        _onlineSystemHandler;                                      // 0x0998(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDedicatedServerManager*                     _dedicatedServerManager;                                   // 0x09A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class URegionFinder*                               _regionFinder;                                             // 0x09A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDecalSpawnerCollection*                     _decalSpawnerCollection;                                   // 0x09B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UPrimitiveCollection*                        _characterClippingPrimitiveCollection;                     // 0x09B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAtlantaTooltipManager*                      _atlantaTooltipManager;                                    // 0x09C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           LastProviderErrorCode;                                     // 0x09C8(0x0004) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EDisconnectErrors                   _disconnectError;                                          // 0x09CC(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OFOQ[0x3];                                     // 0x09CD(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDateTimerUpdater*                           _dateTimerUpdater;                                         // 0x09D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2BUO[0x38];                                    // 0x09D8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGameInstance");
		return ptr;
	}



	void StartOfferingSequence();
	void SimulateOfferingSequence(TArray<struct FName> offerings, bool playSequence);
	void RemoveActorKnowledgeCollection(class UActorKnowledgeCollection* Collection);
	void OnTimeTravelComplete(bool success, const struct FString& date);
	bool IsActorKnown(class ADBDPlayer* knowledgePossessor, class AActor* possiblyKnownActor);
	bool HasOfferingOfType(DeadByDaylight_EOfferingEffectType Type, int playerID, const struct FName& Tag);
	bool HasOfferingByType(DeadByDaylight_EOfferingEffectType Type);
	void GotoSplashScreen(bool showDefaultDialogueOnSplashScreen);
	class UDBDTimeUtilities* GetTimeUtils();
	class Uspecialeventmanager* GetSpecialEventManager();
	class USoftBanManager* GetSoftBanManager();
	class URankManager* GetRankManager();
	class UPlayerNameRegistration* GetPlayerNameRegistration();
	class UDBDPlayerLevelManager* GetPlayerLevelManager();
	int GetMaxSurvivorCount();
	class UMapActorDB* GetMapActorDB();
	class ADBDPlayerState* GetLocalPlayerState();
	class APlayerController* GetLocalPlayerController();
	class ULocalPlayer* GetLocalPlayer();
	class ADBDPlayer* GetLocallyControlledCharacter();
	class ULocalEventManager* GetLocalEventManager();
	class ULightingInterpolator* GetLightInterpolator();
	class ULightingHelper* GetLightingHelper();
	class ABaseSky* GetLevelLighting();
	class UInventoryHandler* GetInventoryHandler();
	TArray<class ACamperPlayer*> GetInGameSurvivors();
	TArray<class ADBDPlayer*> GetInGamePlayers();
	TArray<class ASlasherPlayer*> GetInGameKillers();
	class ASlasherPlayer* GetInGameKiller();
	void GetInGameAliveSurvivors(TArray<class ACamperPlayer*>* outPlayingSurvivors);
	class UGameEventDispatcher* GetGameEventDispatcher();
	class UDecalSpawnerCollection* GetDecalSpawnerCollection();
	int GetDeadOrDisconnectedCampersCount(class ADBDPlayerState* exception);
	class UConsentManager* GetConsentManager();
	class UCinematicManager* GetCinematicManager();
	struct FName GetCharacterDefaultItem(int inCharacterIndex);
	class UPrimitiveCollection* GetCharacterClippingPrimitiveCollection();
	class UBonusPointEventsManager* GetBonusPointEventsManager();
	void STATIC_ForceCloseGame();
	void EndLoadingScreen(class UWorld* loadedWorld);
	void DBDToggleLightingLoaded();
	void DBDResetSaveData();
	void DBDForceSave();
	void DBDForceLoad();
	void DBDDeleteLocalSaveFile();
	void DBD_UpdateSteamInventory();
	void DBD_ToggleOnlineRole();
	void DBD_TestTickedDiceRoll(float BaseProbability, float ticks, float MultiplicativeModifier, float AdditiveModifier);
	void DBD_TestSaveFile(const struct FString& Name);
	void DBD_TestRegion();
	void DBD_TestDiceRoll(float BaseProbability, float MultiplicativeModifier, float AdditiveModifier);
	void DBD_SetStatsUploadEnabled(bool Enabled);
	void DBD_SetFearMarketDate(const struct FString& dateString);
	void DBD_SendFriendInvite();
	void DBD_ResetSaveGameInventory();
	void DBD_ResetCurrentAchievementStats(bool andUpload, bool andUpdateData);
	void DBD_ResetCurrentAchievementStat(const struct FName& StatName, bool andUpload);
	void DBD_ResetAllRituals();
	void DBD_RemoveRitual(const struct FName& toRemove);
	void DBD_PrintAudioConfig();
	void DBD_PIXEndCapture();
	void DBD_PIXBeginCapture();
	void DBD_LogBloodWebDefinition();
	void DBD_GetRegion();
	void DBD_GenerateNewRitual(const struct FName& Name, int characterIndex);
	void DBD_GenerateNewRandomRitual();
	void DBD_GenerateBloodWeb(int Level);
	void DBD_DumpSessions();
	void DBD_DisplayCurrentAchievementStat(const struct FName& StatName);
	void DBD_DestroySteamInventory();
	void DBD_ClaimRitualRewardAtIndex(int Index);
	void DBD_ClaimRitualReward(const struct FName& Name);
	void DBD_CheckForNewContent(const struct FString& debugGameVersion, bool forceDisplay);
	void DBD_ChangeSteamOverlayPosition(int Position, int VerticalOffset, int horizontalOffset);
	void DBD_AssignNewRitual();
	void DBD_ApplyNoMist();
	void DBD_ApplyMist(float fogModifier);
	void DBD_AnalyticsTest();
	void DBD_AnalyticsReset();
	void DBD_AddToRitual(int Index, float value);
	void DBD_AddToAchievementStat(const struct FName& StatName, float amount);
	void BeginLoadingScreen(const struct FString& MapName);
	void Authority_SimulatePerks(TArray<struct FName> Perks, int Level);
	void Async_GenerateBloodWebForCurrentCharacter();
	void AddActorKnowledgeCollection(class UActorKnowledgeCollection* Collection);
};

// Class DeadByDaylight.DBDGameSession
// 0x0060 (FullSize[0x02B0] - InheritedSize[0x0250])
class ADBDGameSession : public AGameSession
{
public:
	unsigned char                                      UnknownData_I1MD[0x60];                                    // 0x0250(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGameSession");
		return ptr;
	}



};

// Class DeadByDaylight.DBDGameUserSettings
// 0x0228 (FullSize[0x0350] - InheritedSize[0x0128])
class UDBDGameUserSettings : public UGameUserSettings
{
public:
	TArray<struct FInputActionKeyMapping>              ActionMappings;                                            // 0x0128(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FInputAxisKeyMapping>                AxisMappings;                                              // 0x0138(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnSetCustomizedHudsTimestamp;                              // 0x0148(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPublic)
	struct FString                                     DeviceLoginTokenID;                                        // 0x0158(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ScreenScaleForWindowedMode;                                // 0x0168(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ScalabilityLevel;                                          // 0x016C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               AutoScalabilitySet;                                        // 0x0170(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               AutoAdjust;                                                // 0x0171(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B7BZ[0x2];                                     // 0x0172(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ScreenResolution;                                          // 0x0174(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               FullScreen;                                                // 0x0178(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RDNY[0x3];                                     // 0x0179(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MenuScaleFactor;                                           // 0x017C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                HudScaleFactor;                                            // 0x0180(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SkillCheckScaleFactor;                                     // 0x0184(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               LargeText;                                                 // 0x0188(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               HUDPlayerNamesVisibility;                                  // 0x0189(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               HUDKillerHookCountVisibility;                              // 0x018A(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               HUDScoreEventsVisibility;                                  // 0x018B(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	uint32_t                                           FPSLimit;                                                  // 0x018C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                MainVolume;                                                // 0x0190(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               MainVolumeOn;                                              // 0x0194(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZWJZ[0x3];                                     // 0x0195(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                MenuMusicVolume;                                           // 0x0198(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               MenuMusicVolumeOn;                                         // 0x019C(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               UseHeadphones;                                             // 0x019D(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               MuteOnFocusLost;                                           // 0x019E(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7B7T[0x1];                                     // 0x019F(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                KillerCameraSensitivity;                                   // 0x01A0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SurvivorCameraSensitivity;                                 // 0x01A4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                KillerMouseSensitivity;                                    // 0x01A8(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SurvivorMouseSensitivity;                                  // 0x01AC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                KillerControllerSensitivity;                               // 0x01B0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                SurvivorControllerSensitivity;                             // 0x01B4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               AimAssist;                                                 // 0x01B8(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_LG7V[0x3];                                     // 0x01B9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ControlType;                                               // 0x01BC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               InvertY;                                                   // 0x01C0(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               SurvivorInvertY;                                           // 0x01C1(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CNLD[0x6];                                     // 0x01C2(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     Language;                                                  // 0x01C8(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               LanguageIsDefinedByPlayer;                                 // 0x01D8(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_F0IU[0x3];                                     // 0x01D9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                HighestWeightSeenNews;                                     // 0x01DC(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FSharedAuthenticationTokenInformation       SharedLoginInformation;                                    // 0x01E0(0x0030) (Config, NativeAccessSpecifierPrivate)
	uint32_t                                           LastPanelContextId;                                        // 0x0210(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               ArchivesAutoPlayVoiceOver;                                 // 0x0214(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               HasAcceptedCrossplayPopup;                                 // 0x0215(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               HasAcceptedCrossProgressionPopup;                          // 0x0216(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               UseAtlantaCustomizedHuds;                                  // 0x0217(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               UseAtlantaSurvivorQuickTurn;                               // 0x0218(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               UseAtlantaKillerQuickTurn;                                 // 0x0219(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PGKA[0x6];                                     // 0x021A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FAtlantaCustomizedHudSettings>       AtlantaCustomizedHuds;                                     // 0x0220(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KPB7[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               ShowPortraitBorder;                                        // 0x0238(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WKKF[0x7];                                     // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PartyPrivacyState;                                         // 0x0240(0x0010) (ZeroConstructor, Config, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CGRN[0x48];                                    // 0x0250(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                ColorBlindMode;                                            // 0x0298(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                ColorBlindModeIntensity;                                   // 0x029C(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               BeginnerMode;                                              // 0x02A0(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               Subtitles;                                                 // 0x02A1(0x0001) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VI6H[0x2];                                     // 0x02A2(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SubtitlesBackgroundOpacity;                                // 0x02A4(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_T02A[0x48];                                    // 0x02A8(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                SubtitlesSize;                                             // 0x02F0(0x0004) (ZeroConstructor, Config, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_K54X[0x5C];                                    // 0x02F4(0x005C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGameUserSettings");
		return ptr;
	}



	int GetSkillCheckScaleFactor();
	int GetMenuScaleFactor();
	bool GetLargeText();
	bool GetHUDScoreEventsVisibility();
	int GetHudScaleFactor();
	bool GetHUDPlayerNamesVisibility();
	bool GetHUDKillerHookCountVisibility();
	class UDBDGameUserSettings* STATIC_GetDBDGameUserSettings();
	int GetColorBlindModeIntensity();
	SlateCore_EColorVisionDeficiency GetColorBlindMode();
};

// Class DeadByDaylight.DBDGameViewportClient
// 0x0038 (FullSize[0x0378] - InheritedSize[0x0340])
class UDBDGameViewportClient : public UGameViewportClient
{
public:
	unsigned char                                      UnknownData_V7T0[0x38];                                    // 0x0340(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDGameViewportClient");
		return ptr;
	}



};

// Class DeadByDaylight.DBDHud
// 0x0050 (FullSize[0x0080] - InheritedSize[0x0030])
class UDBDHud : public UObject
{
public:
	TMap<struct FName, class AStatusView*>             _statusViews;                                              // 0x0030(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDHud");
		return ptr;
	}



	void RemoveStatusViewOnDestroy(class AActor* Actor);
};

// Class DeadByDaylight.DBDInGameHud
// 0x0028 (FullSize[0x0358] - InheritedSize[0x0330])
class ADBDInGameHud : public ADBDBaseHud
{
public:
	class UFont*                                       _debugFontObj;                                             // 0x0330(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_52JS[0x18];                                    // 0x0338(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCompetenceDebugger*                         _competenceDebugger;                                       // 0x0350(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDInGameHud");
		return ptr;
	}



};

// Class DeadByDaylight.DBDInitPlayerQuery
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDInitPlayerQuery : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDInitPlayerQuery");
		return ptr;
	}



};

// Class DeadByDaylight.DBDInitPlayerQueryYesNo
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UDBDInitPlayerQueryYesNo : public UDBDInitPlayerQuery
{
public:
	unsigned char                                      UnknownData_LJOS[0x80];                                    // 0x0030(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDInitPlayerQueryYesNo");
		return ptr;
	}



};

// Class DeadByDaylight.DBDInitPlayerQueryYesNoSizeWifi
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UDBDInitPlayerQueryYesNoSizeWifi : public UDBDInitPlayerQueryYesNo
{
public:
	unsigned char                                      UnknownData_9A6B[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDInitPlayerQueryYesNoSizeWifi");
		return ptr;
	}



};

// Class DeadByDaylight.DBDInstancedFoliageComponent
// 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
class UDBDInstancedFoliageComponent : public UActorComponent
{
public:
	int                                                NextBaseId;                                                // 0x00B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_OJZP[0x4];                                     // 0x00BC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<int, class USceneComponent*>                  InstanceBaseMap;                                           // 0x00C0(0x0050) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, EditConst, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FDBDFoliageInfo>                     Foliage;                                                   // 0x0110(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDInstancedFoliageComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDKeyDisplayInfo
// 0x0158 (FullSize[0x0188] - InheritedSize[0x0030])
class UDBDKeyDisplayInfo : public UObject
{
public:
	struct FString                                     PendingResetKeyBindingsData;                               // 0x0030(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               PendingResetMustBeGamepadKey;                              // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_78BM[0x7];                                     // 0x0041(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FName, struct FKeyDisplayInfo>         _keyDisplayInfoMap;                                        // 0x0048(0x0050) (NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_3NIT[0x50];                                    // 0x0098(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<DeadByDaylight_EInputInteractionType, struct FName> _interactionTypeToActionMap_Camper;                        // 0x00E8(0x0050) (NativeAccessSpecifierPrivate)
	TMap<DeadByDaylight_EInputInteractionType, struct FName> _interactionTypeToActionMap_Slasher;                       // 0x0138(0x0050) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDKeyDisplayInfo");
		return ptr;
	}



	bool IsExcludedKey(const struct FKey& Key);
	struct FKeyDisplayInfo GetKeyDisplayInfoForInteractionType(class UPlayerInput* PlayerInput, DBDSharedTypes_EPlayerRole PlayerRole, DeadByDaylight_EInputInteractionType interactionType, bool useGamePad);
	struct FKeyDisplayInfo GetKeyDisplayInfo(const struct FKey& Key);
	struct FKey GetFirstKeyForAction(class UPlayerInput* PlayerInput, const struct FName& ActionName, bool useGamePad);
	struct FName GetActionForInteractionType(DBDSharedTypes_EPlayerRole PlayerRole, DeadByDaylight_EInputInteractionType inputInteractionType, bool useGamePad, bool ignoreInteractMash);
};

// Class DeadByDaylight.DBDLobbyHud
// 0x0000 (FullSize[0x0330] - InheritedSize[0x0330])
class ADBDLobbyHud : public ADBDBaseHud
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDLobbyHud");
		return ptr;
	}



};

// Class DeadByDaylight.DBDLocalPlayer
// 0x0000 (FullSize[0x0268] - InheritedSize[0x0268])
class UDBDLocalPlayer : public ULocalPlayer
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDLocalPlayer");
		return ptr;
	}



};

// Class DeadByDaylight.InterruptionDefinition
// 0x00C0 (FullSize[0x02D0] - InheritedSize[0x0210])
class UInterruptionDefinition : public USceneComponent
{
public:
	struct FName                                       InterruptionID;                                            // 0x0210(0x000C) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               _usesWorldCoordinates;                                     // 0x021C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _snapInterruptor;                                          // 0x021D(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JZT0[0x2];                                     // 0x021E(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTransform                                  _interruptionSnapPointForInterruptor;                      // 0x0220(0x0030) (Edit, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor                 _animationMontageToPlayOnInterruptionEnterForInterruptor;  // 0x0250(0x0020) (Edit, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor                 _animationMontageToPlayOnInterruptionForInterruptorNew;    // 0x0270(0x0020) (Edit, NativeAccessSpecifierPrivate)
	struct FAnimationMontageDescriptor                 _animationMontageToPlayOnInterruptionForInterrupteeNew;    // 0x0290(0x0020) (Edit, NativeAccessSpecifierPrivate)
	bool                                               _pickUpOnInterrupt;                                        // 0x02B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _canInterruptWhileCarrying;                                // 0x02B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _useMontageFollower;                                       // 0x02B2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GUR3[0x1];                                     // 0x02B3(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxHeightDeltaBetweenCharacters;                          // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGameplayTag                                _interruptionScoreEvent;                                   // 0x02B8(0x000C) (Edit, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_UO9D[0xC];                                     // 0x02C4(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InterruptionDefinition");
		return ptr;
	}



	void SetInterruptorSnapPoint(const struct FTransform& Point);
	void OnInterruptionUpdateStart(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
	void OnInterruptionExitEnd(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
	void OnInterruptionEnterStart(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
	bool IsUsingMontageFollower();
	bool IsUsingAttack();
	bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
	bool InteractionCheckHeightDelta(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
	struct FRotator GetInterruptionSnapPointRotationForInterruptor(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
	struct FVector GetInterruptionSnapPointPositionForInterruptor(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee);
	class UInteractionDefinition* GetInteractionDefinition();
	class AInteractable* GetInteractable();
	bool CanInterruptWhileCarrying();
};

// Class DeadByDaylight.InventoryHandler
// 0x00A0 (FullSize[0x00D0] - InheritedSize[0x0030])
class UInventoryHandler : public UObject
{
public:
	unsigned char                                      UnknownData_FMX5[0xA0];                                    // 0x0030(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InventoryHandler");
		return ptr;
	}



};

// Class DeadByDaylight.IsMaximumInfected
// 0x0000 (FullSize[0x00D0] - InheritedSize[0x00D0])
class UIsMaximumInfected : public UGameplayModifierCondition
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.IsMaximumInfected");
		return ptr;
	}



};

// Class DeadByDaylight.IsNotSightedByAnyCharacter
// 0x0008 (FullSize[0x00F0] - InheritedSize[0x00E8])
class UIsNotSightedByAnyCharacter : public UEventDrivenModifierCondition
{
public:
	unsigned char                                      UnknownData_0PED[0x8];                                     // 0x00E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.IsNotSightedByAnyCharacter");
		return ptr;
	}



};

// Class DeadByDaylight.SpectatingActorLinker
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class USpectatingActorLinker : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SpectatingActorLinker");
		return ptr;
	}



};

// Class DeadByDaylight.StruggleSkillCheck
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UStruggleSkillCheck : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.StruggleSkillCheck");
		return ptr;
	}



};

// Class DeadByDaylight.ItemAddonDataAsset
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UItemAddonDataAsset : public UGameplayModifierContainerDataAsset
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ItemAddonDataAsset");
		return ptr;
	}



};

// Class DeadByDaylight.ItemBlueprint
// 0x0000 (FullSize[0x02B8] - InheritedSize[0x02B8])
class AItemBlueprint : public ASkeletalMeshActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ItemBlueprint");
		return ptr;
	}



};

// Class DeadByDaylight.ItemDataAsset
// 0x0040 (FullSize[0x0088] - InheritedSize[0x0048])
class UItemDataAsset : public UDBDPrimaryDataAsset
{
public:
	unsigned char                                      actorClass[0x30];                                          // 0x0048(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      RequiredModifierContainers[0x10];                          // 0x0078(0x0010) UNKNOWN PROPERTY: ArrayProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ItemDataAsset");
		return ptr;
	}



};

// Class DeadByDaylight.ItemPerformedInteraction
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UItemPerformedInteraction : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ItemPerformedInteraction");
		return ptr;
	}



	bool IsInteractionPerformedWithItem(class ADBDPlayer* Instigator);
};

// Class DeadByDaylight.ItemRecommendationsFilter
// 0x0028 (FullSize[0x0060] - InheritedSize[0x0038])
class UItemRecommendationsFilter : public URecommendationsFilter
{
public:
	unsigned char                                      UnknownData_FU4T[0x28];                                    // 0x0038(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ItemRecommendationsFilter");
		return ptr;
	}



};

// Class DeadByDaylight.ItemTooltipWidget
// 0x0020 (FullSize[0x0358] - InheritedSize[0x0338])
class UItemTooltipWidget : public UBaseTooltipWidget
{
public:
	class UTextBlock*                                  RarityLabel;                                               // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGHtmlRichText*                            WarningText;                                               // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      HeaderSmoke;                                               // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      HeaderBackground;                                          // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ItemTooltipWidget");
		return ptr;
	}



};

// Class DeadByDaylight.ItemVfx
// 0x0010 (FullSize[0x0248] - InheritedSize[0x0238])
class AItemVfx : public ABaseVFX
{
public:
	TArray<class UParticleSystemComponent*>            _particleSystems;                                          // 0x0238(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ItemVfx");
		return ptr;
	}



	void OnAttackEnd();
	void OnAttackBegin();
	void ClearParticleSystems();
	void AttachToSkeletalMesh(class USkeletalMeshComponent* SkeletonPart);
	void AddParticleSystemComponent(class UParticleSystemComponent* ParticleSystemComponent);
};

// Class DeadByDaylight.Turn180
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTurn180 : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Turn180");
		return ptr;
	}



};

// Class DeadByDaylight.ViewRotationStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UViewRotationStrategy : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ViewRotationStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.KillerAtlantaTutorialLevel
// 0x0040 (FullSize[0x0368] - InheritedSize[0x0328])
class AKillerAtlantaTutorialLevel : public AAtlantaTutorialLevel
{
public:
	TWeakObjectPtr<class ASlasherPlayer>               LocallyControllerSlasherPlayer;                            // 0x0328(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ACamperPlayer>                ChaseCamper;                                               // 0x0330(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class ACamperPlayer>                BearTrapCamper;                                            // 0x0338(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AGenerator>                   KickGenerator;                                             // 0x0340(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AWindow>                      VaultWindow;                                               // 0x0348(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AEscapeDoor>                  EscapeDoor;                                                // 0x0350(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TWeakObjectPtr<class AHatch>                       Hatch;                                                     // 0x0358(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UP2L[0x8];                                     // 0x0360(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerAtlantaTutorialLevel");
		return ptr;
	}



	void TriggerExitGameSetup();
	void TriggerEndGameSequenceAnimation(DeadByDaylight_EKillerTutorialEndGameType camperDeathType);
	void SetVaultWindow(class AWindow* Window);
	void SetupEndGameTutorialPhase();
	void SetHatch(class AHatch* targetHatch);
	void SetGenerator(class AGenerator* Generator);
	void SetEscapeDoor(class AEscapeDoor* targetEscapeDoor);
	void SetControlledSlasherPlayer(class ASlasherPlayer* SlasherPlayer);
	void SetChaseSurvivor(class ACamperPlayer* CamperPlayer);
	void SetBearTrapSurvivor(class ACamperPlayer* CamperPlayer);
	void CompleteEscapeRequirements();
};

// Class DeadByDaylight.KillerAudioHandlerComponent
// 0x0000 (FullSize[0x00B8] - InheritedSize[0x00B8])
class UKillerAudioHandlerComponent : public UActorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerAudioHandlerComponent");
		return ptr;
	}



	void TriggerSurvivorDamageHitAudioSFX(class ACamperPlayer* camper, DBDSharedTypes_EAttackType attackType, bool causedKO, bool isWeaponHit, bool isLightHit);
	void TriggerKillerReactionSpecificSurvivorSFX(class ADBDPlayer* camper);
	void OnChaseStart(class ADBDPlayer* chasedSurvivor);
	void HitImpactOnSurvivorSFX(class ACamperPlayer* camper, DBDSharedTypes_EAttackType attackType, bool isWeaponHit);
	void ChaseTriggerKillerReactionSpecificSurvivorSFX(class ADBDPlayer* camper);
};

// Class DeadByDaylight.KillerAudioMenuReactionComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UKillerAudioMenuReactionComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_9GFU[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerAudioMenuReactionComponent");
		return ptr;
	}



	void OnLobbyTimeChanged();
	void LobbyKillerReactionSpecificSurvivorSFX(TArray<class ADBDMenuPlayer*> menuPlayers);
};

// Class DeadByDaylight.KillerBlindingFXComponent
// 0x0048 (FullSize[0x0150] - InheritedSize[0x0108])
class UKillerBlindingFXComponent : public UBlindingFXComponent
{
public:
	unsigned char                                      UnknownData_RD6Y[0x18];                                    // 0x0108(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _blindedSound;                                             // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BU5Y[0x28];                                    // 0x0128(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerBlindingFXComponent");
		return ptr;
	}



	void Multicast_OnBlindedByPlayersCosmetic(TArray<class ADBDPlayer*> Players);
};

// Class DeadByDaylight.KillerFootstepsPerceptionComponent
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class UKillerFootstepsPerceptionComponent : public UFootstepsPerceptionComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerFootstepsPerceptionComponent");
		return ptr;
	}



};

// Class DeadByDaylight.KillerInstinctComponent
// 0x0170 (FullSize[0x0228] - InheritedSize[0x00B8])
class UKillerInstinctComponent : public UActorComponent
{
public:
	struct FCustomKillerInstinctData                   _defaultKillerInstinctAsset;                               // 0x00B8(0x0028) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UNiagaraComponent*                           _particleSystemComponent;                                  // 0x00E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SE56[0x4];                                     // 0x00E8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                _camperHighlightColorOverride;                             // 0x00EC(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z2LG[0xAC];                                    // 0x00FC(0x00AC) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCustomKillerInstinctData>           _customKillerInstinctData;                                 // 0x01A8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FCustomKillerInstinctData                   _currentKillerInstinctData;                                // 0x01B8(0x0028) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V2G3[0x48];                                    // 0x01E0(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerInstinctComponent");
		return ptr;
	}



	void SetParticleSystem(class UNiagaraComponent* ParticleSystemComponent);
	void OnKillerLocallyObservedChanged(bool locallyObserved);
	bool IsOwnerInKillerInstinctRadius();
	class UNiagaraComponent* GetParticleSystem();
};

// Class DeadByDaylight.KillerIntroComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UKillerIntroComponent : public UActorComponent
{
public:
	float                                              _percentOfCameraPanInProgressRequiredToHideKiller;         // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _cameraPanInAmountToSquish;                                // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EFPVTransitionStrategy              _cameraPanInHidingStrategy;                                // 0x00C0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TZI9[0x3];                                     // 0x00C1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _startKillerIntroDelay;                                    // 0x00C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QHYD[0x20];                                    // 0x00C8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerIntroComponent");
		return ptr;
	}



	void OnLevelReadyToPlay();
	void OnIntroCompleted();
	void KillerCameraPanInUpdateNative(float killerIntroCompletedPercent);
};

// Class DeadByDaylight.KillerNoiseIndicatorWidget
// 0x0000 (FullSize[0x0348] - InheritedSize[0x0348])
class UKillerNoiseIndicatorWidget : public UNoiseIndicatorWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerNoiseIndicatorWidget");
		return ptr;
	}



	void SetSoundDistancePercentage(float distancePercentage);
};

// Class DeadByDaylight.UMGRewardPopupLayout
// 0x0180 (FullSize[0x0480] - InheritedSize[0x0300])
class UUMGRewardPopupLayout : public UMobileBaseUserWidget
{
public:
	class UHorizontalBox*                              TopHorizontalBox;                                          // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              BottomHorizontalBox;                                       // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRewardSlotTutorialPopupRewardWidget*     FirstCharacter;                                            // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRewardSlotTutorialPopupRewardWidget*     SecondCharacter;                                           // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRewardSlotTutorialPopupRewardWidget*     ThirdCharacter;                                            // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRewardSlotTutorialPopupRewardWidget*     FourthCharacter;                                           // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRewardSlotTutorialPopupRewardWidget*     FifthCharacter;                                            // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRewardSlotTutorialPopupRewardWidget*     AuricCells;                                                // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRewardSlotTutorialPopupRewardWidget*     IridescentShards;                                          // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRewardSlotTutorialPopupRewardWidget*     BloodPoints;                                               // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FRewardLayoutWidgetToGenerate               TopWidgetToGenerate;                                       // 0x0350(0x0090) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FRewardLayoutWidgetToGenerate               BottomWidgetToGenerate;                                    // 0x03E0(0x0090) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_MA3X[0x10];                                    // 0x0470(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRewardPopupLayout");
		return ptr;
	}



};

// Class DeadByDaylight.UMGRewardSlotTutorialPopupRewardWidget
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGRewardSlotTutorialPopupRewardWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  RewardText;                                                // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      RewardPicture;                                             // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                     UnlockedPanel;                                             // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidget*                                     MissedRewardPanel;                                         // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RewardUnlockedTextOpacity;                                 // 0x0320(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              RewardToBeMissedTextOpacity;                               // 0x0324(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRewardSlotTutorialPopupRewardWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGRewardWidget
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGRewardWidget : public UMobileBaseUserWidget
{
public:
	class UImage*                                      CheckIcon;                                                 // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRewardWidget");
		return ptr;
	}



	void SetData(const struct FRewardItemData& RewardData);
};

// Class DeadByDaylight.UMGRichTextRewardItemDecorator
// 0x0008 (FullSize[0x0038] - InheritedSize[0x0030])
class UUMGRichTextRewardItemDecorator : public URichTextBlockDecorator
{
public:
	class UDataTable*                                  RewardSet;                                                 // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRichTextRewardItemDecorator");
		return ptr;
	}



};

// Class DeadByDaylight.UMGRitualClaimRewardButton
// 0x0018 (FullSize[0x0448] - InheritedSize[0x0430])
class UUMGRitualClaimRewardButton : public UUMGBaseButtonWidget
{
public:
	struct FScriptMulticastDelegate                    OnPressedAnimationCompleted;                               // 0x0430(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                ClaimFxPanel;                                              // 0x0440(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRitualClaimRewardButton");
		return ptr;
	}



	void SetClaimedButtonStatus(bool isClaimed, float percent);
	void OnPressedAnimationCompleted__DelegateSignature();
	void BroadcastOnPressedAnimationCompleted();
};

// Class DeadByDaylight.UMGRitualRefreshButton
// 0x0010 (FullSize[0x0440] - InheritedSize[0x0430])
class UUMGRitualRefreshButton : public UUMGBaseButtonWidget
{
public:
	class UCanvasPanel*                                RefreshCanvas;                                             // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             RefreshSwitcher;                                           // 0x0438(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRitualRefreshButton");
		return ptr;
	}



	void SetRefreshButton(int Currency, DBDSharedTypes_ECurrencyType currentyType, bool isAdsRefresh);
};

// Class DeadByDaylight.UMGRoleSelectionScreen
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UUMGRoleSelectionScreen : public UMobileBaseUserWidget
{
public:
	int                                                _newInboxMessageCount;                                     // 0x0300(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9M05[0x1C];                                    // 0x0304(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRoleSelectionScreen");
		return ptr;
	}



	void ButtonClickEvent(DeadByDaylight_ERoleSelectionScreenButton buttonID);
};

// Class DeadByDaylight.UMGRoleSwitcherWidget
// 0x0060 (FullSize[0x02C0] - InheritedSize[0x0260])
class UUMGRoleSwitcherWidget : public UUserWidget
{
public:
	bool                                               _isCurrentRoleRoleSwitcher;                                // 0x0260(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_X9P1[0x3];                                     // 0x0261(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _touchDeltaTolerance;                                      // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HX67[0x58];                                    // 0x0268(0x0058) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRoleSwitcherWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGScoreAlertWidget
// 0x0000 (FullSize[0x0290] - InheritedSize[0x0290])
class UUMGScoreAlertWidget : public UUMGBaseAlertWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGScoreAlertWidget");
		return ptr;
	}



	void UpdateWidget(DBDSharedTypes_EDBDScoreCategory scoreType, const struct FString& Title, int ScoreValue, float Progress, const struct FText& defaultScoreText);
};

// Class DeadByDaylight.UMGSelectedCharacterWidget
// 0x0048 (FullSize[0x0348] - InheritedSize[0x0300])
class UUMGSelectedCharacterWidget : public UMobileBaseUserWidget
{
public:
	class UUMGCharacterPrestigeButton*                 PrestigeButton;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CharacterNameText;                                         // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CharacterLevelText;                                        // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                CharacterLevelVerticalBox;                                 // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      LeaderIcon;                                                // 0x0320(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_9IUT[0x10];                                    // 0x0328(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    _onCancelPartyButtonClick;                                 // 0x0338(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, Protected, BlueprintCallable, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSelectedCharacterWidget");
		return ptr;
	}



	void SetVisualsForReadyState(bool IsPlayerReady);
	void SetVisualsForPartyState(bool triggerPartyVisuals);
	void OnPrestigeButtonClicked();
};

// Class DeadByDaylight.UMGSettingContextWidget
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGSettingContextWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_AKD2[0x18];                                    // 0x0300(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSettingContextWidget");
		return ptr;
	}



	void SetContextTitle(const struct FText& contextTitle);
	void HandleContextButtonClickEvent(int buttonData);
};

// Class DeadByDaylight.UMGSettingAboutContextWidget
// 0x0010 (FullSize[0x0328] - InheritedSize[0x0318])
class UUMGSettingAboutContextWidget : public UUMGSettingContextWidget
{
public:
	class UUMGSettingContextButton*                    EULAButton;                                                // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSettingContextButton*                    CreditsButton;                                             // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSettingAboutContextWidget");
		return ptr;
	}



	void SetVersionNumber(const struct FString& VersionNumber);
};

// Class DeadByDaylight.UMGSettingContextButton
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGSettingContextButton : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnSettingContextButtonClickEvent;                          // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_9957[0x8];                                     // 0x0310(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSettingContextButton");
		return ptr;
	}



	void SetIsSelected(bool IsSelected);
	void SetContextButtonData(int buttonID);
	void SetButtonText(const struct FString& ButtonText);
	void HandleSettingContextButtonClick();
	int GetContextButtonData();
};

// Class DeadByDaylight.UMGSettingControlsContextWidget
// 0x0090 (FullSize[0x03A8] - InheritedSize[0x0318])
class UUMGSettingControlsContextWidget : public UUMGSettingContextWidget
{
public:
	unsigned char                                      UnknownData_ALAA[0x60];                                    // 0x0318(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               AimAssist;                                                 // 0x0378(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PEA5[0x3];                                     // 0x0379(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                HandSide;                                                  // 0x037C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                InteractionButton;                                         // 0x0380(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               InvertY;                                                   // 0x0384(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2I0B[0x3];                                     // 0x0385(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              KillerCameraSensitivity;                                   // 0x0388(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              SurvivorCameraSensitivity;                                 // 0x038C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3U59[0x18];                                    // 0x0390(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSettingControlsContextWidget");
		return ptr;
	}



	void HandleSurvivorCameraSensitivityChanged(float sliderValue);
	void HandleKillerCameraSensitivityChanged(float sliderValue);
	void HandleInvertYToggleClick(bool toggleValue);
	void HandleInteractionButtonToggleClick(int Index);
	void HandleHandSideToggleClick(int Index);
	void HandleAimAssistToggleClick(bool toggleValue);
};

// Class DeadByDaylight.UMGSettingLanguageContextWidget
// 0x0048 (FullSize[0x0360] - InheritedSize[0x0318])
class UUMGSettingLanguageContextWidget : public UUMGSettingContextWidget
{
public:
	class UScrollBox*                                  LanguageScrollBox;                                         // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _languageButtonClass[0x30];                                // 0x0320(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	int                                                _languageListRowGap;                                       // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PBUB[0x4];                                     // 0x0354(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGSettingContextButton*                    _selectedLanguageButton;                                   // 0x0358(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSettingLanguageContextWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGSettingMenuButton
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGSettingMenuButton : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_6BAZ[0x18];                                    // 0x0300(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSettingMenuButton");
		return ptr;
	}



	void SetTabButtonText(const struct FText& ButtonText);
	void SetIsSelected(bool IsSelected);
	void HandleSettingTabButtonClick();
};

// Class DeadByDaylight.UMGSettingSettingsContextWidget
// 0x00C8 (FullSize[0x03E0] - InheritedSize[0x0318])
class UUMGSettingSettingsContextWidget : public UUMGSettingContextWidget
{
public:
	unsigned char                                      UnknownData_YI6Y[0x90];                                    // 0x0318(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               MainVolumeOn;                                              // 0x03A8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DRD1[0x3];                                     // 0x03A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MainVolume;                                                // 0x03AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               MenuVolumeOn;                                              // 0x03B0(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HI6Y[0x3];                                     // 0x03B1(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MenuVolume;                                                // 0x03B4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsLoggedIn;                                                // 0x03B8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsEnableUserCenterWithLoggedOut;                           // 0x03B9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsLeaveTutorialButtonVisible;                              // 0x03BA(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               IsAutoDeclineFriendRequestOn;                              // 0x03BB(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_KIAO[0x24];                                    // 0x03BC(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSettingSettingsContextWidget");
		return ptr;
	}



	void ShowLinkAccountRow(bool isShow);
	void HandleUserCenterButtonClick();
	void HandleMenuVolumeToggleClick(bool toggleValue);
	void HandleMenuVolumeChanged(float sliderValue);
	void HandleMainVolumeToggleClick(bool toggleValue);
	void HandleMainVolumeChanged(float sliderValue);
	void HandleLogOutButtonClick();
	void HandleLogInButtonClick();
	void HandleLeaveTutorialButtonClick();
	void HandleAutoDeclineFriendRequestToggleClick(bool toggleValue);
};

// Class DeadByDaylight.UMGSettingSubscriptionStatus
// 0x00A8 (FullSize[0x0308] - InheritedSize[0x0260])
class UUMGSettingSubscriptionStatus : public UUserWidget
{
public:
	struct FText                                       SubscriptionStatusText;                                    // 0x0260(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       StatusText;                                                // 0x0278(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       InactiveStatusText;                                        // 0x0290(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	struct FText                                       EndText;                                                   // 0x02A8(0x0018) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             TypeSwitcher;                                              // 0x02C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              ActiveWidget;                                              // 0x02C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                                    InactiveWidget;                                            // 0x02D0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TitleText;                                                 // 0x02D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DisplayName;                                               // 0x02E0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Status;                                                    // 0x02E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  StatusInactive;                                            // 0x02F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  End;                                                       // 0x02F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  endDate;                                                   // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSettingSubscriptionStatus");
		return ptr;
	}



};

// Class DeadByDaylight.UMGSettingTutorialContextWidget
// 0x0028 (FullSize[0x0340] - InheritedSize[0x0318])
class UUMGSettingTutorialContextWidget : public UUMGSettingContextWidget
{
public:
	class UUMGSettingContextButton*                    SurvivorTutorialButton;                                    // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSettingContextButton*                    KillerTutorialButton;                                      // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSettingContextButton*                    SurvivorCinematicButton;                                   // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSettingContextButton*                    KillerCinematicButton;                                     // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSettingContextButton*                    LoreCinematicButton;                                       // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSettingTutorialContextWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGShadersPrecompilingProgressionWidget
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGShadersPrecompilingProgressionWidget : public UMobileBaseUserWidget
{
public:
	class UProgressBar*                                _progressBar;                                              // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  _progressionText;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGShadersPrecompilingProgressionWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UmgSpectatorHud
// 0x0020 (FullSize[0x0548] - InheritedSize[0x0528])
class UUmgSpectatorHud : public UUmgPlayerHud
{
public:
	struct FScriptMulticastDelegate                    OnLeaveSpectateClicked;                                    // 0x0528(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnPlayerSpectate;                                          // 0x0538(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UmgSpectatorHud");
		return ptr;
	}



	void OnPlayerStatusSelected(const struct FString& playerName);
	void HandleLeaveSpectateClicked();
};

// Class DeadByDaylight.UMGSplashScreen
// 0x0070 (FullSize[0x0370] - InheritedSize[0x0300])
class UUMGSplashScreen : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnSaveGamePopupCompleteEvent;                              // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnScreenTouched;                                           // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UCanvasPanel*                                SavePopup;                                                 // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  GameVersion;                                               // 0x0328(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  LoadingState;                                              // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  PressKey;                                                  // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                     TapButton;                                                 // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  SaveGameTitle;                                             // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  SaveGameDescription;                                       // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGDownloadProgressionWidget*               DownloadProgression;                                       // 0x0358(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGCharacterSlideShowWidget*                CharacterSlideShow;                                        // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WD8Y[0x8];                                     // 0x0368(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSplashScreen");
		return ptr;
	}



	void OnTapButtonClicked();
	void OnSaveGamePopupComplete();
};

// Class DeadByDaylight.UMGStalkingStatusEffectUI
// 0x0050 (FullSize[0x0350] - InheritedSize[0x0300])
class UUMGStalkingStatusEffectUI : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                StalkedCanvas;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      StalkingFillFull;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      StalkingFillLines;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      StalkingRedBackground;                                     // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       StalkingStartAnimationName;                                // 0x0320(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_GKX0[0x24];                                    // 0x032C(0x0024) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGStalkingStatusEffectUI");
		return ptr;
	}



};

// Class DeadByDaylight.DBDMapFoliageDensityTunables
// 0x0010 (FullSize[0x0040] - InheritedSize[0x0030])
class UDBDMapFoliageDensityTunables : public UObject
{
public:
	TArray<struct FTypeFoliageToAutomateDensity>       FoliageToAutomateDensity;                                  // 0x0030(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDMapFoliageDensityTunables");
		return ptr;
	}



};

// Class DeadByDaylight.DBDMarketingCameraController
// 0x0030 (FullSize[0x06C0] - InheritedSize[0x0690])
class ADBDMarketingCameraController : public ADebugCameraController
{
public:
	unsigned char                                      UnknownData_1UEC[0x30];                                    // 0x0690(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDMarketingCameraController");
		return ptr;
	}



	void DBD_SetMarketingCameraTriggerSensitivity(float triggerSensitivity);
	void DBD_SetMarketingCameraDampeningFactor(float accelerationFactor, float decelerationFactor);
	void DBD_SetMarketingCameraControllerSensitivityModifier(float ModifierValue, bool isEditingRight);
	void DBD_MarketingCameraToggleDampening();
};

// Class DeadByDaylight.DBDMaterialBlueprintLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDMaterialBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDMaterialBlueprintLibrary");
		return ptr;
	}



	void STATIC_SetVectorParameterValueOnMeshComponent(class UMeshComponent* Mesh, const struct FName& ParameterName, const struct FLinearColor& value);
	void STATIC_SetTransformParameterValueOnMeshComponent(class UMeshComponent* Mesh, const struct FName& ParameterName, const struct FTransform& value);
	void STATIC_SetTransformParameterValueOnMaterialDynamic(class UMaterialInstanceDynamic* Material, const struct FName& ParameterName, const struct FTransform& value);
	void STATIC_SetTransformParameterInverseValueOnMaterialDynamic(class UMaterialInstanceDynamic* Material, const struct FName& ParameterName, const struct FTransform& value);
	TArray<class UMaterialInstanceDynamic*> STATIC_CreateDynamicMaterialInstanceForParticleSystem(class UParticleSystemComponent* System);
};

// Class DeadByDaylight.DBDMathBlueprintLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDMathBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDMathBlueprintLibrary");
		return ptr;
	}



	bool STATIC_VectorIntersect(const struct FVector& OriginA, const struct FVector& ExtentA, const struct FVector& OriginB, const struct FVector& ExtentB);
	struct FVector STATIC_VectorAbsoluteValue(const struct FVector& A);
	TArray<struct FLinearColor> STATIC_TransformToMatrix(const struct FTransform& A);
};

// Class DeadByDaylight.DBDHookUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDHookUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDHookUtilities");
		return ptr;
	}



	bool STATIC_IsWraithHook(class AMeatHook* targetHook);
	bool STATIC_IsPigHook(class AMeatHook* targetHook);
	bool STATIC_IsNurseHook(class AMeatHook* targetHook);
	bool STATIC_IsLegionHook(class AMeatHook* targetHook);
	bool STATIC_IsHuntressHook(class AMeatHook* targetHook);
	bool STATIC_IsHookOf(class AMeatHook* targetHook, const struct FGameplayTag& hookTag);
	bool STATIC_IsHagHook(class AMeatHook* targetHook);
	bool STATIC_IsFreddyHook(class AMeatHook* targetHook);
	float STATIC_ComputeHookStrugglePercent(class ACamperPlayer* hookedCamper, float hookStruggleThreshold);
};

// Class DeadByDaylight.DBDMenuPlayer
// 0x00C0 (FullSize[0x0620] - InheritedSize[0x0560])
class ADBDMenuPlayer : public ADBDBasePlayer
{
public:
	unsigned char                                      UnknownData_4824[0x28];                                    // 0x0560(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               RoleSelected;                                              // 0x0588(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               IsOnline;                                                  // 0x0589(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_PW4W[0x6];                                     // 0x058A(0x0006) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnItemEquipped;                                            // 0x0590(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      DarkMaterial[0x30];                                        // 0x05A0(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	DeadByDaylight_EItemHandPosition                   _handPosition;                                             // 0x05D0(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_P4BC[0x7];                                     // 0x05D1(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class USkeletalMeshComponent*                      ItemMesh;                                                  // 0x05D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialHelper*                             MaterialHelper;                                            // 0x05E0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _equippedItemName;                                         // 0x05E8(0x000C) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_A40J[0x2C];                                    // 0x05F4(0x002C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDMenuPlayer");
		return ptr;
	}



	void WrappedOnDestroyed(class AActor* DestroyedActor);
	bool ShouldShowSpawnAnimation();
	bool ShouldApplyPositionOffset();
	void RestartInSequence_Internal();
	void OnCustomizationTransactionCompleted(DeadByDaylight_ECustomizationCategory Category);
	bool IsInMenuPlayer();
	DeadByDaylight_EItemHandPosition GetHandPosition();
	class UCharmSpawnerComponent* GetCharmSpawnerComponent();
	void BeginDestroySequence_Internal();
	void BeginCreateSequence();
};

// Class DeadByDaylight.DBDMenuSilhouette
// 0x0000 (FullSize[0x0230] - InheritedSize[0x0230])
class ADBDMenuSilhouette : public AActor
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDMenuSilhouette");
		return ptr;
	}



};

// Class DeadByDaylight.DBDMistLocatorComponent
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class UDBDMistLocatorComponent : public UDBDLocatorComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDMistLocatorComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDMistManager
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class ADBDMistManager : public AActor
{
public:
	class UDBDAggregateParticleSystemComponent*        _particleSystemComp;                                       // 0x0230(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDMistManager");
		return ptr;
	}



};

// Class DeadByDaylight.DBDNavEvadeLoopComponent
// 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
class UDBDNavEvadeLoopComponent : public UActorComponent
{
public:
	struct FVector                                     EvadeDoorExtent;                                           // 0x00B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EvadeDoorFrontPointOffset;                                 // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              EvadeDoorSideOffset;                                       // 0x00C8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SideBlockerOffset;                                         // 0x00CC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoSnapPointsUpHeight;                                    // 0x00D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              AutoSnapPointsDownHeight;                                  // 0x00D4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_ECollisionChannel>              AutoSnapCollisionChannel;                                  // 0x00D8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_0P8N[0x7];                                     // 0x00D9(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      EvadeLoopFilterClass;                                      // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinSafetyLength;                                           // 0x00E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxSafetyLength;                                           // 0x00EC(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EAIEvadeLoopSides                   LimitToSide;                                               // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DebugEditMode;                                             // 0x00F1(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               DrawDebugFilter;                                           // 0x00F2(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_5L9B[0x65];                                    // 0x00F3(0x0065) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDNavEvadeLoopComponent");
		return ptr;
	}



	void OnLevelReadyToPlay();
};

// Class DeadByDaylight.DBDNavModifierComponent
// 0x0050 (FullSize[0x01A0] - InheritedSize[0x0150])
class UDBDNavModifierComponent : public UNavModifierComponent
{
public:
	bool                                               ForceUseFailsafeExtent;                                    // 0x0150(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_8IXB[0x3];                                     // 0x0151(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              UpdateModifierInterval;                                    // 0x0154(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               StartNavigationRelevant;                                   // 0x0158(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               AlwaysTickToCheckTransform;                                // 0x0159(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               RelevantPassiveMode;                                       // 0x015A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_2VC8[0x45];                                    // 0x015B(0x0045) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDNavModifierComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDNetworkUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDBDNetworkUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDNetworkUtilities");
		return ptr;
	}



	bool STATIC_IsRunningDedicatedServerFlow();
	bool STATIC_IsOnDedicatedServerNetwork(class UObject* WorldContextObject);
};

// Class DeadByDaylight.DBDObserverPlayer
// 0x0040 (FullSize[0x0510] - InheritedSize[0x04D0])
class ADBDObserverPlayer : public ACharacter
{
public:
	class UDBDPlayerData*                              _playerData;                                               // 0x04D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XIJJ[0x38];                                    // 0x04D8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDObserverPlayer");
		return ptr;
	}



	void Server_PlayerReady();
};

// Class DeadByDaylight.DBDOnlineSessionClient
// 0x0028 (FullSize[0x01F0] - InheritedSize[0x01C8])
class UDBDOnlineSessionClient : public UOnlineSessionClient
{
public:
	unsigned char                                      UnknownData_FBV1[0x28];                                    // 0x01C8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDOnlineSessionClient");
		return ptr;
	}



};

// Class DeadByDaylight.DBDOutlineComponent
// 0x00B0 (FullSize[0x0350] - InheritedSize[0x02A0])
class UDBDOutlineComponent : public UBatchMeshCommands
{
public:
	float                                              InterpolationSpeed;                                        // 0x02A0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ShouldBeAboveOutlines;                                     // 0x02A4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               ForceOutlineFarAway;                                       // 0x02A5(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               LimitToCustomDepthObjects;                                 // 0x02A6(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               FadeOutAsClosingIn;                                        // 0x02A7(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               isAlwaysVisible;                                           // 0x02A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_X2XH[0x3];                                     // 0x02A9(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              minimumOutlineDistance;                                    // 0x02AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     OutlineName;                                               // 0x02B0(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_G9JP[0x58];                                    // 0x02C0(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDOutlineRenderStrategySelector           _renderStrategySelector;                                   // 0x0318(0x0010) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	class UBatchMeshCommands*                          _batchMeshCommands;                                        // 0x0328(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_126M[0x10];                                    // 0x0330(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBaseOutlineRenderStrategy*                  _renderingStrategy;                                        // 0x0340(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q6XS[0x8];                                     // 0x0348(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDOutlineComponent");
		return ptr;
	}



	void SetTargetColor(const struct FLinearColor& Color);
	void SetOutlineIntensity(float outlineIntensity);
	void SetMinimumOutlineDistance(float Distance);
	void SetMaterialCopyTarget(class UMaterialInterface* inMaterialToCopy);
	void SetIsOccludingOutlines(bool isOccluding);
	void SetFadeTexture(class UTexture* inFadeTexture);
	void SetFadeIntensity(float fadeIntensity);
	void ResetToTransparent();
	void RefreshOutlineComponent();
	void OnLevelReadyToPlay();
	void InitBatcher();
};

// Class DeadByDaylight.DBDOutlineComponentConfiguration
// 0x00B8 (FullSize[0x00F0] - InheritedSize[0x0038])
class UDBDOutlineComponentConfiguration : public UDataAsset
{
public:
	TMap<class UClass*, struct FOutlineConfiguration>  OutlineConfigurations;                                     // 0x0038(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	TMap<struct FName, struct FOutlineColourConfiguration> OutlineColours;                                            // 0x0088(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UMaterialInterface*                          OutlineMaterial;                                           // 0x00D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UMaterialInterface*>                  DefaultTranslucencyMaterials;                              // 0x00E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDOutlineComponentConfiguration");
		return ptr;
	}



};

// Class DeadByDaylight.DBDOutlineComponentCustomDepthConfiguration
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UDBDOutlineComponentCustomDepthConfiguration : public UDBDOutlineComponentConfiguration
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDOutlineComponentCustomDepthConfiguration");
		return ptr;
	}



};

// Class DeadByDaylight.DBDOutlineComponentStencilConfiguration
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UDBDOutlineComponentStencilConfiguration : public UDBDOutlineComponentConfiguration
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDOutlineComponentStencilConfiguration");
		return ptr;
	}



};

// Class DeadByDaylight.DBDOutlineComponentTranslucentConfiguration
// 0x0000 (FullSize[0x00F0] - InheritedSize[0x00F0])
class UDBDOutlineComponentTranslucentConfiguration : public UDBDOutlineComponentConfiguration
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDOutlineComponentTranslucentConfiguration");
		return ptr;
	}



};

// Class DeadByDaylight.DBDParadiseGameMode
// 0x0000 (FullSize[0x0358] - InheritedSize[0x0358])
class ADBDParadiseGameMode : public ADBDBaseGameMode
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDParadiseGameMode");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPartyFacade
// 0x0010 (FullSize[0x04A0] - InheritedSize[0x0490])
class UDBDPartyFacade : public UPartyFacade
{
public:
	unsigned char                                      UnknownData_DF0R[0x10];                                    // 0x0490(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPartyFacade");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPawnSensingComponent
// 0x0008 (FullSize[0x0108] - InheritedSize[0x0100])
class UDBDPawnSensingComponent : public UPawnSensingComponent
{
public:
	bool                                               bSenseEverywhere;                                          // 0x0100(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_TDIL[0x3];                                     // 0x0101(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              PartiallyHiddenSensingDistance;                            // 0x0104(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPawnSensingComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPersistentData
// 0x0DD8 (FullSize[0x0E08] - InheritedSize[0x0030])
class UDBDPersistentData : public UObject
{
public:
	struct FGamePersistentData                         _gamePersistentData;                                       // 0x0030(0x0100) (Transient, NativeAccessSpecifierPrivate)
	TArray<struct FString>                             _keepDataIDs;                                              // 0x0130(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<struct FString, struct FPlayerPersistentData> _playerIdToPersistentDataMap;                              // 0x0140(0x0050) (Transient, NativeAccessSpecifierPrivate)
	struct FPlayerPersistentData                       _localPlayerPersistentData;                                // 0x0190(0x0740) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6XBB[0x50];                                    // 0x08D0(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FCloudInventoryItem>                 _cloudInventory;                                           // 0x0920(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GSYW[0x4D8];                                   // 0x0930(0x04D8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPersistentData");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerCameraManager
// 0x0014 (FullSize[0x2760] - InheritedSize[0x274C])
class ADBDPlayerCameraManager : public APlayerCameraManager
{
public:
	float                                              TargetingFOV;                                              // 0x274C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      _viewRotationStrategy[0x10];                               // 0x2750(0x0010) UNKNOWN PROPERTY: InterfaceProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerCameraManager");
		return ptr;
	}



};

// Class DeadByDaylight.DBDPlayerControllerBase
// 0x00B8 (FullSize[0x0640] - InheritedSize[0x0588])
class ADBDPlayerControllerBase : public APlayerController
{
public:
	unsigned char                                      UnknownData_C5WJ[0xA0];                                    // 0x0588(0x00A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ADBDPlayer*                                  _mainCharacter;                                            // 0x0628(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Q5HB[0x10];                                    // 0x0630(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerControllerBase");
		return ptr;
	}



	void Server_UpdateReplicatedPips(int pipsToAdd);
	void Server_SendMessage(const struct FString& Message);
	void Server_SendClientAuthentication(const struct FString& authClientTicket, uint64_t steamID, uint32_t ticketLength);
	void Server_ReceivePlayerProfile(const struct FPlayerSavedProfileDataShared& savedProfileData, const struct FPlayerLoadoutData& playerLoadout);
	void Server_EACMessageFromClient(TArray<unsigned char> Message, uint32_t messageLength);
	void Server(const struct FString& commandLine);
	void DBD_UpdateLocalStats();
	void DBD_SetCurrentCharacterPrestigeDatesPast();
	void DBD_SetCurrentCharacterPrestigeDatesNow();
	void DBD_SetCurrentCharacterPrestigeDatesFuture();
	void DBD_FireTestScore(int Category, float value);
	void DBD_FillScoreCategory(int Category);
	void DBD_FillAllScoreCategories();
	void DBD_DebugSendChatMessage(const struct FString& Msg);
	void DBD_BuildFromTile(int matrixX, int matrixY, int Rotation, const struct FString& Name);
	void DBD_BuildFromSeed(int Seed);
	void DBD_BuildFromPremadeMap(const struct FString& Map);
	void DBD_BuildFromPlayerCount(int count);
	void DBD_BuildFromMap(const struct FString& Map);
	void Client_ValidateServer();
	void Client_SendWarning(bool penaltyStarts, float Seconds);
	void Client_SendServerAuthentication(const struct FString& authServerTicket, uint64_t steamID, uint32_t ticketLength);
	void Client_SendLogs(TArray<struct FString> ensures);
	void Client_RequestPlayerProfile();
	void Client_GameEnded();
	void Client_FinishedPlaying();
	void Client_EACMessageFromServer(TArray<unsigned char> Message, uint32_t messageLength);
	void CallConsoleCmdOnServer_Server(const struct FString& commandLine);
};

// Class DeadByDaylight.DBDPlayerController
// 0x0210 (FullSize[0x0850] - InheritedSize[0x0640])
class ADBDPlayerController : public ADBDPlayerControllerBase
{
public:
	struct FScriptMulticastDelegate                    OnPawnLeavingGame;                                         // 0x0640(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLocallyObservedChanged;                                  // 0x0650(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_1CHE[0x98];                                    // 0x0660(0x0098) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ANetworkFenceActor*                          _theFence;                                                 // 0x06F8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4920[0x8];                                     // 0x0700(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDBaseInputHandler*                        _inputHandler;                                             // 0x0708(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XS87[0x128];                                   // 0x0710(0x0128) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class APawn*                                       _aiPawn;                                                   // 0x0838(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E9AX[0x8];                                     // 0x0840(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DBDSharedTypes_EPlayerRole                         _controllerGameRole;                                       // 0x0848(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_68V0[0x7];                                     // 0x0849(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerController");
		return ptr;
	}



	void SetShouldMoveInputReplicateToServer(bool ShouldReplicate);
	void ServerViewPlayer(const struct FString& playerName);
	void Server_SetSpectatorModeInEditor(bool On, class ADBDPlayerState* spectatingPlayerState);
	void Server_SetSpectatorMode(bool On);
	void Server_SetReadyToTravel();
	void Server_SetHasMoveInputThisFrame(bool hasMoveInputThisFrame);
	void Server_RequestEndGame();
	void Server_LeaveGame(bool joiningLobby);
	void Server_DebugSend(const struct FString& Data);
	void Server_ActivateAIAll(bool Activate, int PlayerRank, int8_t PlayerRole);
	void Server_ActivateAI(bool Activate, int PlayerRank);
	void OnRep_Fence();
	bool MobileJoystickInput_Pressed(int joystickIndex);
	bool IsSpectating();
	void ImplementRunLockMechanic();
	class ADBDPlayerState* GetSpectatedPlayerState();
	class ADBDPlayer* GetSpectatedPlayer();
	class ADBDPlayer* GetControlledPlayer();
	class APawn* GetAIPawn();
	void Client_SpectateAI(class APawn* aiPawn);
	void Client_SetSpectatorModeInEditor(bool On, class ADBDPlayerState* spectatingPlayerState);
	void Client_SetSpectatorMode(bool On);
	void ActivateAI(bool Activate, int PlayerRank);
};

// Class DeadByDaylight.DBDPlayerController_Menu
// 0x0000 (FullSize[0x0640] - InheritedSize[0x0640])
class ADBDPlayerController_Menu : public ADBDPlayerControllerBase
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerController_Menu");
		return ptr;
	}



	void TogglePlayerReadyState();
	void SetPlayerReady(bool IsReady);
	void Server_SetReadyToTravel();
	void Server_SetPlayerReady(bool IsReady);
	void Server_SetPlayerLoadout(const struct FPlayerLoadoutData& desiredLoadout);
	void Server_SetEquipedPerks(TArray<struct FName> perkIds, TArray<int> perkLevels, bool callOnRep);
	void Server_SetCustomizationMeshes(TArray<struct FName> ItemIDs);
	void Server_SetCustomizationCharm(const struct FName& CharmId, int8_t SlotIndex);
	void Server_SetCharacterLevel(int CharacterLevel, int PrestigeLevel, bool callOnRep);
	void Server_SetCharacterData(int characterIndex, const struct FPlayerDataSync& PlayerDataSync);
	void Server_GamePresetDataFromClient(const struct FGamePresetData& GameState);
	void Authority_TogglePlayerReadyState();
	void Authority_SetPlayerReady(bool IsReady);
};

// Class DeadByDaylight.DBDPlayerLevelManager
// 0x00A8 (FullSize[0x00D8] - InheritedSize[0x0030])
class UDBDPlayerLevelManager : public UObject
{
public:
	unsigned char                                      UnknownData_IE4M[0xA8];                                    // 0x0030(0x00A8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDPlayerLevelManager");
		return ptr;
	}



};

// Class DeadByDaylight.FranklinsDemiseConsumedByEntityComponent
// 0x0078 (FullSize[0x0130] - InheritedSize[0x00B8])
class UFranklinsDemiseConsumedByEntityComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_8S6A[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimerObject*                                _consumeTimer;                                             // 0x00D0(0x0008) (ExportObject, Net, ZeroConstructor, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BICV[0x10];                                    // 0x00D8(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UStatusEffect*                               _camperStatus;                                             // 0x00E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                                  _previousOwner;                                            // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDPlayer*                                  _originatingPerkOwner;                                     // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargerComponent*                           _itemChargerComponent;                                     // 0x0100(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PZK6[0x28];                                    // 0x0108(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FranklinsDemiseConsumedByEntityComponent");
		return ptr;
	}



	void OnRep_ConsumeTimer();
	void OnConsumedByEntity();
	void Authority_StartConsume(float Duration, class ADBDPlayer* previousOwner, class ADBDPlayer* Slasher);
};

// Class DeadByDaylight.FrenzyComponent
// 0x0110 (FullSize[0x01C8] - InheritedSize[0x00B8])
class UFrenzyComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnFrenzyStarted;                                           // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFrenzyEnded;                                             // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFrenzyEndedNoCooldown;                                   // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnInjuredBleedoutStartedDuringFrenzy;                      // 0x00E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnFrenzyReadyToStart;                                      // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_SE5A[0x70];                                    // 0x0108(0x0070) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ASlasherPlayer*                              _slasher;                                                  // 0x0178(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_X72J[0x28];                                    // 0x0180(0x0028) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInteractionDefinition*                      _cooldownInteraction;                                      // 0x01A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YBYZ[0x18];                                    // 0x01B0(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FrenzyComponent");
		return ptr;
	}



	void StartFrenzy();
	void SetStartingFrenzy(bool startingFrenzy);
	void SetObjectState(class UGameplayTagContainerComponent* objectState);
	void ResumeFrenzyChargeDepletion();
	void PauseFrenzyChargeDepletion();
	void OnMoriStarted();
	void OnGameEventDispatched(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void OnFrenzyCooldownStarted();
	bool IsInFrenzyCooldown();
	bool IsInFrenzy();
	void InitializeFrenzy();
	bool HasStartedInjuredBleedoutDuringThisFrenzy();
	void EndFrenzy(DeadByDaylight_EFrenzyEndReason reason);
	bool CanStartFrenzy();
	bool CanManuallyEndFrenzy();
};

// Class DeadByDaylight.FriendManager
// 0x0238 (FullSize[0x0268] - InheritedSize[0x0030])
class UFriendManager : public UObject
{
public:
	unsigned char                                      UnknownData_72ZJ[0x238];                                   // 0x0030(0x0238) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FriendManager");
		return ptr;
	}



};

// Class DeadByDaylight.FriendSearchPopupScreen
// 0x0060 (FullSize[0x01A0] - InheritedSize[0x0140])
class UFriendSearchPopupScreen : public UGenericPopupScreen
{
public:
	unsigned char                                      UnknownData_I9SX[0x60];                                    // 0x0140(0x0060) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FriendSearchPopupScreen");
		return ptr;
	}



	void OnUnblockPlayer(const struct FString& friendKrakenID);
	void OnInviteFriend(const struct FString& friendKrakenID, bool IsOffNetwork);
	void OnFriendSearchStart(const struct FString& SearchText);
	void OnAcceptFriendInvite(const struct FString& friendKrakenID);
};

// Class DeadByDaylight.FriendsListScreen
// 0x00F0 (FullSize[0x0210] - InheritedSize[0x0120])
class UFriendsListScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_GQSC[0xF0];                                    // 0x0120(0x00F0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FriendsListScreen");
		return ptr;
	}



	void OnViewProfile(const struct FString& friendId);
	void OnUnblockPlayer(const struct FString& playerID);
	void OnSendPartyInvite(const struct FString& friendId);
	void OnSearchForFriend();
	void OnRemoveFriend(const struct FString& friendId);
	void OnPartyJoinRequest(const struct FString& friendId);
	void OnDeclineFriendInvite(const struct FString& friendId);
	void OnCancelFriendInvite(const struct FString& friendId);
	void OnBlockPlayer(const struct FString& playerID);
	void OnAcceptFriendInvite(const struct FString& friendId);
};

// Class DeadByDaylight.DedicatedServerHandlerComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UDedicatedServerHandlerComponent : public UActorComponent
{
public:
	struct FAtlantaRitualSet                           _atlantaRituals;                                           // 0x00B8(0x0038) (NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DedicatedServerHandlerComponent");
		return ptr;
	}



	void ReceiveGameEvent(DeadByDaylight_EDBDScoreTypes scoreType, float amount, class AActor* Instigator, class AActor* Target);
	void OnGameEvent(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
};

// Class DeadByDaylight.DedicatedServerManager
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UDedicatedServerManager : public UObject
{
public:
	unsigned char                                      _startupInitializer[0x10];                                 // 0x0030(0x0010) UNKNOWN PROPERTY: InterfaceProperty
	unsigned char                                      UnknownData_VZB2[0x10];                                    // 0x0040(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0050(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UOnlineSystemHandler*                        _onlineSystemHandler;                                      // 0x0058(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DedicatedServerManager");
		return ptr;
	}



};

// Class DeadByDaylight.DedicatedServerStartupInitializerInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDedicatedServerStartupInitializerInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DedicatedServerStartupInitializerInterface");
		return ptr;
	}



};

// Class DeadByDaylight.DemogorgonPortal
// 0x00A8 (FullSize[0x03D0] - InheritedSize[0x0328])
class ADemogorgonPortal : public AInteractable
{
public:
	class UPrimitiveComponent*                         _portalAreaCollider;                                       // 0x0328(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChargeableComponent*                        _destroyChargeable;                                        // 0x0330(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChargeableComponent*                        _teleportChargeable;                                       // 0x0338(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EDemogorgonPortalState              _portalState;                                              // 0x0340(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3ME6[0x7];                                     // 0x0341(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAkAudioEvent*                               _portalIdleSound;                                          // 0x0348(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               _portalDestroyingStart;                                    // 0x0350(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkAudioEvent*                               _portalTeleportingSound;                                   // 0x0358(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UParticleSystem*                             _destroyParticleSystem;                                    // 0x0360(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _destroyDuration;                                          // 0x0368(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_N2N6[0x64];                                    // 0x036C(0x0064) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DemogorgonPortal");
		return ptr;
	}



	void TriggerDirtExplosion();
	void ShowPortalTeleportInteractionStartVFX();
	void ShowPortalActiveVFX();
	void RemovePortalTeleportInteractionStartVFX();
	void RemovePortalActiveVFX();
	void PlaySoundFromPortal(class UAkAudioEvent* SoundEvent);
	void OnTeleportAbilityCooldownChangedVFX(bool isOnCooldown);
	void OnTargetedChanged();
	void OnPortalStateChanged(DeadByDaylight_EDemogorgonPortalState State);
	void OnPortalDestroyed(class ADBDPlayer* Player);
	void OnEndOverlapPortalArea(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnBeginOverlapPortalArea(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void Multicast_SurvivorsInterruptedOnDestroy(TArray<class ADBDPlayer*> Targets);
	void MakePortalDisappearVFX();
	bool IsTargeted();
	void Authority_StopDestroyingPlayers();
	void Authority_OnTeleportChargePercentChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete);
	void Authority_OnDestroyChargePercentChanged(class UChargeableComponent* ChargeableComponent, float PercentCompletionChange, float TotalPercentComplete);
};

// Class DeadByDaylight.DemogorgonPortalEffectComponent
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UDemogorgonPortalEffectComponent : public UActorComponent
{
public:
	struct FName                                       _statusEffectName;                                         // 0x00B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _effectLingerDuration;                                     // 0x00C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UStatusEffect>                _effect;                                                   // 0x00C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class ADBDPlayer>                   _originatingPlayer;                                        // 0x00D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UGameplayModifierContainer>   _originatingEffect;                                        // 0x00D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_29HC[0x28];                                    // 0x00E0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DemogorgonPortalEffectComponent");
		return ptr;
	}



	void Authority_Initialize(const struct FName& StatusEffect, float lingerDuration, class ADBDPlayer* originatingPlayer, class UGameplayModifierContainer* originatingEffect);
};

// Class DeadByDaylight.DemogorgonPortalPlacementValidationStrategy
// 0x0020 (FullSize[0x0100] - InheritedSize[0x00E0])
class UDemogorgonPortalPlacementValidationStrategy : public UDefaultObjectPlacementValidationStrategy
{
public:
	class UPortalPlacerStateComponent*                 _portalPlacerState;                                        // 0x00E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UChargedAttackStateComponent*                _chargedAttackState;                                       // 0x00E8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _distanceForWorldCollisionDetection;                       // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _numberOfGroundTest;                                       // 0x00F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _portalEdgeTestRadius;                                     // 0x00F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _maxElevationDifferentialOnPortalEdge;                     // 0x00FC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DemogorgonPortalPlacementValidationStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DemogorgonStealthComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UDemogorgonStealthComponent : public UActorComponent
{
public:
	TWeakObjectPtr<class UStatusEffect>                _stealthEffect;                                            // 0x00B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YM9Y[0x20];                                    // 0x00C0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DemogorgonStealthComponent");
		return ptr;
	}



	void Authority_OnLevelReadyToPlay();
};

// Class DeadByDaylight.DestroyBreakableDefinition
// 0x0040 (FullSize[0x05F0] - InheritedSize[0x05B0])
class UDestroyBreakableDefinition : public UInteractionDefinition
{
public:
	float                                              _interactionTimePercentForDestroyEvent;                    // 0x05B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6WJJ[0x2C];                                    // 0x05B4(0x002C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ABreakableBase*                              _breakable;                                                // 0x05E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L7OS[0x8];                                     // 0x05E8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DestroyBreakableDefinition");
		return ptr;
	}



	class ABreakableBase* GetBreakable();
};

// Class DeadByDaylight.DetectionZoneUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDetectionZoneUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DetectionZoneUtilities");
		return ptr;
	}



	bool STATIC_DetectObstruction(class ADBDPlayer* Player, DBDSharedTypes_EDetectionZone detectionZoneID, class UPhysicalMaterial** physicalMaterialOut, struct FVector* positionOut, struct FVector* normalOut);
};

// Class DeadByDaylight.DisciplineEffect
// 0x0008 (FullSize[0x0358] - InheritedSize[0x0350])
class UDisciplineEffect : public UStatusEffect
{
public:
	float                                              _deactivationDelay;                                        // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FCGR[0x4];                                     // 0x0354(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DisciplineEffect");
		return ptr;
	}



	bool ShouldShowFakeKillerStain();
};

// Class DeadByDaylight.DiscordancePerk
// 0x0060 (FullSize[0x0430] - InheritedSize[0x03D0])
class UDiscordancePerk : public UPerk
{
public:
	TArray<struct FGeneratorQueryHandlePair>           _generatorQueryHandlePairs;                                // 0x03D0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JSZH[0x30];                                    // 0x03E0(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _effectRange[0x3];                                         // 0x0410(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _auraLingerDuration;                                       // 0x041C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _numSurvivorsRepairingToReveal;                            // 0x0420(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OAWR[0x1];                                     // 0x0424(0x0001) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isPerkConsideredActive;                                   // 0x0425(0x0001) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_D21F[0x2];                                     // 0x0426(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AGenerator*                                  _genratorToCheckNextFrame;                                 // 0x0428(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DiscordancePerk");
		return ptr;
	}



	void Multicast_AddLingeringGeneratorAura(class AGenerator* Generator);
	void Multicast_AddGeneratorAura(class AGenerator* Generator);
};

// Class DeadByDaylight.DisplayStandCharmRequesterComponent
// 0x0028 (FullSize[0x00E0] - InheritedSize[0x00B8])
class UDisplayStandCharmRequesterComponent : public UActorComponent
{
public:
	class UClass*                                      _menuCharmClass;                                           // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Z702[0x20];                                    // 0x00C0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DisplayStandCharmRequesterComponent");
		return ptr;
	}



	void OnCharmDisplayed(class AActor* Actor);
};

// Class DeadByDaylight.DisplayStandCurrencyRequesterComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UDisplayStandCurrencyRequesterComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_UNEW[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _menuCurrencyDisplayableClass;                             // 0x00C0(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DisplayStandCurrencyRequesterComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DisplayStandItemRequesterComponent
// 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
class UDisplayStandItemRequesterComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_LKOQ[0x40];                                    // 0x00B8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DisplayStandItemRequesterComponent");
		return ptr;
	}



	void LoadItemsOnCharacter(class AActor* Actor);
};

// Class DeadByDaylight.DisplayStandMeatHookRequesterComponent
// 0x0018 (FullSize[0x00D0] - InheritedSize[0x00B8])
class UDisplayStandMeatHookRequesterComponent : public UActorComponent
{
public:
	class UClass*                                      _meatHookClass;                                            // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_W4EI[0x10];                                    // 0x00C0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DisplayStandMeatHookRequesterComponent");
		return ptr;
	}



	void OnMeatHookDisplayed(class AActor* Actor, TArray<struct FCharmIdSlot> charmIDs);
};

// Class DeadByDaylight.DlcHelper
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDlcHelper : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DlcHelper");
		return ptr;
	}



};

// Class DeadByDaylight.DoctorPowerAnimStateComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UDoctorPowerAnimStateComponent : public UActorComponent
{
public:
	DeadByDaylight_EDoctorAbilityType                  _abilityType;                                              // 0x00B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EDoctorAbilityPhase                 _abilityPhase;                                             // 0x00B9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LOAM[0x6];                                     // 0x00BA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DoctorPowerAnimStateComponent");
		return ptr;
	}



	void SetCurrentAbilityType(DeadByDaylight_EDoctorAbilityType abilityType);
	void SetCurrentAbilityPhase(DeadByDaylight_EDoctorAbilityPhase abilityPhase);
};

// Class DeadByDaylight.DragDropOperation_Widget
// 0x00B8 (FullSize[0x0148] - InheritedSize[0x0090])
class UDragDropOperation_Widget : public UDragDropOperation
{
public:
	class UUMGDragWidget*                              Widget;                                                    // 0x0090(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UPanelWidget*                                WidgetParent;                                              // 0x0098(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   startPosition;                                             // 0x00A0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   WidgetLocalScale;                                          // 0x00A8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_LZXA[0x18];                                    // 0x00B0(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              WidgetLocalOpacity;                                        // 0x00C8(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   OnDropOffset;                                              // 0x00CC(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   OnDragOffset;                                              // 0x00D4(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FAnchors                                    WidgetSlotAnchors;                                         // 0x00DC(0x0010) (BlueprintVisible, NoDestructor, NativeAccessSpecifierPublic)
	struct FMargin                                     WidgetSlotOffsets;                                         // 0x00EC(0x0010) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)
	struct FVector2D                                   WidgetSlotPosition;                                        // 0x00FC(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FVector2D                                   WidgetSlotSize;                                            // 0x0104(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               WidgetSlotAutoSize;                                        // 0x010C(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_59MW[0x3];                                     // 0x010D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector2D                                   WidgetSlotAlignment;                                       // 0x0110(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                WidgetSlotZOrder;                                          // 0x0118(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_P26C[0x4];                                     // 0x011C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGDragWidget*                              ChildLinkWidget;                                           // 0x0120(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_58L0[0x20];                                    // 0x0128(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DragDropOperation_Widget");
		return ptr;
	}



};

// Class DeadByDaylight.VaultableOutlineUpdateStrategy
// 0x0008 (FullSize[0x0138] - InheritedSize[0x0130])
class UVaultableOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{
public:
	bool                                               _canBeRevealedToLocalPlayer;                               // 0x0130(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RAZT[0x7];                                     // 0x0131(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.VaultableOutlineUpdateStrategy");
		return ptr;
	}



	void SetCanBeRevealedToLocalPlayer(bool canBeRevealedToLocalPlayer);
};

// Class DeadByDaylight.PalletOutlineUpdateStrategy
// 0x0010 (FullSize[0x0148] - InheritedSize[0x0138])
class UPalletOutlineUpdateStrategy : public UVaultableOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _revealedByPowerColor;                                     // 0x0138(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PalletOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DreamPalletOutlineUpdateStrategy
// 0x0028 (FullSize[0x0170] - InheritedSize[0x0148])
class UDreamPalletOutlineUpdateStrategy : public UPalletOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _revealedByMapColor;                                       // 0x0148(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_TD5L[0x18];                                    // 0x0158(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DreamPalletOutlineUpdateStrategy");
		return ptr;
	}



	void InitializeTunableValues(class ASlasherPlayer* killer);
};

// Class DeadByDaylight.DreamSnareOutlineUpdateStrategy
// 0x0010 (FullSize[0x00F0] - InheritedSize[0x00E0])
class UDreamSnareOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{
public:
	unsigned char                                      UnknownData_81A3[0x10];                                    // 0x00E0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DreamSnareOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DreamSnareTrapPlacementValidationStrategy
// 0x0010 (FullSize[0x00F0] - InheritedSize[0x00E0])
class UDreamSnareTrapPlacementValidationStrategy : public UDefaultObjectPlacementValidationStrategy
{
public:
	float                                              NumberOfGroundTest;                                        // 0x00E0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              TrapRadius;                                                // 0x00E4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              MaxElevationDifferentialOnTrapEdge;                        // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8BLO[0x4];                                     // 0x00EC(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DreamSnareTrapPlacementValidationStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.DreamworldOnlyComponent
// 0x0020 (FullSize[0x0230] - InheritedSize[0x0210])
class UDreamworldOnlyComponent : public USceneComponent
{
public:
	unsigned char                                      UnknownData_O45T[0x20];                                    // 0x0210(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DreamworldOnlyComponent");
		return ptr;
	}



};

// Class DeadByDaylight.DynamicGrass
// 0x0018 (FullSize[0x0248] - InheritedSize[0x0230])
class ADynamicGrass : public AActor
{
public:
	class UMaterialParameterCollection*                _worldSettings;                                            // 0x0230(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZWFP[0x10];                                    // 0x0238(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DynamicGrass");
		return ptr;
	}



};

// Class DeadByDaylight.DynamicGrassEffectorInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UDynamicGrassEffectorInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DynamicGrassEffectorInterface");
		return ptr;
	}



};

// Class DeadByDaylight.EdgeObjectHandlingStrategy
// 0x0128 (FullSize[0x0158] - InheritedSize[0x0030])
class UEdgeObjectHandlingStrategy : public UObject
{
public:
	TArray<class UActorSpawner*>                       _edgeObjectSpawners;                                       // 0x0030(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UActorSpawner*>                       _edgeObjectBlockers;                                       // 0x0040(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_CMA1[0x108];                                   // 0x0050(0x0108) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EdgeObjectHandlingStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ProceduralLevelBuilder
// 0x0C48 (FullSize[0x0E78] - InheritedSize[0x0230])
class AProceduralLevelBuilder : public AActor
{
public:
	unsigned char                                      UnknownData_3OUN[0x18];                                    // 0x0230(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FString                                     PathToMapDirectory;                                        // 0x0248(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     PathToTilesDirectory;                                      // 0x0258(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              KillerMinProximityFromCamper;                              // 0x0268(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivorMinProximityFromOtherCamper;                       // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinProximityBetweenGenerators;                             // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinProximityBetweenChests;                                 // 0x0274(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinProximityBetweenTotems;                                 // 0x0278(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivorMinProximityFromGenerator;                         // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivorMinProximityFromTotem;                             // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SurvivorMaxLineOfSightFromTotem;                           // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinProximityBetweenSpecialBehaviourItems;                  // 0x0288(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpecialBehaviourItemMinProximityFromSurvivor;              // 0x028C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SpecialBehaviourItemMinProximityFromKiller;                // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_KB22[0x4];                                     // 0x0294(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DebugMap;                                                  // 0x0298(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UClass*>                              DebugTiles;                                                // 0x02A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              SmallMeatLockerMinProximityFromKillerLair;                 // 0x02B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FactorToAdjustToWhenOutOfProximity;                        // 0x02B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              FactorToAdjustToWhenInLineOfSight;                         // 0x02B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightAmplifier;                                           // 0x02BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              HeightAmplifierActivationHeight;                           // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NGKR[0x4];                                     // 0x02C4(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProceduralGenerationData*                   ProceduralGenerationData;                                  // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              TileWeightRateOfDecay;                                     // 0x02D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              QuadTileWeightRateOfDecay;                                 // 0x02D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                      _tileClass;                                                // 0x02D8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B7QA[0x1C0];                                   // 0x02E0(0x01C0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMapData*                                    _mapData;                                                  // 0x04A0(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UObjectLibrary*                              _availableTilesLibrary;                                    // 0x04A8(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_Y8TY[0xE8];                                    // 0x04B0(0x00E8) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UObjectLibrary*                              _availableDerivedTileLibrary;                              // 0x0598(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QLI1[0x8];                                     // 0x05A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      DesignTunableClass;                                        // 0x05A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UDBDDesignTunables*                          _designTunables;                                           // 0x05B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FGeneratedLevelData                         _generatedData;                                            // 0x05B8(0x02A0) (ContainsInstancedReference, NativeAccessSpecifierPrivate)
	TArray<struct FDependency>                         _escapeDependencies;                                       // 0x0858(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8J4G[0x2A0];                                   // 0x0868(0x02A0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTileMatrix*                                 _tileMatrix;                                               // 0x0B08(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTileBank*                                   _tileBank;                                                 // 0x0B10(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EU4F[0x68];                                    // 0x0B18(0x0068) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UActorSpawner*                               _killerLairSpawner;                                        // 0x0B80(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WQZX[0x8];                                     // 0x0B88(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FSoftObjectPath>                     _preloadAssetReferences;                                   // 0x0B90(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UClass*>                              _chestItemAssetReferences;                                 // 0x0BA0(0x0010) (ZeroConstructor, Transient, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _slasherPawn;                                              // 0x0BB0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_O2RQ[0x18];                                    // 0x0BB8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class ATile*>                               _tilesThatHaveBeenSpawned;                                 // 0x0BD0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZV8O[0x10];                                    // 0x0BE0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AProceduralLevelData*                        _debugProceduralDatas;                                     // 0x0BF0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDClientSyncer*                            _syncer;                                                   // 0x0BF8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlackboardComponent*                        _blackboardComp;                                           // 0x0C00(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6PMR[0x58];                                    // 0x0C08(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UEdgeObjectHandlingStrategy*                 _edgeObjectHandlingStrategy;                               // 0x0C60(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_E0LQ[0x210];                                   // 0x0C68(0x0210) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ProceduralLevelBuilder");
		return ptr;
	}



	void SyncSeeds();
	void StartGenerationOnSyncerReady();
	class AActor* SpawnActor(class UClass* actorClass, DeadByDaylight_ETileSpawnPointType spawnPointType);
	void RemoveMist();
	void OnMapLevelLoaded();
	void Multicast_DebugShareGenerationData(const struct FGenerationParams& usedParams);
	void BuildFromSeed();
	void ApplyMist(float Modifier);
};

// Class DeadByDaylight.ProceduralLevelData
// 0x0318 (FullSize[0x0548] - InheritedSize[0x0230])
class AProceduralLevelData : public AActor
{
public:
	unsigned char                                      SelectedPaperMap[0x30];                                    // 0x0230(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	int                                                GenerationSeed;                                            // 0x0260(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EKillerMoodInfluence                LevelMood;                                                 // 0x0264(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_HA1S[0x3];                                     // 0x0265(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FGeneratedLevelData                         GeneratedData;                                             // 0x0268(0x02A0) (Edit, BlueprintVisible, BlueprintReadOnly, ContainsInstancedReference, NativeAccessSpecifierPublic)
	TArray<struct FName>                               offerings;                                                 // 0x0508(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                PerksLevel;                                                // 0x0518(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_G3PB[0x4];                                     // 0x051C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FName>                               Perks;                                                     // 0x0520(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               SkipGameplayElementGeneration;                             // 0x0530(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GWX3[0x7];                                     // 0x0531(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      _builder;                                                  // 0x0538(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _builderClassDef;                                          // 0x0540(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ProceduralLevelData");
		return ptr;
	}



};

// Class DeadByDaylight.ProcessingPopupScreen
// 0x0000 (FullSize[0x0120] - InheritedSize[0x0120])
class UProcessingPopupScreen : public UBasePopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ProcessingPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.PromoCodeManager
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UPromoCodeManager : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_MF4V[0x18];                                    // 0x0038(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PromoCodeManager");
		return ptr;
	}



};

// Class DeadByDaylight.ScreenIndicatorWorldMarker
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class AScreenIndicatorWorldMarker : public AActor
{
public:
	class UTexture2D*                                  HudScreenIndicatorIcon;                                    // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EHudScreenIndicatorType             HudScreenIndicatorType;                                    // 0x0238(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_XE9H[0x3];                                     // 0x0239(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFloatRange                                 VisibleDistanceRange;                                      // 0x023C(0x0010) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NBYL[0x4];                                     // 0x024C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ScreenIndicatorWorldMarker");
		return ptr;
	}



};

// Class DeadByDaylight.ScreenSpaceLocationComponent
// 0x0030 (FullSize[0x0240] - InheritedSize[0x0210])
class UScreenSpaceLocationComponent : public USceneComponent
{
public:
	float                                              ScreenSpaceX;                                              // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              ScreenSpaceY;                                              // 0x0214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                FrameDelay;                                                // 0x0218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   _currentResolution;                                        // 0x021C(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_NJYZ[0x4];                                     // 0x0224(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FTransform>                          _previousTransforms;                                       // 0x0228(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WYM8[0x8];                                     // 0x0238(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ScreenSpaceLocationComponent");
		return ptr;
	}



	bool HasValidPosition();
	struct FVector2D GetCurrentResolution();
};

// Class DeadByDaylight.Searchable
// 0x00C0 (FullSize[0x03E8] - InheritedSize[0x0328])
class ASearchable : public AInteractable
{
public:
	unsigned char                                      UnknownData_2J8P[0x10];                                    // 0x0328(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Weight;                                                    // 0x0338(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DBDSharedTypes_EItemRarity                         ItemRarity;                                                // 0x033C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_QR4F[0x3];                                     // 0x033D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    OnSearchedChanged;                                         // 0x0340(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class USearchableSpawnPoint*                       _searchableSpawnPoint;                                     // 0x0350(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FName                                       _itemIdToSpawn;                                            // 0x0358(0x000C) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _hasBeenSearched;                                          // 0x0364(0x0001) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V5UN[0x3];                                     // 0x0365(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ACollectable*                                _itemInsideSearchable;                                     // 0x0368(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ADBDPlayer*, unsigned char>             _numberOfSearchesWhileOpenPerPlayer;                       // 0x0370(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2Z03[0x28];                                    // 0x03C0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Searchable");
		return ptr;
	}



	void SetHasBeenSearched(bool newHasBeenSearched);
	void OnSearchedChanged__DelegateSignature(bool searched);
	bool HasBeenSearched();
	class UPrimitiveComponent* GetInteractorPrimitiveComponent();
	bool ContainsSpawnedItem();
	class ACollectable* Authority_SpawnObject(class ADBDPlayer* Player);
};

// Class DeadByDaylight.SearchableOutlineUpdateStrategy
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class USearchableOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SearchableOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.TileSpawnPoint
// 0x0070 (FullSize[0x0280] - InheritedSize[0x0210])
class UTileSpawnPoint : public USceneComponent
{
public:
	unsigned char                                      UnknownData_TEXZ[0x10];                                    // 0x0210(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_ETileSpawnPointType                 TileSpawnPointType;                                        // 0x0220(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_H0Y3[0x3];                                     // 0x0221(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              Weight;                                                    // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      Visualization[0x30];                                       // 0x0228(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_KA0Y[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      _spawnedObject;                                            // 0x0260(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UClass*>                              ObjectSpawnModifier;                                       // 0x0268(0x0010) (Edit, BlueprintVisible, ZeroConstructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	int                                                _spawnPriorityTier;                                        // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _weightInfluenceable;                                      // 0x027C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _weightInfluencer;                                         // 0x027D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _activated;                                                // 0x027E(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I4FI[0x1];                                     // 0x027F(0x0001) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TileSpawnPoint");
		return ptr;
	}



	void SetActivated(bool activated);
	void OnRep_SpawnObject();
	bool IsActivated();
	class AActor* GetSpawnedObject();
};

// Class DeadByDaylight.SearchableSpawnPoint
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class USearchableSpawnPoint : public UTileSpawnPoint
{
public:
	class UClass*                                      ActorToSpawn;                                              // 0x0280(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_W0BY[0x8];                                     // 0x0288(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SearchableSpawnPoint");
		return ptr;
	}



};

// Class DeadByDaylight.SeasonEndPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class USeasonEndPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SeasonEndPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.SeasonEndRankRewardsPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class USeasonEndRankRewardsPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SeasonEndRankRewardsPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.SeasonManager
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class ASeasonManager : public AActor
{
public:
	class UDBDGameInstance*                            _gameInstance;                                             // 0x0230(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SeasonManager");
		return ptr;
	}



};

// Class DeadByDaylight.SectionnedChargeableComponent
// 0x0008 (FullSize[0x0298] - InheritedSize[0x0290])
class USectionnedChargeableComponent : public UChargeableComponent
{
public:
	unsigned char                                      _sections;                                                 // 0x0290(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2E7G[0x7];                                     // 0x0291(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SectionnedChargeableComponent");
		return ptr;
	}



	float GetSectionChargeRemaining();
};

// Class DeadByDaylight.SelectiveVisibilityComponent
// 0x0000 (FullSize[0x0210] - InheritedSize[0x0210])
class USelectiveVisibilityComponent : public USceneComponent
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.SelectiveVisibilityComponent");
		return ptr;
	}



	void Local_SetVisibility(bool bNewVisibility, bool bPropagateToChildren);
};

// Class DeadByDaylight.EditorMeshVisualization
// 0x0060 (FullSize[0x0270] - InheritedSize[0x0210])
class UEditorMeshVisualization : public USceneComponent
{
public:
	unsigned char                                      MeshVisualization[0x30];                                   // 0x0210(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	struct FTransform                                  RelativeTransform;                                         // 0x0240(0x0030) (Edit, BlueprintVisible, IsPlainOldData, NoDestructor, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EditorMeshVisualization");
		return ptr;
	}



};

// Class DeadByDaylight.EffectsLocator
// 0x0068 (FullSize[0x0298] - InheritedSize[0x0230])
class AEffectsLocator : public AActor
{
public:
	TArray<struct FEffectsLocatorTargets>              AffectedActors;                                            // 0x0230(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              ActorCaptureRadius;                                        // 0x0240(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_UOEH[0x54];                                    // 0x0244(0x0054) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EffectsLocator");
		return ptr;
	}



	void OnLostActor(class AActor* lostActor);
	void OnLeaveCollisionArea(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnFoundActor(class AActor* foundActor);
	void OnEnterCollisionArea(class AActor* OverlappedActor, class AActor* OtherActor);
	void OnActorTick(class UMaterialInstanceDynamic* actorMaterialInstanceDynamic);
};

// Class DeadByDaylight.EmblemRankContainer
// 0x01F8 (FullSize[0x0230] - InheritedSize[0x0038])
class UEmblemRankContainer : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_M7WM[0x1F8];                                   // 0x0038(0x01F8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EmblemRankContainer");
		return ptr;
	}



};

// Class DeadByDaylight.EmblemRankUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UEmblemRankUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EmblemRankUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.EmblemTooltipWidget
// 0x0058 (FullSize[0x0390] - InheritedSize[0x0338])
class UEmblemTooltipWidget : public UBaseTooltipWidget
{
public:
	class UImage*                                      HeaderBackground;                                          // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  SubTitleLabel;                                             // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      HeaderSmoke;                                               // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                DataContainer;                                             // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyEmblemProgressBar*                  TallyEmblemProgressBar;                                    // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      ProgressionDataWidgetClass[0x30];                          // 0x0360(0x0030) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EmblemTooltipWidget");
		return ptr;
	}



};

// Class DeadByDaylight.EndGameComponent
// 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
class UEndGameComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_ETM3[0xA0];                                    // 0x00B8(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EndGameComponent");
		return ptr;
	}



	void UnpauseEndGameTimer();
	void StartEndGame_Cheat();
	void PauseEndGameTimer();
	bool GetHasEndGameBegun();
	void FireEndGameSacrificeScoreEvent(const struct FGameEventData& GameEventData);
	void DisableEndGameScenario();
};

// Class DeadByDaylight.EndGameEntity
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class AEndGameEntity : public AActor
{
public:
	class USkeletalMeshComponent*                      _skeletalMeshComponent;                                    // 0x0230(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EndGameEntity");
		return ptr;
	}



};

// Class DeadByDaylight.EndGameEntityAnimInstance
// 0x0010 (FullSize[0x0280] - InheritedSize[0x0270])
class UEndGameEntityAnimInstance : public UAnimInstance
{
public:
	bool                                               _isFront;                                                  // 0x0270(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isBack;                                                   // 0x0271(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_NPWG[0xE];                                     // 0x0272(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EndGameEntityAnimInstance");
		return ptr;
	}



};

// Class DeadByDaylight.EndGameStateComponent
// 0x0068 (FullSize[0x0120] - InheritedSize[0x00B8])
class UEndGameStateComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_3GFC[0xC];                                     // 0x00B8(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _isEndGameOver;                                            // 0x00C4(0x0001) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_6C54[0x3];                                     // 0x00C5(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _worldTimeAtLastModification;                              // 0x00C8(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GZEX[0x44];                                    // 0x00CC(0x0044) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _timeDilation;                                             // 0x0110(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isTimerPaused;                                            // 0x0114(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GQS2[0x3];                                     // 0x0115(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _normalTotalTimeElapsedAtLastTimeModification;             // 0x0118(0x0004) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_EEndGameScenarioTrigger             _endGameScenarioTrigger;                                   // 0x011C(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U2VI[0x3];                                     // 0x011D(0x0003) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EndGameStateComponent");
		return ptr;
	}



	void OnRep_WorldTimeAtLastDilationModification();
	void OnRep_TimeDilation();
	void OnRep_IsTimerPaused();
	void OnRep_IsEndGameOver();
	void Multicast_SetIsInEndGameSimulation(bool endGameSimulation);
	bool IsTimerSlowedDown();
	bool IsEndGameOver();
	bool HasEndGameBegun();
	float GetElapsedTimePercent();
};

// Class DeadByDaylight.EnduranceVFXComponent
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UEnduranceVFXComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_0CNI[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EnduranceVFXComponent");
		return ptr;
	}



	void Authority_ShowHighlight(class UGameplayModifierContainer* preventKOSource);
};

// Class DeadByDaylight.EnergyPoweredInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UEnergyPoweredInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EnergyPoweredInterface");
		return ptr;
	}



};

// Class DeadByDaylight.EnsureLoggingSubsystem
// 0x0038 (FullSize[0x0070] - InheritedSize[0x0038])
class UEnsureLoggingSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_BS81[0x38];                                    // 0x0038(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EnsureLoggingSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.Entity
// 0x0020 (FullSize[0x0250] - InheritedSize[0x0230])
class AEntity : public AActor
{
public:
	class UCurveFloat*                                 _dissolveCurve;                                            // 0x0230(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveFloat*                                 _revealsCurve;                                             // 0x0238(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialHelper*                             _materialHelper;                                           // 0x0240(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USkeletalMeshComponent*                      _skeletalMesh;                                             // 0x0248(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Entity");
		return ptr;
	}



};

// Class DeadByDaylight.EpicProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UEpicProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EpicProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.EscapeBlocker
// 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
class AEscapeBlocker : public AActor
{
public:
	unsigned char                                      UnknownData_OK6X[0x8];                                     // 0x0230(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UBoxComponent*                               _camperBlocker;                                            // 0x0238(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBoxComponent*                               _playerDetectionZone;                                      // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RARS[0x20];                                    // 0x0248(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EscapeBlocker");
		return ptr;
	}



	void SetPlayerDetectionZone(class UBoxComponent* playerDetectionZone);
	void SetCamperBlocker(class UBoxComponent* camperBlocker);
	void OnPlayerDetectionZoneEndOverlap(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnPlayerDetectionZoneBeginOverlap(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void DeactivatePlayerBlockerFX();
	void ActivatePlayerBlockerFX();
};

// Class DeadByDaylight.EscapeDoor
// 0x00F8 (FullSize[0x0420] - InheritedSize[0x0328])
class AEscapeDoor : public AInteractable
{
public:
	unsigned char                                      UnknownData_WWVV[0x10];                                    // 0x0328(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVector>                             EscapePositions;                                           // 0x0338(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class UObject*>                             EscapeFire;                                                // 0x0348(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UChargeableComponent*                        _killerOpenChargeable;                                     // 0x0358(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UChargeableComponent*                        _openChargeable;                                           // 0x0360(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAkComponent*                                _ak_audio_escape;                                          // 0x0368(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEscapeDoorAnimInstance*                     _escapeDoorAnimInstance;                                   // 0x0370(0x0008) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USceneComponent*                             _rootComponent;                                            // 0x0378(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _activated;                                                // 0x0380(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_3NP0[0x7];                                     // 0x0381(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AEscapeBlocker*                              _escapeBlockerInstance;                                    // 0x0388(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class USpotLightComponent*                         _spotlight;                                                // 0x0390(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_37AO[0x48];                                    // 0x0398(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ACamperPlayer*                               _localOverlappingCamper;                                   // 0x03E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_EDVD[0x8];                                     // 0x03E8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                               // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlockableComponent*                         _doorSwitchBlockableComponent;                             // 0x03F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_YQWU[0x20];                                    // 0x0400(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EscapeDoor");
		return ptr;
	}



	void StartAtlantaDoorOpeningSound();
	void StartAtlantaDoorBeepingSound();
	void SetIsActivated(bool IsActivated);
	void OnUnblockDoorSwitchCosmetic();
	void OnRep_OnEscapeBlockerSet(class AEscapeBlocker* escapeBlockerInstance);
	void OnRep_Activated(bool oldActivated);
	void OnPlayerExitExitArea(class ADBDPlayer* Player);
	void OnPlayerEnterExitArea(class ADBDPlayer* Player);
	void OnExitOpenChanged(bool OPENED);
	void OnExitGateOpened(class ADBDPlayer* Player);
	void OnExitActivationChanged(bool activated);
	void OnEscapeZoneEndOverlap(class AActor* overlappingActor);
	void OnEscapeZoneBeginOverlap(class AActor* overlappingActor);
	void OnCamperStartOpeningExitGate(class ACamperPlayer* Player);
	void OnBlockDoorSwitchCosmetic();
	void LightAllLights();
	bool IsDoorSwitchBlocked();
	bool IsActivated();
	class USceneComponent* GetSwitchSceneComponent();
	struct FVector GetParadiseServerLocation();
	float GetOpenTime();
	class UChargeableInteractionDefinition* GetOpenEscapeInteraction();
	bool GetIsOpen();
	class UBoxComponent* GetExitArea();
	struct FVector GetEscapeSwitchFloorLocation();
	class USkeletalMeshComponent* GetDoorSkeletalMeshComponent();
	bool GetAtlantaExitOpeningIndicatorVisibility();
	void Authority_SetEscapeBlocker();
};

// Class DeadByDaylight.EscapeDoorAnimInstance
// 0x0010 (FullSize[0x0290] - InheritedSize[0x0280])
class UEscapeDoorAnimInstance : public USleepingAnimInstance
{
public:
	bool                                               _isOpen;                                                   // 0x0280(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isOpenByKiller;                                           // 0x0281(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RP3W[0xE];                                     // 0x0282(0x000E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EscapeDoorAnimInstance");
		return ptr;
	}



	void SetIsOpenByKiller(bool isOpenByKiller);
	void SetIsOpen(bool IsOpen);
	void PlaySound(class UAkAudioEvent* AkEvent);
};

// Class DeadByDaylight.EscapeOutlineUpdateStrategy
// 0x0020 (FullSize[0x00E0] - InheritedSize[0x00C0])
class UEscapeOutlineUpdateStrategy : public UOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _doorOpenColorForSurvivor;                                 // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _doorOpenColorForKiller;                                   // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EscapeOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.EscapeRequirementTracker
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UEscapeRequirementTracker : public UObject
{
public:
	TArray<class AGenerator*>                          _escapeGenerators;                                         // 0x0030(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class ADBDGameState*                               _dbdGameState;                                             // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_H04A[0x18];                                    // 0x0048(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EscapeRequirementTracker");
		return ptr;
	}



	void OnGameEventDispatched(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
};

// Class DeadByDaylight.EscapeTile
// 0x0008 (FullSize[0x0350] - InheritedSize[0x0348])
class AEscapeTile : public ATile
{
public:
	unsigned char                                      UnknownData_IMY5[0x8];                                     // 0x0348(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EscapeTile");
		return ptr;
	}



};

// Class DeadByDaylight.EventEntryPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UEventEntryPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EventEntryPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.EventObjectComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UEventObjectComponent : public UActorComponent
{
public:
	struct FName                                       _eventId;                                                  // 0x00B8(0x000C) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_XZF8[0x4];                                     // 0x00C4(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EventObjectComponent");
		return ptr;
	}



};

// Class DeadByDaylight.EventGeneratorComponent
// 0x0008 (FullSize[0x00D0] - InheritedSize[0x00C8])
class UEventGeneratorComponent : public UEventObjectComponent
{
public:
	bool                                               _updateOultineForSurvivor;                                 // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _updateOultineForSlasher;                                  // 0x00C9(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_N3GT[0x6];                                     // 0x00CA(0x0006) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EventGeneratorComponent");
		return ptr;
	}



};

// Class DeadByDaylight.EventHookComponent
// 0x0010 (FullSize[0x00D8] - InheritedSize[0x00C8])
class UEventHookComponent : public UEventObjectComponent
{
public:
	unsigned char                                      UnknownData_78WI[0x10];                                    // 0x00C8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EventHookComponent");
		return ptr;
	}



	void SetOutlineCarryingColorToDefault();
};

// Class DeadByDaylight.EventsFactory
// 0x0000 (FullSize[0x0038] - InheritedSize[0x0038])
class UEventsFactory : public UGameInstanceSubsystem
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EventsFactory");
		return ptr;
	}



};

// Class DeadByDaylight.EvilWithinComponent
// 0x0080 (FullSize[0x0138] - InheritedSize[0x00B8])
class UEvilWithinComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTierChange;                                              // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	int                                                _currentTier;                                              // 0x00C8(0x0004) (Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _lastTierTimeStart;                                        // 0x00CC(0x0004) (Net, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_PMKG[0x58];                                    // 0x00D0(0x0058) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FString>                             _allowedSurvivorInteractionsForKill;                       // 0x0128(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.EvilWithinComponent");
		return ptr;
	}



	void OnRep_CurrentTier(int previousTier);
	void OnLevelReadyToPlay();
	bool IsAtLastTier();
	float GetRequirementForTier(int tier);
	float GetPercentStalkingPointsInCurrentTier();
	int GetMaxTier();
	int GetCurrentTier();
	bool CanStandKill(class ADBDPlayer* Player);
	bool CanBeStandingKilled(class ADBDPlayer* Player);
	void Authority_OnStalkPointsAdded(float stalkPoints);
	void Authority_OnPlayerDisconnect(class ADBDPlayer* Player);
	void Authority_NotifyKill(class ADBDPlayer* killedPlayer);
};

// Class DeadByDaylight.ExitGateSwitchesRestrictedPlacementAreaStrategy
// 0x0000 (FullSize[0x0070] - InheritedSize[0x0070])
class UExitGateSwitchesRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ExitGateSwitchesRestrictedPlacementAreaStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.ExitOpenedIndicatorWidget
// 0x0000 (FullSize[0x0348] - InheritedSize[0x0348])
class UExitOpenedIndicatorWidget : public UBaseIndicatorWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ExitOpenedIndicatorWidget");
		return ptr;
	}



};

// Class DeadByDaylight.ExposerCirclingComponent
// 0x0060 (FullSize[0x0270] - InheritedSize[0x0210])
class UExposerCirclingComponent : public USceneComponent
{
public:
	bool                                               DirectionFollows;                                          // 0x0210(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_089Q[0x3];                                     // 0x0211(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              MinHeight;                                                 // 0x0214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxHeight;                                                 // 0x0218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MinRadius;                                                 // 0x021C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaxRadius;                                                 // 0x0220(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              CirclingSpeed;                                             // 0x0224(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DistanceBetweenPoints;                                     // 0x0228(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              BezierModifier;                                            // 0x022C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                Samples;                                                   // 0x0230(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_AFCQ[0x3C];                                    // 0x0234(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ExposerCirclingComponent");
		return ptr;
	}



	void SetIsCircling(bool circling);
	void Reset();
};

// Class DeadByDaylight.ExposerInteriorZoneComponent
// 0x0010 (FullSize[0x0460] - InheritedSize[0x0450])
class UExposerInteriorZoneComponent : public UBoxComponent
{
public:
	TArray<class USceneComponent*>                     ExposerSpawnPoints;                                        // 0x0450(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ExposerInteriorZoneComponent");
		return ptr;
	}



	void AddExposerSpawnPoint(class USceneComponent* Point);
};

// Class DeadByDaylight.Fadeable
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UFadeable : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Fadeable");
		return ptr;
	}



	void OnFadeEnd(class AActor* Other);
	void OnFadeBegin(class AActor* Other);
	void OnAlphaChanged(float newAlpha, class AActor* Other);
};

// Class DeadByDaylight.FasterChestSearch
// 0x0000 (FullSize[0x0350] - InheritedSize[0x0350])
class UFasterChestSearch : public UStatusEffect
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FasterChestSearch");
		return ptr;
	}



};

// Class DeadByDaylight.FearMarketManager
// 0x00C8 (FullSize[0x00F8] - InheritedSize[0x0030])
class UFearMarketManager : public UObject
{
public:
	struct FFearMarketItemInstance                     PendingPurchaseFearMarketItem;                             // 0x0030(0x0018) (NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_L8QQ[0x48];                                    // 0x0048(0x0048) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FFearMarketOfferingInstance                 _existingFearMarket;                                       // 0x0090(0x0020) (NativeAccessSpecifierPrivate)
	TWeakObjectPtr<class UDBDGameInstance>             _gameInstance;                                             // 0x00B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_1VVI[0x40];                                    // 0x00B8(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FearMarketManager");
		return ptr;
	}



	void ReceivedFearMarketData(bool success);
};

// Class DeadByDaylight.FearMarketPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UFearMarketPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.FearMarketPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.GlassStaticMesh
// 0x0058 (FullSize[0x0540] - InheritedSize[0x04E8])
class UGlassStaticMesh : public UStaticMeshComponent
{
public:
	unsigned char                                      UnknownData_H2BN[0x8];                                     // 0x04E8(0x0008) Fix Super Size
	unsigned char                                      UnknownData_1NLA[0x40];                                    // 0x04F0(0x0040) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FVector                                     defaultGlassNormalVector;                                  // 0x0530(0x000C) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_C2WE[0x4];                                     // 0x053C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GlassStaticMesh");
		return ptr;
	}



};

// Class DeadByDaylight.GlassCollectionSubsystem
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UGlassCollectionSubsystem : public UGameInstanceSubsystem
{
public:
	unsigned char                                      UnknownData_WZ5I[0x10];                                    // 0x0038(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GlassCollectionSubsystem");
		return ptr;
	}



};

// Class DeadByDaylight.GlyphNavMovementComponent
// 0x0028 (FullSize[0x0168] - InheritedSize[0x0140])
class UGlyphNavMovementComponent : public UNavMovementComponent
{
public:
	class AActor*                                      _glyphOwner;                                               // 0x0140(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPathFollowingComponent*                     _pathFollowingComponent;                                   // 0x0148(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, DuplicateTransient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      bPositionCorrected : 1;                                    // 0x0150(0x0001) BIT_FIELD (Transient, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BUZV[0x3];                                     // 0x0151(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maxSpeed;                                                 // 0x0154(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _acceleration;                                             // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _deceleration;                                             // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _brakingDeceleration;                                      // 0x0160(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4V88[0x4];                                     // 0x0164(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GlyphNavMovementComponent");
		return ptr;
	}



	void SetMaxSpeed(float MaxSpeed);
	void SetDeceleration(float Deceleration);
	void SetAcceleration(float Acceleration);
	class AActor* GetGlyphOwner();
};

// Class DeadByDaylight.GRDKProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UGRDKProfileDAL : public UPS4GRDKBaseProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.GRDKProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.HalloweenEventComponent
// 0x0088 (FullSize[0x0140] - InheritedSize[0x00B8])
class UHalloweenEventComponent : public UActorComponent
{
public:
	class USectionnedChargeableComponent*              _toxinVialComponent;                                       // 0x00B8(0x0008) (Edit, ExportObject, Net, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_SW4G[0x80];                                    // 0x00C0(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HalloweenEventComponent");
		return ptr;
	}



	void Server_SpawnVial(float initialCharge);
	void OnRep_Vial();
	void OnFinishedPlaying(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	bool IsVialFull();
	class USectionnedChargeableComponent* GetVial();
};

// Class DeadByDaylight.HasTokenOrActivationTimerElapsedIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UHasTokenOrActivationTimerElapsedIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HasTokenOrActivationTimerElapsedIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.HasTokenPerkIconStrategy
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UHasTokenPerkIconStrategy : public UBasePerkIconStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HasTokenPerkIconStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.Hatch
// 0x00B8 (FullSize[0x03E0] - InheritedSize[0x0328])
class AHatch : public AInteractable
{
public:
	unsigned char                                      UnknownData_4A0M[0x50];                                    // 0x0328(0x0050) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	DeadByDaylight_EHatchState                         _hatchState;                                               // 0x0378(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isSurvivorEscaping;                                       // 0x0379(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isEndGameOver;                                            // 0x037A(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _isForceOpen;                                              // 0x037B(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _attemptToCloseHatchOnNextEscape;                          // 0x037C(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_HKWI[0xB];                                     // 0x037D(0x000B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UPrimitiveComponent*                         _baseCollision;                                            // 0x0388(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XKDW[0x18];                                    // 0x0390(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTunableRowHandle                        _hatchOpenDuration;                                        // 0x03A8(0x0028) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V6Q0[0x10];                                    // 0x03D0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Hatch");
		return ptr;
	}



	void SetIsSurvivorEscaping(bool escaping);
	void SetForceIsOpen(bool forceIsOpen);
	void ResetTimer(float Duration);
	void OnSurvivorsLeftChanged(int survivorRemaining);
	void OnSurvivorEscaping();
	void OnSurvivorEscapeInterrupted();
	void OnSurvivorEscaped();
	void OnRep_HatchState(DeadByDaylight_EHatchState oldState);
	void OnHatchVisibilityChanged(bool IsVisible);
	void OnHatchStateModified(DeadByDaylight_EHatchState oldState, DeadByDaylight_EHatchState NewState);
	void OnEndGameOver(const struct FGameplayTag& gameEventType, const struct FGameEventData& GameEventData);
	void Local_SetHatchState(bool Open);
	bool IsSurvivorEscaping();
	bool IsOpen();
	DeadByDaylight_EHatchState GetHatchState();
	class USceneComponent* GetHatchCenter();
	class USceneComponent* GetEscapeFocalPoint();
	class UAnimationMontageSlave* GetAnimationMontageSlave();
	void FXOpenHatch();
	void FXEndSmoke();
	void FXCloseHatch();
	void Authority_SetIsForceOpen(bool isForcedOpen);
	void Authority_SetHatchState(DeadByDaylight_EHatchState NewState);
	void Authority_OnCloseTimerComplete();
	void Authority_CheckedOpenHatch();
	void Authority_CheckedOpenForceClosedHatch();
	void Authority_CheckedCloseHatch();
	void Authority_CheckedChangeActiveState();
};

// Class DeadByDaylight.HatchOutlineUpdateStrategy
// 0x0000 (FullSize[0x00E0] - InheritedSize[0x00E0])
class UHatchOutlineUpdateStrategy : public UDefaultOutlineUpdateStrategy
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HatchOutlineUpdateStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.PlayerOverlapHISMComponent
// 0x0010 (FullSize[0x06C0] - InheritedSize[0x06B0])
class UPlayerOverlapHISMComponent : public UHISMMaterialHelperComponent
{
public:
	TArray<class UMaterialInterface*>                  _playerOverlapOverrides;                                   // 0x06B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.PlayerOverlapHISMComponent");
		return ptr;
	}



};

// Class DeadByDaylight.HitValidationConfigsComponent
// 0x0048 (FullSize[0x0100] - InheritedSize[0x00B8])
class UHitValidationConfigsComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_9NXA[0x48];                                    // 0x00B8(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HitValidationConfigsComponent");
		return ptr;
	}



	void DBD_PrintInGameHitValidationConfigs();
};

// Class DeadByDaylight.HitValidatorComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UHitValidatorComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_J19E[0x1C];                                    // 0x00B8(0x001C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _maximumSquareDistance;                                    // 0x00D4(0x0004) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1KM1[0x8];                                     // 0x00D8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UHitValidationConfigsComponent> _hitValidationConfigComponent;                             // 0x00E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HitValidatorComponent");
		return ptr;
	}



	void Multicast_DrawDebugHit(const struct FHitValidationReport& report);
};

// Class DeadByDaylight.HitValidatorConfigurator
// 0x0010 (FullSize[0x00D0] - InheritedSize[0x00C0])
class UHitValidatorConfigurator : public UBaseHitValidationConfigurator
{
public:
	unsigned char                                      UnknownData_WP3Q[0x10];                                    // 0x00C0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HitValidatorConfigurator");
		return ptr;
	}



};

// Class DeadByDaylight.HookableComponent
// 0x00A0 (FullSize[0x0158] - InheritedSize[0x00B8])
class UHookableComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_QYS9[0xA0];                                    // 0x00B8(0x00A0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HookableComponent");
		return ptr;
	}



	void Multicast_SetDrainTimerPercentLeft(float percentTime);
	void Multicast_DebugSetHookDrainStage(int DrainStage);
	float GetDrainTimerPercentLeft();
	void Authority_SetDrainTimerPercentLeft(float percentTime);
};

// Class DeadByDaylight.HookedIndicatorWidget
// 0x0010 (FullSize[0x0358] - InheritedSize[0x0348])
class UHookedIndicatorWidget : public UBaseIndicatorWidget
{
public:
	float                                              HookedIndicatorDuration;                                   // 0x0348(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ZWIO[0xC];                                     // 0x034C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HookedIndicatorWidget");
		return ptr;
	}



};

// Class DeadByDaylight.HooksWithSurvivorRestrictedPlacementAreaStrategy
// 0x0098 (FullSize[0x0108] - InheritedSize[0x0070])
class UHooksWithSurvivorRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
{
public:
	struct FDBDTunableRowHandle                        RestrictedSphericalRadius;                                 // 0x0070(0x0028) (Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isRestrictionLingeringEnabled;                            // 0x0098(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_YPOK[0x7];                                     // 0x0099(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTunableRowHandle                        _restrictionLingerTime;                                    // 0x00A0(0x0028) (Edit, DisableEditOnInstance, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_4X4P[0x4];                                     // 0x00C8(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _useSphericalZoneForBasementHooks;                         // 0x00CC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BK61[0x1B];                                    // 0x00CD(0x001B) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FVector>                             RestrictedSphericalLocations;                              // 0x00E8(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_U9WS[0x10];                                    // 0x00F8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.HooksWithSurvivorRestrictedPlacementAreaStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.InboxScreen
// 0x00D0 (FullSize[0x01F0] - InheritedSize[0x0120])
class UInboxScreen : public UScreenBase
{
public:
	class UUMGInboxScreen*                             _umgScreen;                                                // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInboxMessageUIData>                 _newsMessages;                                             // 0x0128(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInboxMessageUIData>                 _rewardsMessages;                                          // 0x0138(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FInboxMessageUIData>                 _socialMessages;                                           // 0x0148(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4P4T[0x98];                                    // 0x0158(0x0098) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InboxScreen");
		return ptr;
	}



};

// Class DeadByDaylight.InboxUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UInboxUtilities : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InboxUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.InfectedInteractableComponent
// 0x00F0 (FullSize[0x01A8] - InheritedSize[0x00B8])
class UInfectedInteractableComponent : public UActorComponent
{
public:
	class UCurveFloat*                                 VomitAlphaCurve;                                           // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FName                                       VomitAlphaParameterName;                                   // 0x00C0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_M6PV[0x4];                                     // 0x00CC(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTimelineComponent*                          _vomitAlphaTimeline;                                       // 0x00D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XN1M[0xD0];                                    // 0x00D8(0x00D0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InfectedInteractableComponent");
		return ptr;
	}



	void SetInteractableMeshAlpha(float alpha);
	void OnVomitAlphaUpdate(float alpha);
	void Multicast_FadeOutVomit();
	void Multicast_FadeInVomit();
	void Multicast_DestroyComponent();
	void Multicast_DebugDisplayLifetime(float RemainingLifeTime);
	class AInteractable* GetOwningInteractable();
	void Authority_OnOwningInteractableBeginOrEndUse(bool inUse, class ADBDPlayer* interactingPlayer);
	void Authority_OnHitWithVomit();
	bool Authority_IsAMaxSicknessSurvivorInteracting();
	class ACamperPlayer* Authority_GetEquippingPlayer();
};

// Class DeadByDaylight.InGameAssetPreloaderComponent
// 0x01A8 (FullSize[0x0260] - InheritedSize[0x00B8])
class UInGameAssetPreloaderComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_PYFN[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _generalPrimaryAssetIds[0x50];                             // 0x00B8(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _generalRegularAssets[0x50];                               // 0x0120(0x0050) UNKNOWN PROPERTY: SetProperty
	TArray<class UClass*>                              _assetGathererClasses;                                     // 0x0170(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInGameAssetPreloaderGatherer*>       _assetGatherers;                                           // 0x0180(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BIE6[0xD0];                                    // 0x0190(0x00D0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InGameAssetPreloaderComponent");
		return ptr;
	}



};

// Class DeadByDaylight.InGameAssetPreloaderGatherer
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UInGameAssetPreloaderGatherer : public UObject
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InGameAssetPreloaderGatherer");
		return ptr;
	}



};

// Class DeadByDaylight.InGameLoadoutAssetGatherer
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UInGameLoadoutAssetGatherer : public UInGameAssetPreloaderGatherer
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InGameLoadoutAssetGatherer");
		return ptr;
	}



};

// Class DeadByDaylight.IniAssetLibrary
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UIniAssetLibrary : public UAssetLibrary
{
public:
	unsigned char                                      UnknownData_PQ6P[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.IniAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.InteractableTransformOptimizer
// 0x0008 (FullSize[0x00C0] - InheritedSize[0x00B8])
class UInteractableTransformOptimizer : public UActorComponent
{
public:
	bool                                               _optimizeTransformUpdate;                                  // 0x00B8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RPY2[0x7];                                     // 0x00B9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InteractableTransformOptimizer");
		return ptr;
	}



};

// Class DeadByDaylight.InteractionAnimNotify
// 0x0010 (FullSize[0x0050] - InheritedSize[0x0040])
class UInteractionAnimNotify : public UAnimNotify
{
public:
	struct FName                                       NotifyId;                                                  // 0x0040(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D7JH[0x4];                                     // 0x004C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InteractionAnimNotify");
		return ptr;
	}



};

// Class DeadByDaylight.InteractionDetectorComponent
// 0x00F8 (FullSize[0x01B0] - InheritedSize[0x00B8])
class UInteractionDetectorComponent : public UActorComponent
{
public:
	class UPrimitiveComponent*                         _detectionPrimitive;                                       // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _overlappingInteractables[0x50];                           // 0x00C0(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _overlappingPrimitiveComponents[0x50];                     // 0x0110(0x0050) UNKNOWN PROPERTY: SetProperty
	unsigned char                                      _ignoredActors[0x50];                                      // 0x0160(0x0050) UNKNOWN PROPERTY: SetProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InteractionDetectorComponent");
		return ptr;
	}



	void SetDetectionPrimitive(class UPrimitiveComponent* detectionPrimitive);
	void OnLocallyObservedChanged(class ADBDPlayer* Player);
	class UPrimitiveComponent* GetDetectionPrimitive();
	void EndOverlapCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BeginOverlapCallback(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool fromSweep, const struct FHitResult& SweepResult);
	void AddIgnoredActor(class AActor* ignored);
};

// Class DeadByDaylight.InteractionProficiency
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UInteractionProficiency : public UObject
{
public:
	TArray<struct FString>                             InteractionIds;                                            // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B8VK[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.InteractionProficiency");
		return ptr;
	}



	float GetValue(class UChargeableInteractionDefinition* chargeableInteraction, class ADBDPlayer* Player);
	DBDSharedTypes_EStatusEffectType GetType(float value);
	int GetLevel(class UChargeableInteractionDefinition* chargeableInteraction, class ADBDPlayer* Player);
	bool GetIsActive(class UChargeableInteractionDefinition* chargeableInteraction, class ADBDPlayer* Player);
};

// Class DeadByDaylight.Interactor
// 0x0070 (FullSize[0x0280] - InheritedSize[0x0210])
class UInteractor : public USceneComponent
{
public:
	struct FString                                     InteractorName;                                            // 0x0210(0x0010) (Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_12MV[0x30];                                    // 0x0220(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               IsUsable;                                                  // 0x0250(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_U3XN[0x3];                                     // 0x0251(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLock                                       _lock;                                                     // 0x0254(0x0008) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	struct FLock                                       _reservation;                                              // 0x025C(0x0008) (Transient, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_GV2B[0x4];                                     // 0x0264(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UInteractionDefinition*                      _currentInteraction;                                       // 0x0268(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class UInteractionDefinition*>              _interactionDefinitions;                                   // 0x0270(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Interactor");
		return ptr;
	}



	void SetIsUsable(bool isUsableParam);
	void Multicast_ReservationStatus(class ADBDPlayer* Player, bool Lock);
	void Multicast_LockStatus(class ADBDPlayer* Player, class UInteractionDefinition* currentInteraction, bool Lock);
	bool IsInterruptionPossible(class ADBDPlayer* interruptor, class ADBDPlayer* interruptee, class UInteractionDefinition* definition, class UInterruptionDefinition* interruption);
	bool IsInteracting();
	bool GetIsUsable();
	TArray<class UInteractionDefinition*> GetInteractionDefinitions();
	class ADBDPlayer* GetInteractingPlayerRaw();
	class AInteractable* GetInteractable();
	class UInteractionDefinition* GetCurrentInteraction();
	bool CanPerformInteraction(class ADBDPlayer* Player, class UInteractionDefinition* definition);
	void BPPostInitializeComponents();
	class ADBDPlayer* Authority_GetInteractingPlayer();
};

// Class DeadByDaylight.UMGStatusEffectIcon
// 0x0048 (FullSize[0x0658] - InheritedSize[0x0610])
class UUMGStatusEffectIcon : public UUMGLoadoutItemButton
{
public:
	struct FStatusEffectSlotData                       statusEffectData;                                          // 0x0610(0x0048) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGStatusEffectIcon");
		return ptr;
	}



	void UpdateWidget();
	void UpdatePercentageFill(float Percentage);
};

// Class DeadByDaylight.UMGStatusEffectsWidget
// 0x0090 (FullSize[0x0390] - InheritedSize[0x0300])
class UUMGStatusEffectsWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      AtlantaStatusEffectIconClass[0x30];                        // 0x0300(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UHorizontalBox*                              StatusEffectsBox;                                          // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<struct FName, class UUMGStatusEffectIcon*>    _statusEffectsMap;                                         // 0x0338(0x0050) (BlueprintVisible, ExportObject, BlueprintReadOnly, Transient, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B2IL[0x8];                                     // 0x0388(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGStatusEffectsWidget");
		return ptr;
	}



	void RemoveExistingStatusEffect(const struct FString& statusEffectId);
};

// Class DeadByDaylight.UMGStoreAuricCellButton
// 0x00A8 (FullSize[0x04D8] - InheritedSize[0x0430])
class UUMGStoreAuricCellButton : public UUMGBaseButtonWidget
{
public:
	unsigned char                                      UnknownData_PXT1[0x10];                                    // 0x0430(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FCurrencyPurchaseData                       CurrencyPurchaseData;                                      // 0x0440(0x0068) (BlueprintVisible, BlueprintReadOnly, Transient, NativeAccessSpecifierPublic)
	class UTextBlock*                                  AuricCellTitleText;                                        // 0x04A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                                    Timer;                                                     // 0x04B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8ACJ[0x20];                                    // 0x04B8(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGStoreAuricCellButton");
		return ptr;
	}



	void UpdateWidget(int Multiplier, const struct FDateTime& endDate);
	void UpdateFirstPurchaseEndInUI(const struct FString& endInString);
	void ReportInvalidPercentage(float Percentage);
	bool HasBonusExpired(const struct FDateTime& endDate);
};

// Class DeadByDaylight.UMGStoreEventItemsPackButton
// 0x00B8 (FullSize[0x03B8] - InheritedSize[0x0300])
class UUMGStoreEventItemsPackButton : public UMobileBaseUserWidget
{
public:
	class UImage*                                      ImageIcon;                                                 // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  TitleText;                                                 // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  CurrencyAmountText;                                        // 0x0310(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  CurrencyNameText;                                          // 0x0318(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUniformGridPanel*                           UniformGridPanel;                                          // 0x0320(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGBaseButtonWidget*                        BuyButton;                                                 // 0x0328(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGAtlStorePriceWidget*                     StorePriceWidget;                                          // 0x0330(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGAtlEndDateTimerWidget*                   EndDateTimerWidget;                                        // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCanvasPanel*                                SelectedImageBox;                                          // 0x0340(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      EventItemWidgetClassPtr[0x30];                             // 0x0348(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	int                                                nbColumns;                                                 // 0x0378(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_TM6X[0x3C];                                    // 0x037C(0x003C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGStoreEventItemsPackButton");
		return ptr;
	}



	void ShowSelectedCanvas();
	void HideSelectedCanvas();
	void HandleEndDateTimerReached();
	void HandleButtonClicked();
};

// Class DeadByDaylight.UMGStorefrontCustomizationWidget
// 0x0010 (FullSize[0x0478] - InheritedSize[0x0468])
class UUMGStorefrontCustomizationWidget : public UUMGPromoPackItemWidget
{
public:
	class UTextBlock*                                  CustomizationQuantityText;                                 // 0x0468(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CustomizationQuantityPanel;                                // 0x0470(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGStorefrontCustomizationWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGStreamVideoWidget
// 0x0048 (FullSize[0x0348] - InheritedSize[0x0300])
class UUMGStreamVideoWidget : public UMobileBaseUserWidget
{
public:
	class UImage*                                      VideoImage;                                                // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     TapButton;                                                 // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                        SkipButton;                                                // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_ASQ1[0x10];                                    // 0x0318(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	float                                              _timerShowSkipButton;                                      // 0x0328(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_V3TE[0x1C];                                    // 0x032C(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGStreamVideoWidget");
		return ptr;
	}



	void OnTapButtonClicked();
	void OnSkipButtonClicked();
};

// Class DeadByDaylight.UMGSubscriptionPackButtonWidget
// 0x0158 (FullSize[0x0588] - InheritedSize[0x0430])
class UUMGSubscriptionPackButtonWidget : public UUMGBaseButtonWidget
{
public:
	class USubscriptionRewardDataAsset*                WidgetPerRewardType;                                       // 0x0430(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ButtonPressedVFX;                                          // 0x0438(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                PricePanel;                                                // 0x0440(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      TitleIcon;                                                 // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Title;                                                     // 0x0450(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Price;                                                     // 0x0458(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                RenewalDatePanel;                                          // 0x0460(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  RenewalDateText;                                           // 0x0468(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUniformGridPanel*                           PurchaseRewardsGrid;                                       // 0x0470(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUniformGridPanel*                           DailyRewardsGrid;                                          // 0x0478(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PortraitBorder;                                            // 0x0480(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UButton*                                     InfoButton;                                                // 0x0488(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ActiveBackgroundImage;                                     // 0x0490(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      NonActiveBackgroundImage;                                  // 0x0498(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                ActiveTextColor;                                           // 0x04A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                NonActiveTextColor;                                        // 0x04B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                TextColor;                                                 // 0x04C0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                ActiveSmokeBackgroundTint;                                 // 0x04D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                NonActiveSmokeBackgroundTint;                              // 0x04E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      PurchaseRewardsSmokeBackground;                            // 0x04F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      DailyRewardsSmokeBackground;                               // 0x04F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                ActiveTitleBackgroundTint;                                 // 0x0500(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FLinearColor                                NonActiveTitleBackgroundTint;                              // 0x0510(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      TitleBackground;                                           // 0x0520(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ActiveFrame;                                               // 0x0528(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                NonActiveFrame;                                            // 0x0530(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2IQZ[0x50];                                    // 0x0538(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSubscriptionPackButtonWidget");
		return ptr;
	}



	void OnInfoButtonClicked();
};

// Class DeadByDaylight.UMGSubscriptionsPageScrollWidget
// 0x0078 (FullSize[0x04B0] - InheritedSize[0x0438])
class UUMGSubscriptionsPageScrollWidget : public UUMGGridPageScrollWidget
{
public:
	unsigned char                                      SubscriptionPackButtonClass[0x30];                         // 0x0438(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FVector2D                                   ItemPadding;                                               // 0x0468(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LZ0T[0x40];                                    // 0x0470(0x0040) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSubscriptionsPageScrollWidget");
		return ptr;
	}



	void HandleSubscriptionInfoButtonClickedEvent(const struct FString& subscriptionDetails);
	void HandleBuySubscriptionPackButtonClickedEvent(const struct FName& subscriptionPackID);
};

// Class DeadByDaylight.UmgSurvivorHud
// 0x0300 (FullSize[0x0828] - InheritedSize[0x0528])
class UUmgSurvivorHud : public UUmgPlayableHud
{
public:
	unsigned char                                      UnknownData_9M32[0x8];                                     // 0x0528(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UActionButton*                               CrouchButton;                                              // 0x0530(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CrouchButtonContainer;                                     // 0x0538(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWiggleWidget*                               StruggleWidget;                                            // 0x0540(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                StruggleWidgetContainer;                                   // 0x0548(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWiggleWidget*                               WiggleWidget;                                              // 0x0550(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                WiggleWidgetContainer;                                     // 0x0558(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class ACamperPlayer*                               survivor;                                                  // 0x0560(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActionButton*                               CancelButton;                                              // 0x0568(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CenterInteractionButtonContainer;                          // 0x0570(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                LookBackButtonContainer;                                   // 0x0578(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAtlantaHudLookBackJoystick*                 LookBackJoystick;                                          // 0x0580(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UActionButton*                               SkillCheckButton;                                          // 0x0588(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                SkillCheckButtonCanvas;                                    // 0x0590(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                InsaneSkillCheckButtonCanvas;                              // 0x0598(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_A9UW[0x8];                                     // 0x05A0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 _unpressedLookBackJoystickThumbImage;                      // 0x05A8(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 _pressedLookBackJoystickThumbImage;                        // 0x0638(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ROIY[0x20];                                    // 0x06C8(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateBrush                                 _unpressedLookBackJoystickBackgroundImage;                 // 0x06E8(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	struct FSlateBrush                                 _pressedLookBackJoystickBackgroundImage;                   // 0x0778(0x0090) (Edit, DisableEditOnInstance, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RN62[0x20];                                    // 0x0808(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UmgSurvivorHud");
		return ptr;
	}



	void UpdateCancelButton();
	bool ShouldUseContextualItemButton();
	void SetSkillCheckButtonPosition(bool IsInsane);
	void SetNonRestrictedControlsVisibility(bool visible);
	void SetLookBackJoystickPosition(struct FVector2D* Position);
	void SetLookBackJoystickImage(bool Pressed);
	void RespondToVirtualJoystickPressChanged(int controlIndex, bool Pressed);
	void OnCancelButtonClicked();
	void InitializeLookBackJoystickPosition();
	bool HasSecondaryActionAvailable();
	struct FVector2D GetLookBackJoystickNormalizedOffset();
	bool GetLookBackJoystickIsPressed();
	struct FText GetCenterItemText();
	class UTexture2D* GetCenterItemIcon();
	void CenterItemClicked(bool fromCancelRequest);
};

// Class DeadByDaylight.UMGSwitcherScreen
// 0x00B0 (FullSize[0x03B0] - InheritedSize[0x0300])
class UUMGSwitcherScreen : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnLoadoutWidgetSlotClicked;                                // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLoadoutWidgetInventoryItemSelected;                      // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnLoadoutWidgetInventoryItemUnselected;                    // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z193[0x60];                                    // 0x0330(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetSwitcher*                             ContainerWidgetSwitcher;                                   // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBloodStoreWidget*                        BloodStoreWidget;                                          // 0x0398(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGLoadoutWidget*                           LoadoutWidget;                                             // 0x03A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterSelectionWidget*                CharacterSelectionWidget;                                  // 0x03A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGSwitcherScreen");
		return ptr;
	}



	void BroadcastSlotClickedEvent(int LoadoutSlot);
	void BroadcastItemUnSelectedEvent(int itemIndex);
	void BroadcastItemSelectedEvent(int itemIndex);
	void BroadcastCharacterSelectedEvent(int characterIndex);
	void BroadcastCharacterRoleButtonClickedEvent();
	void BroadcastCharacterInfoButtonClickedEvent();
	void BroadcastBloodStoreRegenerate(int characterId);
	void BroadcastBloodNodeSelected(int characterId, int nodeID, int nodeDepth);
	void BroadcastBloodNodePurchase(int characterId);
};

// Class DeadByDaylight.UMGTallyBloodpointsScoreWidget
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UUMGTallyBloodpointsScoreWidget : public UMobileBaseUserWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyBloodpointsScoreWidget");
		return ptr;
	}



	void UpdateWidgetByScoreData(const struct FText& Title, class UTexture2D* Asset, int ScoreValue);
};

// Class DeadByDaylight.UMGTallyListElementWidget
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGTallyListElementWidget : public UMobileBaseUserWidget
{
public:
	int                                                ElementIndex;                                              // 0x0300(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FVector2D                                   WidgetSize;                                                // 0x0304(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_SFTL[0x4];                                     // 0x030C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyListElementWidget");
		return ptr;
	}



	void OnPlayInAnimation();
	void OnPageVisibilityChanged(bool IsVisible, bool wasInAnimationPlayed);
	void OnInAnimationFinished();
};

// Class DeadByDaylight.UMGTallyBloodpointsWidget
// 0x01A0 (FullSize[0x04B0] - InheritedSize[0x0310])
class UUMGTallyBloodpointsWidget : public UUMGTallyListElementWidget
{
public:
	UMG_ESlateVisibility                               _itemBoxVisibility;                                        // 0x0310(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RSWL[0x7];                                     // 0x0311(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _labelTotalScore;                                          // 0x0318(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _labelItemTitle;                                           // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _labelItemAddOnTitle;                                      // 0x0348(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FLinearColor                                _labelItemTitleColor;                                      // 0x0360(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              BoxScoreCategory;                                          // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<DBDSharedTypes_EDBDScoreCategory, struct FScoreCategoryUIExtraData> _scoreCategoryExtraDataMap;                                // 0x0378(0x0050) (Edit, Transient, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EYKI[0xE8];                                    // 0x03C8(0x00E8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyBloodpointsWidget");
		return ptr;
	}



	void UpdateTallyTotalBloodpoints(int totalValue);
	void UpdateTallyRewardWidget(const struct FString& rewardName, int existReward, int addReward);
	void UpdateTallyItemWidget(const struct FTallyItemChangedData& Data);
	void ShowTallyItemWidget(bool isShow);
};

// Class DeadByDaylight.UMGTallyBonusVisualWidget
// 0x0058 (FullSize[0x0358] - InheritedSize[0x0300])
class UUMGTallyBonusVisualWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      MultiplierTextureMap[0x50];                                // 0x0300(0x0050) UNKNOWN PROPERTY: MapProperty
	class UImage*                                      MultiplierImage;                                           // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyBonusVisualWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGTallyCharacterProgressionBar
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGTallyCharacterProgressionBar : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_NZWY[0x20];                                    // 0x0300(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UProgressBar*                                ProgressBar;                                               // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyCharacterProgressionBar");
		return ptr;
	}



};

// Class DeadByDaylight.UMGTallyCharacterProgressionWidget
// 0x0088 (FullSize[0x0398] - InheritedSize[0x0310])
class UUMGTallyCharacterProgressionWidget : public UUMGTallyListElementWidget
{
public:
	class UUMGTallyCharacterProgressionBar*            CharacterProgressionBar;                                   // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextCharacterCurrentExperience;                            // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextExperienceForNextLevel;                                // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextExperienceEarned;                                      // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextCurrentLevel;                                          // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CharacterPicture;                                          // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      prestigeIcon;                                              // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TextCharacterName;                                         // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                ExperiencePerSecond;                                       // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O82B[0x44];                                    // 0x0354(0x0044) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyCharacterProgressionWidget");
		return ptr;
	}



	void StartSequence();
	void StartNewLevel();
	void SetWidgetToFinalState();
	void OnFullBarOut();
	void OnFullBarIn();
};

// Class DeadByDaylight.UMGTallyEmblemMarker
// 0x0058 (FullSize[0x0358] - InheritedSize[0x0300])
class UUMGTallyEmblemMarker : public UMobileBaseUserWidget
{
public:
	class UImage*                                      QualityImage;                                              // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<DeadByDaylight_EEmblemQuality, struct FEmblemQualityImages> _qualityImages;                                            // 0x0308(0x0050) (Edit, DisableEditOnInstance, NoClear, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyEmblemMarker");
		return ptr;
	}



};

// Class DeadByDaylight.UMGTallyEmblemProgressBar
// 0x0098 (FullSize[0x0398] - InheritedSize[0x0300])
class UUMGTallyEmblemProgressBar : public UMobileBaseUserWidget
{
public:
	class UProgressBar*                                ProgressBar;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                QualityContainer;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      EmblemQualityClass[0x30];                                  // 0x0310(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FVector2D                                   _emblemQualityAlignment;                                   // 0x0340(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TMap<DeadByDaylight_EEmblemQuality, struct FSlateBrush> _qualityFillImages;                                        // 0x0348(0x0050) (Edit, DisableEditOnInstance, NoClear, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyEmblemProgressBar");
		return ptr;
	}



};

// Class DeadByDaylight.UMGTallyEmblemProgressionWidget
// 0x0070 (FullSize[0x0370] - InheritedSize[0x0300])
class UUMGTallyEmblemProgressionWidget : public UMobileBaseUserWidget
{
public:
	class UImage*                                      PositiveIcon;                                              // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      NegativeIcon;                                              // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  PercentText;                                               // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DescriptionText;                                           // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                                 WarningPercentColor;                                       // 0x0320(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 WarningDescriptionColor;                                   // 0x0348(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyEmblemProgressionWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGTallyEmblemsWidget
// 0x0048 (FullSize[0x0358] - InheritedSize[0x0310])
class UUMGTallyEmblemsWidget : public UUMGTallyListElementWidget
{
public:
	unsigned char                                      EmblemWidgetClass[0x30];                                   // 0x0310(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UHorizontalBox*                              EmblemsContainer;                                          // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGTallyEmblemWidget*>               _emblems;                                                  // 0x0348(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyEmblemsWidget");
		return ptr;
	}



	TArray<class UUMGTallyEmblemWidget*> GetEmblems();
};

// Class DeadByDaylight.UMGTallyEmblemWidget
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UUMGTallyEmblemWidget : public UMobileBaseUserWidget
{
public:
	TMap<DeadByDaylight_EEmblemQuality, class UTexture2D*> _emblemBackgrounds;                                        // 0x0300(0x0050) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	class UImage*                                      BackgroundImage;                                           // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      IconImage;                                                 // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyEmblemWidget");
		return ptr;
	}



	void PlayFadeInAnimation();
};

// Class DeadByDaylight.UMGTallyListWidget
// 0x00F0 (FullSize[0x0520] - InheritedSize[0x0430])
class UUMGTallyListWidget : public UUMGPageScrollWidget
{
public:
	struct FText                                       TopLeftText;                                               // 0x0430(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       TopRightText;                                              // 0x0448(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ListBGPanel;                                               // 0x0460(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DBDSharedTypes_EPlayerRole                         _playerRole;                                               // 0x0468(0x0001) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2EHU[0x7];                                     // 0x0469(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _inAnimationPlayedPages[0x50];                             // 0x0469(0x0050) UNKNOWN PROPERTY: SetProperty
	TMap<DeadByDaylight_ETallyListPageID, class UUMGTallyListElementWidget*> _listItemWidgets;                                          // 0x04C0(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2J19[0x10];                                    // 0x0510(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyListWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGTallyPip
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGTallyPip : public UMobileBaseUserWidget
{
public:
	class UImage*                                      Filling;                                                   // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OUYH[0x8];                                     // 0x0308(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyPip");
		return ptr;
	}



	void HideFilling();
};

// Class DeadByDaylight.UMGTallyPipsContainer
// 0x0038 (FullSize[0x0338] - InheritedSize[0x0300])
class UUMGTallyPipsContainer : public UMobileBaseUserWidget
{
public:
	class UHorizontalBox*                              PipsContainer;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _pipsClasses[0x10];                                        // 0x0308(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FMargin                                     _pipsPadding;                                              // 0x0318(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	TArray<class UUMGTallyPip*>                        Pips;                                                      // 0x0328(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyPipsContainer");
		return ptr;
	}



	void SetData(int Rank, int PipsRequiredForNextRank, int filledPips);
};

// Class DeadByDaylight.UMGTallyPlayerLevelWidget
// 0x0048 (FullSize[0x0358] - InheritedSize[0x0310])
class UUMGTallyPlayerLevelWidget : public UUMGTallyListElementWidget
{
public:
	unsigned char                                      UnknownData_K29Q[0x48];                                    // 0x0310(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyPlayerLevelWidget");
		return ptr;
	}



	void OnSetInitialPlayerXp(int initialXp, const struct FPlayerLevelData& initialLevelData);
	void OnSetFinalPlayerXp(int finalXp, TArray<struct FPlayerLevelData> reachedLevels, TArray<struct FXpBonusData> xpBonuses, TArray<struct FRewardItemData> rewardsEarned);
	TArray<struct FXpBonusData> GetXpBonuses();
	TArray<struct FRewardItemData> GetRewardsEarned();
	TArray<struct FPlayerLevelData> GetReachedLevels();
	int GetInitialXp();
	int GetFinalXp();
};

// Class DeadByDaylight.UMGTallyProgressBar
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGTallyProgressBar : public UMobileBaseUserWidget
{
public:
	class UProgressBar*                                ProgressBar;                                               // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                PipsContainer;                                             // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _pipsClasses[0x10];                                        // 0x0310(0x0010) UNKNOWN PROPERTY: ArrayProperty
	struct FVector2D                                   _pipsAlignment;                                            // 0x0320(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyProgressBar");
		return ptr;
	}



	void SetPercent(float value);
	int GetPipsCount();
};

// Class DeadByDaylight.UMGTallyRankBanner
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGTallyRankBanner : public UMobileBaseUserWidget
{
public:
	class UUMGTallyPipsContainer*                      PipsContainerWidget;                                       // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRankBanner*                              RankBanner;                                                // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      SmokeBackground;                                           // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyRankBanner");
		return ptr;
	}



	void SetAsLocked(bool locked);
};

// Class DeadByDaylight.UMGTallyRankFrame
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGTallyRankFrame : public UMobileBaseUserWidget
{
public:
	class UImage*                                      Frame;                                                     // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  label;                                                     // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyRankFrame");
		return ptr;
	}



	void SetData(int Rank, DBDSharedTypes_EPlayerRole PlayerRole);
};

// Class DeadByDaylight.UMGTallyRankWidget
// 0x00A0 (FullSize[0x03B0] - InheritedSize[0x0310])
class UUMGTallyRankWidget : public UUMGTallyListElementWidget
{
public:
	struct FMargin                                     _emblemsPadding;                                           // 0x0310(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      EmblemWidgetClass[0x30];                                   // 0x0320(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UHorizontalBox*                              EmblemsContainer;                                          // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyProgressBar*                        ProgressBar;                                               // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyRankBanner*                         RankBanner;                                                // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  RankProgressLabel;                                         // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGTallyEmblemWidget*>               _emblems;                                                  // 0x0370(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FTallyScorePipsData                         _scoreData;                                                // 0x0380(0x0030) (Transient, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyRankWidget");
		return ptr;
	}



	struct FTallyScorePipsData GetScoreData();
	TArray<class UUMGTallyEmblemWidget*> GetEmblems();
};

// Class DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget
// 0x02A8 (FullSize[0x0600] - InheritedSize[0x0358])
class UUMGTallyScoreboardPlayerInfoWidget : public UUMGLoadoutBaseWidget
{
public:
	struct FScriptMulticastDelegate                    OnTallyScoreboardAddFriendEvent;                           // 0x0358(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTallyScoreboardReportEvent;                              // 0x0368(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UImage*                                      ImageHorizontalSeparation;                                 // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTallyPlayerResultData                      PlayerResultData;                                          // 0x0380(0x0278) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	bool                                               LoadoutIsBlocked;                                          // 0x05F8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_18R9[0x7];                                     // 0x05F9(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyScoreboardPlayerInfoWidget");
		return ptr;
	}



	void UpdateWidget();
	void UpdateReported();
	void UpdateLoadout();
	void SetPlayerScoreData(const struct FTallyPlayerResultData& resultData);
	void SetPlayerReported(bool isReport);
	void SetPlayerLoadoutBlocked(bool isBlock);
	void HandleReportEvent(const struct FName& buttonID);
	void HandleAddFriendEvent(const struct FName& buttonID);
};

// Class DeadByDaylight.UMGTallyScoreboardWidget
// 0x00A0 (FullSize[0x03B0] - InheritedSize[0x0310])
class UUMGTallyScoreboardWidget : public UUMGTallyListElementWidget
{
public:
	struct FScriptMulticastDelegate                    OnTallyScoreboardAddFriendEvent;                           // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTallyScoreboardReportEvent;                              // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FText                                       LabelTextRank;                                             // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       LabelTextScore;                                            // 0x0348(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       LabelTextStatus;                                           // 0x0360(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	class UUMGTallyScoreboardPlayerInfoWidget*         KillerWidget;                                              // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyScoreboardPlayerInfoWidget*         FirstSurvivorWidget;                                       // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyScoreboardPlayerInfoWidget*         SecondSurvivorWidget;                                      // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyScoreboardPlayerInfoWidget*         ThirdSurvivorWidget;                                       // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyScoreboardPlayerInfoWidget*         FourthSurvivorWidget;                                      // 0x0398(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGTallyScoreboardPlayerInfoWidget*> SurvivorWidgets;                                           // 0x03A0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTallyScoreboardWidget");
		return ptr;
	}



	void SetFadeOut();
	void HandleReportEvent(const struct FString& playerID);
	void HandleAddFriendEvent(const struct FString& playerID);
};

// Class DeadByDaylight.UMGTeachablePerkButton
// 0x0130 (FullSize[0x0430] - InheritedSize[0x0300])
class UUMGTeachablePerkButton : public UMobileBaseUserWidget
{
public:
	class UPerkActionButton*                           TeachablePerkButton;                                       // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UImage*                                      LockedStatusIcon;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FTeachableData                              _teachableData;                                            // 0x0310(0x0110) (BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    _onTeachablePerkTooltipLongPressEvent;                     // 0x0420(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTeachablePerkButton");
		return ptr;
	}



	void HandleTooltipLongPressedEvent(const struct FInventorySlotData& ItemData, const struct FVector2D& Position);
};

// Class DeadByDaylight.UMGToastNotificationScreen
// 0x0168 (FullSize[0x0468] - InheritedSize[0x0300])
class UUMGToastNotificationScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      NotificationToast[0x30];                                   // 0x0300(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      InvitationPartyToast[0x30];                                // 0x0330(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UVerticalBox*                                ToastsContainer;                                           // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_EE7S[0x30];                                    // 0x0368(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<uint32_t, class UUMGBaseToastWidget*>         _toastsDisplayedOnScreen;                                  // 0x0398(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0UEI[0x80];                                    // 0x03E8(0x0080) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGToastNotificationScreen");
		return ptr;
	}



	void HandleOnPromptSelected(int notificationId);
	void HandleOnNotificationDisplayEnd(int notificationId);
	void HandleOnButtonSelected(int buttonID, int notificationId);
};

// Class DeadByDaylight.UMGTooltipContentPlayerLevelWidget
// 0x0030 (FullSize[0x0330] - InheritedSize[0x0300])
class UUMGTooltipContentPlayerLevelWidget : public UMobileBaseUserWidget
{
public:
	struct FText                                       PlayerLevelText;                                           // 0x0300(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UUMGLevelBannerWidget*                       LevelBanner;                                               // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              LevelExperienceRichText;                                   // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  ExperienceToNextLevelText;                                 // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGTooltipContentPlayerLevelWidget");
		return ptr;
	}



	void SetInfo(int PlayerLevel, int PlayerPrestige, int CurrentExperience, int NextLevelExperience);
};

// Class DeadByDaylight.UMGUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UUMGUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGUtilities");
		return ptr;
	}



};

// Class DeadByDaylight.UnlockPersonalPerksPopupScreen
// 0x0000 (FullSize[0x0140] - InheritedSize[0x0140])
class UUnlockPersonalPerksPopupScreen : public UGenericPopupScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UnlockPersonalPerksPopupScreen");
		return ptr;
	}



};

// Class DeadByDaylight.VaultableComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UVaultableComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnVault;                                                   // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FGameplayTag                                _vaultableScoreEvent;                                      // 0x00C8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AB5Z[0x14];                                    // 0x00D4(0x0014) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.VaultableComponent");
		return ptr;
	}



	void SignalVault(class ADBDPlayer* survivor, float InteractionTime);
	void OnChaseEnded(class ADBDPlayer* survivor, float ChaseTimer);
};

// Class DeadByDaylight.VersioningUtilities
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UVersioningUtilities : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.VersioningUtilities");
		return ptr;
	}



	bool STATIC_IsVisualRework();
};

// Class DeadByDaylight.VideoNativePlayer
// 0x0030 (FullSize[0x0260] - InheritedSize[0x0230])
class AVideoNativePlayer : public AActor
{
public:
	unsigned char                                      UnknownData_G8YE[0x30];                                    // 0x0230(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.VideoNativePlayer");
		return ptr;
	}



};

// Class DeadByDaylight.VideoPlayer
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UVideoPlayer : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.VideoPlayer");
		return ptr;
	}



};

// Class DeadByDaylight.VideoThumbnailPlayer
// 0x0098 (FullSize[0x02C8] - InheritedSize[0x0230])
class AVideoThumbnailPlayer : public AActor
{
public:
	unsigned char                                      UnknownData_7XHY[0x20];                                    // 0x0230(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMediaPlayer*                                MediaPlayer;                                               // 0x0250(0x0008) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMediaSoundComponent*                        SoundComponent;                                            // 0x0258(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUserWidget*                                 VideoPlayerWidget;                                         // 0x0260(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UAudioComponent*                             _audioComponent;                                           // 0x0268(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_L0WZ[0x18];                                    // 0x0270(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _source[0x30];                                             // 0x0270(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnknownData_G2OK[0x10];                                    // 0x02B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.VideoThumbnailPlayer");
		return ptr;
	}



	void OnVideoAssetLoaded();
	void OnMediaOpened(const struct FString& OpenedUrl);
	void OnMediaClosed();
	void OnEndReached();
};

// Class DeadByDaylight.VisibleHatchRestrictedPlacementAreaStrategy
// 0x0008 (FullSize[0x0078] - InheritedSize[0x0070])
class UVisibleHatchRestrictedPlacementAreaStrategy : public URestrictedPlacementAreaStrategy
{
public:
	unsigned char                                      UnknownData_FJ20[0x8];                                     // 0x0070(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.VisibleHatchRestrictedPlacementAreaStrategy");
		return ptr;
	}



};

// Class DeadByDaylight.KillerOpenGate
// 0x0058 (FullSize[0x0730] - InheritedSize[0x06D8])
class UKillerOpenGate : public UChargeableInteractionDefinition
{
public:
	struct FAnimationMontageDescriptor                 _openGateMontage;                                          // 0x06D8(0x0020) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_1LVN[0x38];                                    // 0x06F8(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerOpenGate");
		return ptr;
	}



	void UpdateSwitch();
};

// Class DeadByDaylight.KillerProjectileDodgeComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UKillerProjectileDodgeComponent : public UActorComponent
{
public:
	class AKillerProjectile*                           _killerProjectile;                                         // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<class ACamperPlayer*>                       _proximitySurvivors;                                       // 0x00C0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_KI3Z[0x20];                                    // 0x00D0(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerProjectileDodgeComponent");
		return ptr;
	}



	void OnKillerProjectileLaunched();
	void OnKillerProjectileFinishedWithoutCollision();
	void OnKillerProjectileFinished(class AActor* survivorHit);
};

// Class DeadByDaylight.KillerProjectileLauncher
// 0x0000 (FullSize[0x0180] - InheritedSize[0x0180])
class UKillerProjectileLauncher : public UBaseProjectileLauncher
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerProjectileLauncher");
		return ptr;
	}



	class ASlasherPlayer* GetOwningKiller();
};

// Class DeadByDaylight.KillerRedStainUpdateStrategy
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UKillerRedStainUpdateStrategy : public UActorComponent
{
public:
	class UCurveFloat*                                 _stealthRatioToRedStainIntensityCurve;                     // 0x00B8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FGameplayTagContainer                       _hideRedStainStateTags;                                    // 0x00C0(0x0020) (Edit, DisableEditOnInstance, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_LBUN[0x10];                                    // 0x00E0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerRedStainUpdateStrategy");
		return ptr;
	}



	void OnHeadHiddenChanged(bool IsHidden);
};

// Class DeadByDaylight.KillerSoundCuesComponent
// 0x0010 (FullSize[0x00C8] - InheritedSize[0x00B8])
class UKillerSoundCuesComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_QMVG[0x10];                                    // 0x00B8(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.KillerSoundCuesComponent");
		return ptr;
	}



	void StopTrackingActor(class AActor* actorToStopTracking);
	void StartTrackingActorWithLifetime(class AActor* actorToStartTracking, const struct FName& distanceDataID, float trackerLifetime);
	void StartTrackingActor(class AActor* actorToStartTracking, const struct FName& distanceDataID);
};

// Class DeadByDaylight.TileSpawnPointSelector
// 0x0020 (FullSize[0x0230] - InheritedSize[0x0210])
class UTileSpawnPointSelector : public USceneComponent
{
public:
	TArray<struct FSelectableTileSpawnPoint>           _tileSpawnPoints;                                          // 0x0210(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_Z7R7[0x10];                                    // 0x0220(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TileSpawnPointSelector");
		return ptr;
	}



};

// Class DeadByDaylight.TileVisitedAnalyticsComponent
// 0x0050 (FullSize[0x0108] - InheritedSize[0x00B8])
class UTileVisitedAnalyticsComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_MGC3[0x50];                                    // 0x00B8(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TileVisitedAnalyticsComponent");
		return ptr;
	}



};

// Class DeadByDaylight.TimerGate
// 0x0010 (FullSize[0x0258] - InheritedSize[0x0248])
class ATimerGate : public AGate
{
public:
	float                                              _currentTime;                                              // 0x0248(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GOYG[0xC];                                     // 0x024C(0x000C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TimerGate");
		return ptr;
	}



	void Update(float DeltaTime);
	void SetValues(float TimerDuration, float RushGain, float RushBlockDuration);
	void Rushed(bool success);
	void Reset();
	void RemoveTime(float Time);
	void AddTime(float Time);
};

// Class DeadByDaylight.TimerGateDecrease
// 0x0008 (FullSize[0x0238] - InheritedSize[0x0230])
class ATimerGateDecrease : public AActor
{
public:
	class ATimerGate*                                  TimerGate;                                                 // 0x0230(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TimerGateDecrease");
		return ptr;
	}



	void Update(float DeltaTime);
};

// Class DeadByDaylight.DBDTimeTravelManager
// 0x0070 (FullSize[0x00A0] - InheritedSize[0x0030])
class UDBDTimeTravelManager : public UObject
{
public:
	unsigned char                                      UnknownData_3A8D[0x70];                                    // 0x0030(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.DBDTimeTravelManager");
		return ptr;
	}



};

// Class DeadByDaylight.ToastNotificationScreen
// 0x0048 (FullSize[0x0168] - InheritedSize[0x0120])
class UToastNotificationScreen : public UScreenBase
{
public:
	unsigned char                                      UnknownData_J3UQ[0x48];                                    // 0x0120(0x0048) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ToastNotificationScreen");
		return ptr;
	}



	void OnPromptSelected(int notificationId);
	void OnNotificationDisplayEnd(int notificationId);
	void OnButtonSelected(int buttonID, int notificationId);
};

// Class DeadByDaylight.ToastNotificationScreenScaleform
// 0x0000 (FullSize[0x0168] - InheritedSize[0x0168])
class UToastNotificationScreenScaleform : public UToastNotificationScreen
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ToastNotificationScreenScaleform");
		return ptr;
	}



};

// Class DeadByDaylight.ToastNotificationScreenUMG
// 0x0008 (FullSize[0x0170] - InheritedSize[0x0168])
class UToastNotificationScreenUMG : public UToastNotificationScreen
{
public:
	class UUMGToastNotificationScreen*                 _toastNotificationScreen;                                  // 0x0168(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ToastNotificationScreenUMG");
		return ptr;
	}



};

// Class DeadByDaylight.ToolBoxInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UToolBoxInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ToolBoxInterface");
		return ptr;
	}



	class UChargerComponent* GetChargerComponent();
};

// Class DeadByDaylight.TooltipScreenUMG
// 0x0020 (FullSize[0x0140] - InheritedSize[0x0120])
class UTooltipScreenUMG : public UScreenBase
{
public:
	class UBaseTooltipWidget*                          _tooltipWidget;                                            // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8SXC[0x18];                                    // 0x0128(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TooltipScreenUMG");
		return ptr;
	}



	void OnCloseTriggered();
};

// Class DeadByDaylight.TormentAttackDamageCooldownInterface
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTormentAttackDamageCooldownInterface : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TormentAttackDamageCooldownInterface");
		return ptr;
	}



};

// Class DeadByDaylight.Totem
// 0x0128 (FullSize[0x0450] - InheritedSize[0x0328])
class ATotem : public AInteractable
{
public:
	unsigned char                                      UnknownData_TURN[0x20];                                    // 0x0328(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FLinearColor                                _boonAuraRevealColor;                                      // 0x0348(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UTotemBoundPerk*>                     _boundPerks;                                               // 0x0358(0x0010) (ExportObject, Net, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	DeadByDaylight_ETotemState                         _totemState;                                               // 0x0368(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_QYI8[0x7];                                     // 0x0369(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FDBDTunableRowHandle                        _baseBoonTotemBlessingRange;                               // 0x0370(0x0028) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FDBDTunableRowHandle                        _baseBoonTotemAuraRevealRange;                             // 0x0398(0x0028) (Edit, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XYFN[0x10];                                    // 0x03C0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UAIPerceptionStimuliSourceComponent*         _perceptionStimuliComponent;                               // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlockableComponent*                         _totemBlockableComponent;                                  // 0x03D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_B1VI[0x10];                                    // 0x03E0(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULocalPlayerTrackerComponent*                _localPlayerTracker;                                       // 0x03F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UActivatorComponent*                         _activatorComponent;                                       // 0x03F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UGameplayTagContainerComponent*              _objectState;                                              // 0x0400(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class USceneComponent*                             _interactionsAttachPoint;                                  // 0x0408(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTotemOutlineUpdateStrategy*                 _totemOutlineUpdateStrategy;                               // 0x0410(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VW5L[0x30];                                    // 0x0418(0x0030) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _canBeBoundToBoonPerk;                                     // 0x0448(0x0001) (Edit, BlueprintVisible, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_ZETJ[0x7];                                     // 0x0449(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Totem");
		return ptr;
	}



	void OnUnblockTotemCosmetic(class ADBDPlayer* Player);
	void OnTotemStateChanged(DeadByDaylight_ETotemState oldTotemState, DeadByDaylight_ETotemState newTotemState);
	void OnTotemBlockChanged();
	void OnRep_TotemState(DeadByDaylight_ETotemState oldTotemState);
	void OnLocallyObservedChanged();
	void OnCleanseTotem(class ATotem* Totem, DeadByDaylight_ETotemState oldTotemState);
	void OnBlockTotemCosmetic(class ADBDPlayer* Player);
	bool IsTotemBlockedForPlayer(class ADBDPlayer* Player);
	bool IsBoundToPerk();
	DeadByDaylight_ETotemState GetTotemState();
	class UInteractor* GetMainInteractor();
	class UChargeableInteractionDefinition* GetCleanseTotemInteraction();
	float GetBoonTotemBlessingRange();
	float GetBoonTotemAuraRevealRange();
	struct FLinearColor GetBoonAuraRevealColor();
	class UChargeableInteractionDefinition* GetBlessTotemInteraction();
};

// Class DeadByDaylight.TotemOutlineUpdateStrategy
// 0x0028 (FullSize[0x0158] - InheritedSize[0x0130])
class UTotemOutlineUpdateStrategy : public USourceBasedOutlineUpdateStrategy
{
public:
	struct FLinearColor                                _revealedColorToSurvivor;                                  // 0x0130(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FLinearColor                                _boonTotemRevealedColorToSurvivor;                         // 0x0140(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UCurveLinearColor*                           _revealedColorToKiller;                                    // 0x0150(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TotemOutlineUpdateStrategy");
		return ptr;
	}



	struct FLinearColor GetRevealColorToSurvivor();
};

// Class DeadByDaylight.TreatmentComponent
// 0x0030 (FullSize[0x00E8] - InheritedSize[0x00B8])
class UTreatmentComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_F94Z[0x30];                                    // 0x00B8(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TreatmentComponent");
		return ptr;
	}



	void SetIsInTreatmentMode(bool treatmentMode);
	bool IsInTreatmentMode();
};

// Class DeadByDaylight.TREmitterFunctionLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTREmitterFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TREmitterFunctionLibrary");
		return ptr;
	}



	int STATIC_GetActiveFakeTerrorRadiusEmittersCount(class UObject* WorldContextObject);
};

// Class DeadByDaylight.TriggerableActivatorComponent
// 0x0040 (FullSize[0x00F8] - InheritedSize[0x00B8])
class UTriggerableActivatorComponent : public UActorComponent
{
public:
	unsigned char                                      _triggerableClass[0x30];                                   // 0x00B8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<class UTriggerableWorldObjectComponent*>    _triggerables;                                             // 0x00E8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TriggerableActivatorComponent");
		return ptr;
	}



	void Authority_OnLevelReadyToPlay();
};

// Class DeadByDaylight.TriggerableWorldObjectComponent
// 0x0098 (FullSize[0x0150] - InheritedSize[0x00B8])
class UTriggerableWorldObjectComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTriggered;                                               // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTriggerReset;                                            // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	float                                              _triggerResetTime;                                         // 0x00D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _randomChance;                                             // 0x00DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              _rollFrequency;                                            // 0x00E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_81WH[0xC];                                     // 0x00E4(0x000C) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TWeakObjectPtr<class UPrimitiveComponent>          _conditionalTriggerVolume;                                 // 0x00F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      _conditionalVolumeOverlappingPlayers[0x50];                // 0x00F8(0x0050) UNKNOWN PROPERTY: SetProperty
	TWeakObjectPtr<class UPrimitiveComponent>          _guaranteedTriggerVolume;                                  // 0x0148(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TriggerableWorldObjectComponent");
		return ptr;
	}



	void SetGuaranteedTriggerVolume(class UPrimitiveComponent* Volume);
	void SetConditionalTriggerVolume(class UPrimitiveComponent* Volume);
	void Multicast_OnTriggerReset();
	void Multicast_OnTriggered(class AActor* Instigator, const struct FVector& triggerLocation);
	void GetConditionalModifiers(class ADBDPlayer* Player, float* outAdditive, float* outMultiplicative);
	bool CanPlayerTriggerGuaranteed(class ADBDPlayer* Player);
	bool CanPlayerTriggerConditional(class ADBDPlayer* Player);
	void Authority_Trigger(class AActor* Instigator, const struct FVector& triggerLocation);
	void Authority_ResetTrigger();
	void Authority_GuaranteedVolumeOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& HitResult);
	void Authority_ConditionalVolumeEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void Authority_ConditionalVolumeBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* Other, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& HitResult);
};

// Class DeadByDaylight.TriplanarDecalComponent
// 0x0050 (FullSize[0x0260] - InheritedSize[0x0210])
class UTriplanarDecalComponent : public USceneComponent
{
public:
	float                                              MinHeight;                                                 // 0x0210(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              Height;                                                    // 0x0214(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              MaskIntensity;                                             // 0x0218(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_ZYNR[0x4];                                     // 0x021C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTexture2D*                                  TopTexture;                                                // 0x0220(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  BottomTexture;                                             // 0x0228(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                                  MaskTexture;                                               // 0x0230(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TEnumAsByte<Engine_EDetailMode>                    MinQualitySetting;                                         // 0x0238(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_FZTE[0x7];                                     // 0x0239(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDecalComponent*                             _triPlanarDecal;                                           // 0x0240(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _triPlanarDecalClass;                                      // 0x0248(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterial*                                   _decalMaterial;                                            // 0x0250(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_4VBR[0x8];                                     // 0x0258(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TriplanarDecalComponent");
		return ptr;
	}



	void UpdateTriplanarDecal();
};

// Class DeadByDaylight.TutorialAssetLibrary
// 0x0010 (FullSize[0x00C0] - InheritedSize[0x00B0])
class UTutorialAssetLibrary : public UAssetLibrary
{
public:
	unsigned char                                      UnknownData_HM5L[0x10];                                    // 0x00B0(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TutorialAssetLibrary");
		return ptr;
	}



};

// Class DeadByDaylight.TutorialEndGameComponent
// 0x0008 (FullSize[0x0160] - InheritedSize[0x0158])
class UTutorialEndGameComponent : public UEndGameComponent
{
public:
	float                                              _timerMaxCompletionPercentage;                             // 0x0158(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WLNP[0x4];                                     // 0x015C(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TutorialEndGameComponent");
		return ptr;
	}



	void SetTimerMaxCompletionPercentage(float Percentage);
};

// Class DeadByDaylight.TutorialFunctionLibrary
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UTutorialFunctionLibrary : public UBlueprintFunctionLibrary
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TutorialFunctionLibrary");
		return ptr;
	}



	bool STATIC_IsInTutorial(class UObject* WorldContextObject);
	class UTutorialObjectiveController* STATIC_GetTutorialObjectiveController(class UObject* WorldContextObject);
	class UTutorialNotificationController* STATIC_GetTutorialNotificationController(class UObject* WorldContextObject);
	class UTutorialHighlightController* STATIC_GetTutorialHighlightController(class UObject* WorldContextObject);
	class ATutorialGameState* STATIC_GetTutorialGameState(class UObject* WorldContextObject);
	class ATutorialGameMode* STATIC_GetTutorialGameMode(class UObject* WorldContextObject);
};

// Class DeadByDaylight.TutorialGameMode
// 0x0038 (FullSize[0x03A8] - InheritedSize[0x0370])
class ATutorialGameMode : public ADBDBaseMatchGameMode
{
public:
	unsigned char                                      UnknownData_AHIQ[0x10];                                    // 0x0370(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UTutorialObjectiveController*                _tutorialObjectiveController;                              // 0x0380(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTutorialNotificationController*             _tutorialNotificationController;                           // 0x0388(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTutorialHighlightController*                _tutorialHighlightController;                              // 0x0390(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAtlantaTutorialPlayerHudController*         _atlantaTutorialPlayerHudController;                       // 0x0398(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JNG9[0x8];                                     // 0x03A0(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TutorialGameMode");
		return ptr;
	}



	void SetEscapeGenerators(TArray<class AGenerator*> escapeGenerators, int requiredActivationCount);
	void SetEscapeActivated();
	void OnCanStartAtlantaTutorialChange__DelegateSignature(bool canStartTutorial);
	class UTutorialObjectiveController* GetTutorialObjectiveController();
	class UTutorialNotificationController* GetTutorialNotificationController();
	class UTutorialHighlightController* GetTutorialHighlightController();
	class UAtlantaTutorialPlayerHudController* GetAtlantaTutorialPlayerHudController();
};

// Class DeadByDaylight.TutorialGameState
// 0x00A0 (FullSize[0x08B0] - InheritedSize[0x0810])
class ATutorialGameState : public ADBDGameState
{
public:
	struct FScriptMulticastDelegate                    OnCurrentTutorialStepChanged;                              // 0x0810(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_BBRN[0x38];                                    // 0x0820(0x0038) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	bool                                               _forceHatchVisible;                                        // 0x0858(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_0TK5[0x57];                                    // 0x0859(0x0057) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TutorialGameState");
		return ptr;
	}



	void TutorialEndReached();
	void SetForcedHatchVisibility(bool IsHatchVisible);
	void SetEscapeRequirementsVisibility(bool IsVisible);
	void SetCurrentTutorialStep(DeadByDaylight_ETutorialStep step);
	void OnCurrentTutorialStepChanged__DelegateSignature(DeadByDaylight_ETutorialStep step);
	bool IsTutorialStarted();
	DeadByDaylight_ETutorialStep GetCurrentTutorialStep();
	void CompleteLocallyControlledCharacterIntros();
};

// Class DeadByDaylight.TutorialHighlightController
// 0x0018 (FullSize[0x0048] - InheritedSize[0x0030])
class UTutorialHighlightController : public UObject
{
public:
	unsigned char                                      UnknownData_DGY0[0x18];                                    // 0x0030(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TutorialHighlightController");
		return ptr;
	}



	void SetHudComponentHighlight(DBDSharedTypes_EHudComponent hudComponent, bool Show);
};

// Class DeadByDaylight.TutorialNotificationController
// 0x0080 (FullSize[0x00B0] - InheritedSize[0x0030])
class UTutorialNotificationController : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnBlockingNotificationDismissedEvent;                      // 0x0030(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_NFVL[0x70];                                    // 0x0040(0x0070) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TutorialNotificationController");
		return ptr;
	}



	void ShowNotification(const struct FName& tutorialNotificationId, float Duration);
	void ShowBlockingNotification(const struct FName& tutorialNotificationId);
	void OnBlockingNotificationDismissedEvent__DelegateSignature(const struct FName& tutorialNotificationId);
	void OnBlockingNotificationDismissed();
	void HideNotification(bool removeAllCachedNotifs);
};

// Class DeadByDaylight.TutorialObjectiveController
// 0x00B0 (FullSize[0x00E0] - InheritedSize[0x0030])
class UTutorialObjectiveController : public UObject
{
public:
	unsigned char                                      UnknownData_RYRV[0xB0];                                    // 0x0030(0x00B0) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TutorialObjectiveController");
		return ptr;
	}



	void RemoveObjective(const struct FName& tutorialObjectiveId);
	void RemoveAllObjectives();
	void CompleteObjective(const struct FName& tutorialObjectiveId, bool removeAfterCompletion);
	void AddObjective(const struct FName& tutorialObjectiveId);
};

// Class DeadByDaylight.TutorialsUtilities
// 0x0038 (FullSize[0x0268] - InheritedSize[0x0230])
class ATutorialsUtilities : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnTutorialUIReady;                                         // 0x0230(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_WASA[0x28];                                    // 0x0240(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.TutorialsUtilities");
		return ptr;
	}



	void TriggerTutorialHudFadeOut();
	void TriggerTutorialHudFadeIn();
	class ATutorialsUtilities* STATIC_GetTutorialsUtilities(class UObject* WorldContextObject);
	void STATIC_DestroyAI(class AAIController* AIController);
};

// Class DeadByDaylight.AnimationWidget
// 0x0008 (FullSize[0x0268] - InheritedSize[0x0260])
class UAnimationWidget : public UUserWidget
{
public:
	float                                              _playRate;                                                 // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_79FB[0x4];                                     // 0x0264(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.AnimationWidget");
		return ptr;
	}



	void SetPlayRate(float Rate);
	float GetPlayRate();
};

// Class DeadByDaylight.UIController
// 0x0030 (FullSize[0x0060] - InheritedSize[0x0030])
class UUIController : public UObject
{
public:
	class UGFxObject*                                  m_UIControllerObj;                                         // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMobileBaseUserWidget*                       _atlantaLoadingWidget;                                     // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_8MBN[0x20];                                    // 0x0040(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UIController");
		return ptr;
	}



};

// Class DeadByDaylight.UIScreenshotTool
// 0x02C8 (FullSize[0x0600] - InheritedSize[0x0338])
class AUIScreenshotTool : public ACharacterTool
{
public:
	class APostProcessVolume*                          PostProcessVolume;                                         // 0x0338(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FString                                     ScreenshotFolderPath;                                      // 0x0340(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                ScreenshotResolution;                                      // 0x0350(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                IconResolution;                                            // 0x0354(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                              DelayBeforeTakingScreenshot;                               // 0x0358(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_EScreenShotBatching                 Batching;                                                  // 0x035C(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_D0EE[0x3];                                     // 0x035D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CurrentPart;                                               // 0x0360(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	DeadByDaylight_ECustomizationCategory              CurrentPartCategory;                                       // 0x036C(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_MU96[0x3];                                     // 0x036D(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FName                                       CurrentSetting;                                            // 0x0370(0x000C) (Edit, ZeroConstructor, EditConst, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GMSU[0x4];                                     // 0x037C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ACameraActor*                                ScreenshotCamera;                                          // 0x0380(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                               UpdateCameraFromViewSettings;                              // 0x0388(0x0001) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_GBS2[0x3];                                     // 0x0389(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScreenshotViewSetting                      SurvivorHeadView;                                          // 0x038C(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      SurvivorTorsoView;                                         // 0x03B4(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      SurvivorLegsView;                                          // 0x03DC(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      KillerHeadView;                                            // 0x0404(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      KillerBodyView;                                            // 0x042C(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      KillerWeaponView;                                          // 0x0454(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_35L3[0x4];                                     // 0x047C(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<struct FGenderViewSetting>                  GenderViewOverrides;                                       // 0x0480(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterItemCategoryViewSetting>   CharacterViewOverrides;                                    // 0x0490(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FItemViewSetting>                    ItemViewOverrides;                                         // 0x04A0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRoleGenderViewSetting>              OutfitView;                                                // 0x04B0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterViewSetting>               OutfitCharacterOverrides;                                  // 0x04C0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FRoleGenderViewSetting>              OutfitTwoPartsView;                                        // 0x04D0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FOutfitViewSetting>                  OutfitOverrides;                                           // 0x04E0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharacterAnimation>                 AnimationOverrides;                                        // 0x04F0(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FScreenshotViewSetting                      CharmsView;                                                // 0x0500(0x0028) (Edit, NoDestructor, NativeAccessSpecifierPublic)
	TArray<struct FCharmCategorySetting>               CharmsCategoryOverrides;                                   // 0x0528(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FCharmViewSetting>                   CharmOverrides;                                            // 0x0538(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNamedButton                                ReloadDBButton;                                            // 0x0548(0x0018) (Edit, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_VOWZ[0x80];                                    // 0x0560(0x0080) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class AActor*                                      _spawnedCharm;                                             // 0x05E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FNamedButton                                ShowIconHelp;                                              // 0x05E8(0x0018) (Edit, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UIScreenshotTool");
		return ptr;
	}



};

// Class DeadByDaylight.UMGInventoryItemButton
// 0x0000 (FullSize[0x0610] - InheritedSize[0x0610])
class UUMGInventoryItemButton : public UUMGLoadoutItemButton
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGInventoryItemButton");
		return ptr;
	}



	void UpdateItemButtonProgressBar(class ACollectable* Item, class UProgressBar* itemProgressBar);
	void UpdateItemButton(class ACollectable* Item);
};

// Class DeadByDaylight.UMGAddonButton
// 0x0000 (FullSize[0x0610] - InheritedSize[0x0610])
class UUMGAddonButton : public UUMGInventoryItemButton
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAddonButton");
		return ptr;
	}



	void UpdateAddonButton(class UItemAddon* addon);
};

// Class DeadByDaylight.UMGAlertsWidget
// 0x00C0 (FullSize[0x03C0] - InheritedSize[0x0300])
class UUMGAlertsWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      AtlantaScoreAlertComponentClass[0x30];                     // 0x0300(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      AtlantaStatusEffectAlertComponentClass[0x30];              // 0x0330(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UCanvasPanel*                                CanvasPanelAlerts;                                         // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              IdleTime;                                                  // 0x0368(0x0004) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H7CC[0x44];                                    // 0x036C(0x0044) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UClass*                                      _scoreAlertClass;                                          // 0x03B0(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UClass*                                      _statusEffectAlertClass;                                   // 0x03B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAlertsWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaBaseEventsTemplate
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UUMGAtlantaBaseEventsTemplate : public UMobileBaseUserWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaBaseEventsTemplate");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaBonusACEventTemplate
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGAtlantaBonusACEventTemplate : public UUMGAtlantaBaseEventsTemplate
{
public:
	class UUMGAtlCurrencyStorefrontWidget*             currencyStorefrontWidget;                                  // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     LastPackSmallIconPath;                                     // 0x0308(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              InitialSize;                                               // 0x0318(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              AugmentedSize;                                             // 0x031C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                MaxNumberOfPacksToShowBigger;                              // 0x0320(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7297[0x4];                                     // 0x0324(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaBonusACEventTemplate");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaCalendarEventsTemplate
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGAtlantaCalendarEventsTemplate : public UUMGAtlantaBaseEventsTemplate
{
public:
	class UUMGAtlantaDailyRewardsGrid*                 DailyRewardGrid;                                           // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaCalendarEventsTemplate");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaCreditsPopup
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UUMGAtlantaCreditsPopup : public UMobileBaseUserWidget
{
public:
	class UUMGHtmlRichText*                            RichTitleText;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGHtmlRichText*                            RichContentText;                                           // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FString                                     _titleDefaultStyle;                                        // 0x0310(0x0010) (Edit, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaCreditsPopup");
		return ptr;
	}



	void SetCreditTitle(const struct FString& Title);
	void SetCreditContent(const struct FString& Content);
};

// Class DeadByDaylight.UMGAtlantaDailyRewardsGrid
// 0x0198 (FullSize[0x0498] - InheritedSize[0x0300])
class UUMGAtlantaDailyRewardsGrid : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_NCDP[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      BigDailyRewardWidgetTemplate_type_8[0x30];                 // 0x0300(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      BigDailyRewardWidgetTemplate_type_10[0x30];                // 0x0340(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      BigDailyRewardWidgetTemplate_type_14[0x30];                // 0x0370(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      SmallDailyRewardWidgetTemplate_type_8[0x30];               // 0x03A0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      SmallDailyRewardWidgetTemplate_type_10[0x30];              // 0x03D0(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      SmallDailyRewardWidgetTemplate_type_14[0x30];              // 0x0400(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UUniformGridPanel*                           DailyRewardWidgetsGridPanel;                               // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                LastDailyRewardWidgetPanel;                                // 0x0438(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	int                                                NumberOfItems;                                             // 0x0440(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_P7K9[0x54];                                    // 0x0444(0x0054) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaDailyRewardsGrid");
		return ptr;
	}



	void StartRewardsIntroRewardSequence();
	void StartIntroSequence();
	void PlayNextRewardIntroAnimation();
	void InitializeLayouts_BP();
};

// Class DeadByDaylight.UMGAtlantaDailyRewardsScreen
// 0x00A0 (FullSize[0x03A0] - InheritedSize[0x0300])
class UUMGAtlantaDailyRewardsScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_AH8J[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGAtlantaDailyRewardsGrid*                 DailyRewardWidgetsGrid;                                    // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ContinueButtonPanel;                                       // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGPopupButton*                             ContinueButton;                                            // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  RemainingTimeTextBlock;                                    // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                                 NormalColor;                                               // 0x0330(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 WarningColor;                                              // 0x0358(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6H0V[0x20];                                    // 0x0380(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaDailyRewardsScreen");
		return ptr;
	}



	void HandleCurrentActiveDailyRewardStateChanged(int dailyRewardIndex, int dailyRewardNewState);
	void HandleContinueButtonClick();
};

// Class DeadByDaylight.UMGAtlantaEventsDescription
// 0x0078 (FullSize[0x0378] - InheritedSize[0x0300])
class UUMGAtlantaEventsDescription : public UMobileBaseUserWidget
{
public:
	class UAtlantaEventsTemplateDataAsset*             widgetData;                                                // 0x0300(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                ItemsRewards;                                              // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Title;                                                     // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  Description;                                               // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TimePeriodTitle;                                           // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TimePeriodStart;                                           // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TimePeriodEnd;                                             // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                        DeepLinkButton;                                            // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                TimePeriodCanvas;                                          // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2VAB[0x30];                                    // 0x0348(0x0030) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaEventsDescription");
		return ptr;
	}



	void HandleButtonClicked();
};

// Class DeadByDaylight.UMGAtlantaEventsElement
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGAtlantaEventsElement : public UMobileBaseUserWidget
{
public:
	class UVerticalBox*                                ImageBox;                                                  // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  ElementName;                                               // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGPromoPackItemWidget*                     CustomizationWidget;                                       // 0x0310(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaEventsElement");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaEventsScreen
// 0x0080 (FullSize[0x0380] - InheritedSize[0x0300])
class UUMGAtlantaEventsScreen : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  PageTitle;                                                 // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWrapBox*                                    WrapBox;                                                   // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGAtlantaEventsDescription*                DescriptionWidget;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      EventsTabWBPReference;                                     // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<class UUMGAtlantaEventsTab*>                _eventsArray;                                              // 0x0320(0x0010) (ExportObject, ZeroConstructor, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_I2GQ[0x50];                                    // 0x0330(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaEventsScreen");
		return ptr;
	}



	void HandleEventTabClicked(const struct FString& ID);
	void BroadcastOnCloseButtonClicked();
	void BroadcastDeepLinkRequest(const struct FString& ID);
};

// Class DeadByDaylight.UMGAtlantaEventsTab
// 0x0040 (FullSize[0x0470] - InheritedSize[0x0430])
class UUMGAtlantaEventsTab : public UUMGBaseButtonWidget
{
public:
	struct FString                                     _eventId;                                                  // 0x0430(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  HotTagText;                                                // 0x0440(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  NewTagText;                                                // 0x0448(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_25YB[0x20];                                    // 0x0450(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaEventsTab");
		return ptr;
	}



	void SetSelectionVisuals(bool IsSelected);
	void SetNewTag();
	void SetHotTag();
};

// Class DeadByDaylight.UMGRichTextFreeTicketDecorator
// 0x0988 (FullSize[0x09B8] - InheritedSize[0x0030])
class UUMGRichTextFreeTicketDecorator : public URichTextBlockDecorator
{
public:
	struct FVector2D                                   FreeTicketOverrideSize;                                    // 0x0030(0x0008) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FRichTextFreeTicketImageInfo                FreeTicketIcon;                                            // 0x0038(0x00A0) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRichTextFreeTicketImageInfo                FreeTicketBG;                                              // 0x00D8(0x00A0) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	struct FRichTextFreeTicketTextInfo                 FreeTicketDurationTitle;                                   // 0x0178(0x02B0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRichTextFreeTicketTextInfo                 FreeTicketTitle;                                           // 0x0428(0x02B0) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	struct FRichTextFreeTicketTextInfo                 FreeTicketDurationInHours;                                 // 0x06D8(0x02B0) (Edit, BlueprintVisible, NativeAccessSpecifierPublic)
	class UDataTable*                                  TitleStyleSet;                                             // 0x0988(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_PTX2[0x28];                                    // 0x0990(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGRichTextFreeTicketDecorator");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaFreeTicketConfirmToUsePopup
// 0x03D8 (FullSize[0x07C0] - InheritedSize[0x03E8])
class UUMGAtlantaFreeTicketConfirmToUsePopup : public UUMGGenericPopup
{
public:
	class UTexture2D*                                  FreeTicketIcon;                                            // 0x03E8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FText                                       PopupTitleContent;                                         // 0x03F0(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_CISY[0x3B8];                                   // 0x0408(0x03B8) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaFreeTicketConfirmToUsePopup");
		return ptr;
	}



	void SetPopupTitle(const struct FText& characterName);
	void SetFreeTicketIconTexture(bool IsSlasher);
	class UUMGRichTextFreeTicketDecorator* GetDecorator();
};

// Class DeadByDaylight.UMGAtlantaFriendListScreen
// 0x03B8 (FullSize[0x06B8] - InheritedSize[0x0300])
class UUMGAtlantaFriendListScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_9FRV[0x60];                                    // 0x0300(0x0060) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetSwitcher*                             ListSwitcher;                                              // 0x0360(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             SearchResultSwitcher;                                      // 0x0368(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseFriendListElement*                   NonFriendSearchResult;                                     // 0x0370(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseFriendListElement*                   RequestReceivedSearchResult;                               // 0x0378(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseFriendListElement*                   RequestSentSearchResult;                                   // 0x0380(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseFriendListElement*                   FriendSearchResult;                                        // 0x0388(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  SearchFailureText;                                         // 0x0390(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                        CloseButton;                                               // 0x0398(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendSearchBarWidget*                   SearchBar;                                                 // 0x03A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              ButtonTabContainer;                                        // 0x03A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendListTabWidget*                     FriendListTabWidget;                                       // 0x03B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGSuggestionsListTabWidget*                SuggestionListTabWidget;                                   // 0x03B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGRequestsListTabWidget*                   RequestListTabWidget;                                      // 0x03C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendTabButtonWidget*                   FriendsTabButton;                                          // 0x03C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendTabButtonWidget*                   SuggestionsTabButton;                                      // 0x03D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGFriendTabButtonWidget*                   RequestsTabButton;                                         // 0x03D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseFriendListContextualMenuWidget*      CurrentContextualMenuWidget;                               // 0x03E0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      FriendWidget[0x30];                                        // 0x03E8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      RequestSentWidget[0x30];                                   // 0x0418(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FriendRequestReceivedWidget[0x30];                         // 0x0448(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FriendsSuggestionWidget[0x30];                             // 0x0478(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FriendsSuggestion[0x30];                                   // 0x04A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      FriendPartyInviteWidgetClass[0x30];                        // 0x04D8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      ContextualMenuInvite[0x30];                                // 0x0508(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      ContextualMenuConfirmDeclineAction[0x30];                  // 0x0538(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_6NJB[0x90];                                    // 0x0568(0x0090) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TMap<struct FString, struct FFriendWidgetList>     _existingFriendListWidgets;                                // 0x05F8(0x0050) (NativeAccessSpecifierPrivate)
	TMap<struct FString, class UUMGBaseFriendListElement*> _existingFriendInvitePartyWidget;                          // 0x0648(0x0050) (ExportObject, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_DCJ9[0x20];                                    // 0x0698(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaFriendListScreen");
		return ptr;
	}



	void VerifyReceivedFriendRequestFocus(class UExpandableArea* ExpandableArea, bool bIsExpanded);
	void OnFinishedOutAnimation();
	void HandleTabButtonClicked(unsigned char tabIndex);
	void HandleSearchInputChanged(const struct FText& inputText);
	void HandleSearchButtonClicked();
	void HandleOnActionOnFriend(const struct FActionOnFriend& ActionOnFriend);
	void HandleContextualMenuAction(DBDUIViewsMobile_EActionOnFriendType action);
	void HandleCloseButtonClicked();
};

// Class DeadByDaylight.UMGAtlantaGenericEventTemplate
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UUMGAtlantaGenericEventTemplate : public UUMGAtlantaBaseEventsTemplate
{
public:
	class UHorizontalBox*                              RelatedItemsBox;                                           // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      EventsElementWBPReference;                                 // 0x0308(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CustomizationWBPReference;                                 // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UClass*                                      CharacterWBPReference;                                     // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaGenericEventTemplate");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaLegalMenuScreen
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGAtlantaLegalMenuScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_MZOD[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaLegalMenuScreen");
		return ptr;
	}



	void SetLegalText(const struct FString& Title, const struct FString& LegalText);
	void SetButtonText(const struct FText& acceptText, const struct FText& declineText);
	void HandleMenuButtonClickEvent(bool isAccept);
};

// Class DeadByDaylight.UMGAtlantaLevelUpPopup
// 0x0000 (FullSize[0x03E8] - InheritedSize[0x03E8])
class UUMGAtlantaLevelUpPopup : public UUMGGenericPopup
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaLevelUpPopup");
		return ptr;
	}



	void OnSetData(int Level, int Prestige, bool prestigeIncreased, TArray<struct FRewardItemData> Rewards);
};

// Class DeadByDaylight.UMGAtlantaMonthlyPassEventTemplate
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGAtlantaMonthlyPassEventTemplate : public UUMGAtlantaBaseEventsTemplate
{
public:
	class UUMGSubscriptionPackButtonWidget*            MonthlyPassWidget;                                         // 0x0300(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaMonthlyPassEventTemplate");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaNavigationScreen
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UUMGAtlantaNavigationScreen : public UMobileBaseUserWidget
{
public:
	class UUMGBankAndPlayerInfoWidget*                 BankAndPlayerInfoWidget;                                   // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTextBlock*                                  TextButtonStart;                                           // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               PlayModeSelectionVisibility;                               // 0x0310(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               CharacterInfoVisibility;                                   // 0x0311(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               BackButtonVisibility;                                      // 0x0312(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               MenuButtonsVisibility;                                     // 0x0313(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	UMG_ESlateVisibility                               ButtonRoleVisibility;                                      // 0x0314(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	unsigned char                                      UnknownData_41F2[0x3];                                     // 0x0315(0x0003) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UButton*                                     ButtonRole;                                                // 0x0318(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                             BottomRightWidgetSwitcher;                                 // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGPartySlotsWidget*                        PartyPlayerSlots;                                          // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseCountdownWidget*                     PartyCountdownLarge;                                       // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	TArray<struct FPartyMemberUIData>                  _partyMembers;                                             // 0x0338(0x0010) (ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_RIP1[0x18];                                    // 0x0348(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaNavigationScreen");
		return ptr;
	}



	TArray<struct FPartyMemberUIData> GetPartyMembersData(int Index);
	void ButtonClickEvent(DeadByDaylight_ENavigationScreenButton buttonID);
};

// Class DeadByDaylight.UMGAtlantaPromoCodePopup
// 0x0080 (FullSize[0x0468] - InheritedSize[0x03E8])
class UUMGAtlantaPromoCodePopup : public UUMGGenericPopup
{
public:
	class UOverlay*                                    RewardPanel;                                               // 0x03E8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              RewardWidgetContainer;                                     // 0x03F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      RewardItemWidgetClass[0x30];                               // 0x03F8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	int                                                RewardItemWidgetMax;                                       // 0x0428(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FMargin                                     RewardItemWidgetPadding;                                   // 0x042C(0x0010) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, NativeAccessSpecifierProtected)
	float                                              RewardItemWidgetRevealDelay;                               // 0x043C(0x0004) (Edit, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                                    CodePanel;                                                 // 0x0440(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UEditableTextBox*                            PromoCodeInputTextBox;                                     // 0x0448(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      InvalidIcon;                                               // 0x0450(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_BM81[0x10];                                    // 0x0458(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaPromoCodePopup");
		return ptr;
	}



	void PromoCodeCommitted(const struct FText& Name, TEnumAsByte<SlateCore_ETextCommit> commitType);
	void OnPromoCodeInputOnPopup__DelegateSignature(const struct FString& Name);
};

// Class DeadByDaylight.UMGAtlantaPromoCodeRewardItemWidget
// 0x0138 (FullSize[0x0438] - InheritedSize[0x0300])
class UUMGAtlantaPromoCodeRewardItemWidget : public UMobileBaseUserWidget
{
public:
	class UPanelWidget*                                CurrencyItem;                                              // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CurrencyIcon;                                              // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CurrencyName;                                              // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CurrencyAmount;                                            // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ItemRarityTint;                                            // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                            RevealAnimationSmall;                                      // 0x0328(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                                CustomizationItem;                                         // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CustomizationIcon;                                         // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CustomizationName;                                         // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CustomizationRarityTint;                                   // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetAnimation*                            RevealAnimationLarge;                                      // 0x0350(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                                CharacterPanel;                                            // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CharacterPortrait;                                         // 0x0360(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  characterName;                                             // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                                TicketPanel;                                               // 0x0370(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      TicketRarityTint;                                          // 0x0378(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      TicketIcon;                                                // 0x0380(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TicketName;                                                // 0x0388(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TicketAmount;                                              // 0x0390(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UPanelWidget*                                OfferingPanel;                                             // 0x0398(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      OfferingRarityTint;                                        // 0x03A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      OfferingIcon;                                              // 0x03A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  OfferingName;                                              // 0x03B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  OfferingAmount;                                            // 0x03B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_J8H5[0x78];                                    // 0x03C0(0x0078) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaPromoCodeRewardItemWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGAtlantaPurchasePopup
// 0x00B0 (FullSize[0x03B0] - InheritedSize[0x0300])
class UUMGAtlantaPurchasePopup : public UMobileBaseUserWidget
{
public:
	class UWidgetSwitcher*                             LayoutSwitcher;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      ImagePopup;                                                // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  OfferTextWithInfo;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  OfferText;                                                 // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TitleTextWithInfo;                                         // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TitleText;                                                 // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  DescriptionText;                                           // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              ItemsContainer;                                            // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGPurchaseBuyButton*                       BuyButtonWithInfo;                                         // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGPurchaseBuyButton*                       BuyButton;                                                 // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGBaseButtonWidget*                        CloseButton;                                               // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGPurchaseSticker*                         PurchaseSticker;                                           // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      PurchaseItemsInfoWidgetClass[0x30];                        // 0x0360(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_4E56[0x20];                                    // 0x0390(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaPurchasePopup");
		return ptr;
	}



	void HandleCloseButtonClicked();
	void HandleBuyButtonClicked();
};

// Class DeadByDaylight.UMGAtlantaRankUpPopup
// 0x0048 (FullSize[0x0430] - InheritedSize[0x03E8])
class UUMGAtlantaRankUpPopup : public UUMGGenericPopup
{
public:
	class UUMGTallyRankBanner*                         RankBanner;                                                // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              RewardsContainer;                                          // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                RewardsSection;                                            // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      RewardWidgetClass[0x30];                                   // 0x0400(0x0030) UNKNOWN PROPERTY: SoftClassProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaRankUpPopup");
		return ptr;
	}



	void PlayRankUpBannerAnimation();
};

// Class DeadByDaylight.UMGAltantaRitual
// 0x0058 (FullSize[0x0358] - InheritedSize[0x0300])
class UUMGAltantaRitual : public UMobileBaseUserWidget
{
public:
	struct FText                                       _claimText;                                                // 0x0300(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _claimedText;                                              // 0x0318(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _completedText;                                            // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_OK1Z[0x10];                                    // 0x0348(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAltantaRitual");
		return ptr;
	}



	void SetData(const struct FAtlantaRitualUIData& ritual);
	void BroadcastOnClaimRewardsButtonPressed(int ritualId);
};

// Class DeadByDaylight.UMGAtlantaRitualsScreen
// 0x00F0 (FullSize[0x03F0] - InheritedSize[0x0300])
class UUMGAtlantaRitualsScreen : public UMobileBaseUserWidget
{
public:
	class UUMGAtlantaRitualTab*                        DailyTab;                                                  // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGAtlantaRitualTab*                        WeeklyTab;                                                 // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _atlantaRitualTitle;                                       // 0x0310(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _endInLabel;                                               // 0x0328(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _dailyButtonLabel;                                         // 0x0340(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _weeklyButtonLabel;                                        // 0x0358(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _dailyRemainingTime;                                       // 0x0370(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _weeklyRemainingTime;                                      // 0x0388(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_JURL[0x50];                                    // 0x03A0(0x0050) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaRitualsScreen");
		return ptr;
	}



	void SetNewRitualNumbers(int newDailyRitualNumber, int newWeeklyRitualNumber);
	void BroadcastOnClaimRewardButtonPressed(int ritualId);
	void BroadcastOnBackButtonPressed();
};

// Class DeadByDaylight.UMGAtlantaRitualTab
// 0x0048 (FullSize[0x0348] - InheritedSize[0x0300])
class UUMGAtlantaRitualTab : public UMobileBaseUserWidget
{
public:
	class UVerticalBox*                                ContainerBox;                                              // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _itemWidgetClass[0x30];                                    // 0x0308(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_MM60[0x10];                                    // 0x0338(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaRitualTab");
		return ptr;
	}



	void BroadcastOnClaimRewardsButtonPressed(int ritualId);
};

// Class DeadByDaylight.UMGAtlantaSeasonEndPopup
// 0x0040 (FullSize[0x0428] - InheritedSize[0x03E8])
class UUMGAtlantaSeasonEndPopup : public UUMGGenericPopup
{
public:
	class UUMGTallyRankBanner*                         OldSurvivorRankBanner;                                     // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyRankBanner*                         NewSurvivorRankBanner;                                     // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyRankBanner*                         OldKillerRankBanner;                                       // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTallyRankBanner*                         NewKillerRankBanner;                                       // 0x0400(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              NewRankHorizontalBox;                                      // 0x0408(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              OldRankHorizontalBox;                                      // 0x0410(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                _fadeOutTimerHandle;                                       // 0x0418(0x0008) (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	float                                              _timerBeforeFadeOutAnimation;                              // 0x0420(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_XHQR[0x4];                                     // 0x0424(0x0004) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaSeasonEndPopup");
		return ptr;
	}



	void TriggerFadeOutAnimationTimer();
	void PlayNewRankFadeInAnimation();
};

// Class DeadByDaylight.UMGAtlantaSettingScreen
// 0x0200 (FullSize[0x0500] - InheritedSize[0x0300])
class UUMGAtlantaSettingScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_J7VS[0xB0];                                    // 0x0300(0x00B0) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UWidgetSwitcher*                             SettingContextSwitcher;                                    // 0x03B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              SettingTabBox;                                             // 0x03B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              AlwaysDisplayButtonBox;                                    // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _settingTabButtonClass[0x30];                              // 0x03C8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      _settingAlwaysDisplayButtonClass[0x30];                    // 0x03F8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      _buttonBoxDividerAsset[0x30];                              // 0x0428(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      _overlayContextWidgetMap[0x50];                            // 0x0458(0x0050) UNKNOWN PROPERTY: MapProperty
	TMap<DeadByDaylight_EOverlayTabs, class UUMGSettingContextWidget*> _contextWidgetMap;                                         // 0x04A8(0x0050) (ExportObject, Transient, ContainsInstancedReference, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_OAYV[0x8];                                     // 0x04F8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaSettingScreen");
		return ptr;
	}



	void ShowCreditsOrConsentsPopup(const struct FString& Title, const struct FString& Content);
	void SetRightTopTextInfo(const struct FText& Title, const struct FString& Content, UMG_ESlateVisibility textVisibility);
	void HandleSurvivorCameraSensitivityChanged(int value);
	void HandleSettingTabClick(int tabIndex);
	void HandleLeaveButtonClick();
	void HandleLanguageButtonClick(int Index);
	void HandleKillerCameraSensitivityChanged(int value);
	void HandleInvertYToggleClick(bool toggleValue);
	void HandleInteractionButtonToggleClick(int Index);
	void HandleHandSideToggleClick(int Index);
	void HandleContextButtonClickEvent(int Index);
	void HandleAlwaysDisplayButtonClick(int tabIndex);
	void HandleAimAssistToggleClick(bool toggleValue);
};

// Class DeadByDaylight.UMGAtlantaStoreScreen
// 0x0038 (FullSize[0x0338] - InheritedSize[0x0300])
class UUMGAtlantaStoreScreen : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_A09Y[0x20];                                    // 0x0300(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UScaleBox*                                   AuricCellsWidget;                                          // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUniformGridPanel*                           AuricCellsGridPanel;                                       // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_B9XA[0x8];                                     // 0x0330(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaStoreScreen");
		return ptr;
	}



	void SetBank(DBDSharedTypes_ECurrencyType currencyType, int Bank);
	void HandleOnStoreLeft();
	void HandleOnClickedBuyAuricCell(int cellIndex);
};

// Class DeadByDaylight.UMGAtlantaTallyScreen
// 0x01C8 (FullSize[0x04C8] - InheritedSize[0x0300])
class UUMGAtlantaTallyScreen : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnTallyLeft;                                               // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTallySpectateClicked;                                    // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTallyAddFriendEvent;                                     // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnTallyReportEvent;                                        // 0x0330(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UUMGTallyListWidget*                         TallyScrollWidget;                                         // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      TallyScoreboardClass[0x30];                                // 0x0348(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      TallyBloodpointsClass[0x30];                               // 0x0378(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      TallyRankClass[0x30];                                      // 0x03A8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      TallyPlayerLevelClass[0x30];                               // 0x03D8(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      TallyCharacterProgressionClass[0x30];                      // 0x0408(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	struct FText                                       TextLeaveLobby;                                            // 0x0438(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	struct FText                                       SpectateButtonText;                                        // 0x0450(0x0018) (BlueprintVisible, BlueprintReadOnly, Transient, Protected, NativeAccessSpecifierProtected)
	DBDSharedTypes_EPlayerRole                         PlayerRole;                                                // 0x0468(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	DeadByDaylight_EGameType                           GameType;                                                  // 0x0469(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_H7R1[0x2];                                     // 0x046A(0x0002) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	int                                                PlayerStatus;                                              // 0x046C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               FromSpectateMode;                                          // 0x0470(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_R81T[0x7];                                     // 0x0471(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UUMGTallyScoreboardWidget*                   _scoreboardWidget;                                         // 0x0478(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGTallyBloodpointsWidget*                  _bloodpointsWidget;                                        // 0x0480(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGTallyRankWidget*                         _rankWidget;                                               // 0x0488(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGTallyPlayerLevelWidget*                  _playerLevelWidget;                                        // 0x0490(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGTallyCharacterProgressionWidget*         _characterLevelWidget;                                     // 0x0498(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_77QF[0x28];                                    // 0x04A0(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaTallyScreen");
		return ptr;
	}



	void ShowSpectateButton(bool Show);
	void SetScrollPageSize(const struct FGeometry& MyGeometry);
	void HandleTallySpectateClicked();
	void HandleTallyLeave();
	void HandleReportEvent(const struct FString& playerID);
	void HandleAddFriendEvent(const struct FString& playerID);
};

// Class DeadByDaylight.UMGAtlantaTutorialGenericPopup
// 0x0070 (FullSize[0x0458] - InheritedSize[0x03E8])
class UUMGAtlantaTutorialGenericPopup : public UUMGGenericPopup
{
public:
	class UImage*                                      ImageTutorial;                                             // 0x03E8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                ImagesCanvas;                                              // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              ButtonsPanel;                                              // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _pageButtonWidgetClass[0x30];                              // 0x0400(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	float                                              ButtonWidth;                                               // 0x0430(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	float                                              DelayBeforeChangingImage;                                  // 0x0434(0x0004) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FTimerHandle                                _changeImagesTimerHandle;                                  // 0x0438(0x0008) (Transient, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_BDA5[0x18];                                    // 0x0440(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaTutorialGenericPopup");
		return ptr;
	}



	void TriggerChangeImagesTimer();
	void HandleImageButtonClicked(int imageIndex);
};

// Class DeadByDaylight.UMGAtlantaTutorialScreen
// 0x0000 (FullSize[0x0300] - InheritedSize[0x0300])
class UUMGAtlantaTutorialScreen : public UMobileBaseUserWidget
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlantaTutorialScreen");
		return ptr;
	}



};

// Class DeadByDaylight.UMGBaseCurrencyStorefrontWidget
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGBaseCurrencyStorefrontWidget : public UUMGBaseStorefrontWidget
{
public:
	unsigned char                                      UnknownData_E8I3[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGBaseCurrencyStorefrontWidget");
		return ptr;
	}



	void BroadcastOnAuricCellButtonClicked(int cellIndex);
};

// Class DeadByDaylight.UMGAtlCurrencyStorefrontWidget
// 0x00D0 (FullSize[0x03E0] - InheritedSize[0x0310])
class UUMGAtlCurrencyStorefrontWidget : public UUMGBaseCurrencyStorefrontWidget
{
public:
	class UCanvasPanel*                                AuricCellsCanvasPanel;                                     // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUniformGridPanel*                           AuricCellsGridPanel;                                       // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              BottomPurchaseBox;                                         // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              BottomRightPurchaseRichText;                               // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UOverlay*                                    BottomTimer;                                               // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      AuricsBgR;                                                 // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      AuricsBgL;                                                 // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UHorizontalBox*                              EventItemsPackContainerBox;                                // 0x0348(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FMargin                                     PaddingEventItemsPackButton;                               // 0x0350(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, NativeAccessSpecifierPrivate)
	unsigned char                                      EventItemsPackWidgetClass[0x30];                           // 0x0360(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_LN7R[0x18];                                    // 0x0390(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UUMGStoreAuricCellButton*>            _auricCellButtons;                                         // 0x03A8(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_FAGD[0x28];                                    // 0x03B8(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlCurrencyStorefrontWidget");
		return ptr;
	}



	void UpdateFirstPurchaseForAllAuricCellsEndInUI(const struct FString& endInText);
};

// Class DeadByDaylight.UMGAtlEndDateTimerWidget
// 0x0040 (FullSize[0x0340] - InheritedSize[0x0300])
class UUMGAtlEndDateTimerWidget : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  TextEndIn;                                                 // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_JIHI[0x38];                                    // 0x0308(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGAtlEndDateTimerWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCharacterButton
// 0x01D0 (FullSize[0x04D0] - InheritedSize[0x0300])
class UUMGCharacterButton : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_CRKH[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UImage*                                      PortraitIcon;                                              // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CharacterSelectedPanel;                                    // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_RKV0[0x8];                                     // 0x0320(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCanvasPanel*                                LevelPanel;                                                // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  CharacterLevelText;                                        // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  OwnedCustomizationText;                                    // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  TotalCustomizationText;                                    // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                PricePanel;                                                // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterPrice*                          CellPrice;                                                 // 0x0350(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterPrice*                          ShardPrice;                                                // 0x0358(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FCharacterSlotData                          CharacterSlotData;                                         // 0x0360(0x0170) (BlueprintVisible, Transient, Protected, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterButton");
		return ptr;
	}



	void SetIsSelected(bool IsSelected);
	void SetCharacterData(const struct FCharacterSlotData& CharacterData);
	void BroadcastClickedEvent(int characterIndex);
};

// Class DeadByDaylight.UMGCharacterFreeTicketButton
// 0x0050 (FullSize[0x0350] - InheritedSize[0x0300])
class UUMGCharacterFreeTicketButton : public UMobileBaseUserWidget
{
public:
	class UWidgetSwitcher*                             ButtonSwitcher;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  FreeTicketLeftSecondsText;                                 // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      FreeTicketLeftSecondsBG;                                   // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_30J2[0x38];                                    // 0x0318(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterFreeTicketButton");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCharacterFreeTicketItemButton
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UUMGCharacterFreeTicketItemButton : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_70KY[0x20];                                    // 0x0300(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterFreeTicketItemButton");
		return ptr;
	}



	void UpdateWidget(const struct FString& bgPath, bool IsSlasher, int durationInHours, int itemCount, const struct FSlateColor& IconColor);
	void BroadcastClickEvent();
};

// Class DeadByDaylight.UMGCharacterFreeTicketWidget
// 0x0060 (FullSize[0x0360] - InheritedSize[0x0300])
class UUMGCharacterFreeTicketWidget : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnUseFreeTicketEvent;                                      // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UWidgetSwitcher*                             PanelSwitcher;                                             // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UVerticalBox*                                FreeTicketItemButtonBox;                                   // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      _buttonClass[0x30];                                        // 0x0320(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      UnknownData_S8KM[0x10];                                    // 0x0350(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterFreeTicketWidget");
		return ptr;
	}



	void UpdateBGColor(bool IsSlasher);
	void HandleButtonClickEvent(const struct FString& ticketId, const struct FString& characterName);
};

// Class DeadByDaylight.UMGCharacterInfoScreen
// 0x00A0 (FullSize[0x03A0] - InheritedSize[0x0300])
class UUMGCharacterInfoScreen : public UMobileBaseUserWidget
{
public:
	class UCanvasPanel*                                ContentPanel;                                              // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      SurvivorInfoWidgetClass[0x30];                             // 0x0308(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	unsigned char                                      KillerInfoWidgetClass[0x30];                               // 0x0338(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	class UUMGPopupButton*                             ProgressionButton;                                         // 0x0368(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    _onTeachableTooltipTriggeredLongPressEvent;                // 0x0370(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    _onPowerItemTooltipTriggeredLongPressEvent;                // 0x0380(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    _onProgressionButtonClickEvent;                            // 0x0390(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterInfoScreen");
		return ptr;
	}



	void HandleTeachablePerkTooltipLongPressedEvent(const struct FTeachableData& TeachableData, const struct FVector2D& Position);
	void HandleProgressionButtonClickEvent();
	void HandlePowerItemTooltipLongPressedEvent(const struct FInventorySlotData& SlotData, const struct FVector2D& Position);
};

// Class DeadByDaylight.UMGCharacterInfoWidget
// 0x0130 (FullSize[0x0430] - InheritedSize[0x0300])
class UUMGCharacterInfoWidget : public UMobileBaseUserWidget
{
public:
	class UScrollBox*                                  CharacterInfoScrollBox;                                    // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterScrollingInfoWidget*            CharacterScrollingInfoWidget;                              // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                CharacterDLCPanel;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      CharacterBackgroundImage;                                  // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  characterName;                                             // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _characterDifficultyText;                                  // 0x0328(0x0018) (Edit, BlueprintVisible, NoClear, Protected, NativeAccessSpecifierProtected)
	struct FString                                     _characterDLCText;                                         // 0x0340(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isKiller;                                                 // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_8CSA[0x7];                                     // 0x0351(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FSlateColor                                 _easyColor;                                                // 0x0358(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _intermediaryColor;                                        // 0x0380(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _hardColor;                                                // 0x03A8(0x0028) (Edit, BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 _currentColor;                                             // 0x03D0(0x0028) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _characterDLCTitle;                                        // 0x03F8(0x0018) (Edit, BlueprintVisible, NoClear, Protected, NativeAccessSpecifierProtected)
	struct FScriptMulticastDelegate                    _onTeachableTooltipTriggeredLongPressEvent;                // 0x0410(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    _onPowerItemTooltipTriggeredLongPressEvent;                // 0x0420(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterInfoWidget");
		return ptr;
	}



	void HandleTooltipLongPressedEvent(const struct FTeachableData& TeachableData, const struct FVector2D& Position);
	void HandlePowerItemTooltipLongPressedEvent(const struct FInventorySlotData& SlotData, const struct FVector2D& Position);
};

// Class DeadByDaylight.UMGCharacterPageScrollWidget
// 0x00A8 (FullSize[0x04E0] - InheritedSize[0x0438])
class UUMGCharacterPageScrollWidget : public UUMGGridPageScrollWidget
{
public:
	unsigned char                                      UnknownData_WANT[0x10];                                    // 0x0438(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	unsigned char                                      _characterButtonWidgetClass[0x30];                         // 0x0438(0x0030) UNKNOWN PROPERTY: SoftClassProperty
	TArray<struct FCharacterSlotData>                  _charactersData;                                           // 0x0478(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isKiller;                                                 // 0x0488(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_7OHD[0x7];                                     // 0x0489(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FText                                       _charactersTitleText;                                      // 0x0490(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _killersTitleText;                                         // 0x04A8(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _survivorsTitleText;                                       // 0x04C0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HC6L[0x8];                                     // 0x04D8(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterPageScrollWidget");
		return ptr;
	}



	void HandleCharacterClicked(int characterIndex);
};

// Class DeadByDaylight.UMGCharacterPrestigeIcon
// 0x0008 (FullSize[0x0308] - InheritedSize[0x0300])
class UUMGCharacterPrestigeIcon : public UMobileBaseUserWidget
{
public:
	class UImage*                                      PrestigeImage;                                             // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterPrestigeIcon");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCharacterPrestigeButton
// 0x0028 (FullSize[0x0330] - InheritedSize[0x0308])
class UUMGCharacterPrestigeButton : public UUMGCharacterPrestigeIcon
{
public:
	class UButton*                                     PrestigeButton;                                            // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                PrestigeAnimationCanvas;                                   // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_HKBO[0x18];                                    // 0x0318(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterPrestigeButton");
		return ptr;
	}



	void SetCharacterPrestigeData(bool CanPrestige, int PrestigeLevel, DBDSharedTypes_EPlayerRole Role);
	void OnPrestigeButtonClicked();
};

// Class DeadByDaylight.UMGCharacterPrice
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGCharacterPrice : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  PriceTextBlock;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                      AffordableColor;                                           // 0x0308(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FColor                                      UnaffordableColor;                                         // 0x030C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterPrice");
		return ptr;
	}



	void SetCurrencyData(const struct FPurchaseCurrencyData& currencyData);
};

// Class DeadByDaylight.UMGCharacterRotationWidget
// 0x0038 (FullSize[0x0298] - InheritedSize[0x0260])
class UUMGCharacterRotationWidget : public UUserWidget
{
public:
	unsigned char                                      UnknownData_2HJE[0x38];                                    // 0x0260(0x0038) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterRotationWidget");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCharacterScrollingInfoWidget
// 0x0160 (FullSize[0x0460] - InheritedSize[0x0300])
class UUMGCharacterScrollingInfoWidget : public UMobileBaseUserWidget
{
public:
	class UUMGTeachablePerkButton*                     FirstTeachablePerk;                                        // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTeachablePerkButton*                     SecondTeachablePerk;                                       // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGTeachablePerkButton*                     ThirdTeachablePerk;                                        // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UCanvasPanel*                                KillerInfoPanel;                                           // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGInventoryItemButton*                     KillerPower;                                               // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGHtmlRichText*                            CharacterBackstoryBox;                                     // 0x0328(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _killerPowerName;                                          // 0x0330(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _killerSpeedText;                                          // 0x0348(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _killerTerrorRadiusText;                                   // 0x0360(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _killerHeightText;                                         // 0x0378(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _perksTitle;                                               // 0x0390(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _teachablesTitle;                                          // 0x03A8(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _powerTitle;                                               // 0x03C0(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	struct FText                                       _attributesTitle;                                          // 0x03D8(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	class UTextBlock*                                  FirstTeachablePerkText;                                    // 0x03F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  SecondTeachablePerkText;                                   // 0x03F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UTextBlock*                                  ThirdTeachablePerkText;                                    // 0x0400(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FText                                       _backStoryTitle;                                           // 0x0408(0x0018) (BlueprintVisible, BlueprintReadOnly, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_IHID[0x20];                                    // 0x0420(0x0020) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FScriptMulticastDelegate                    _onTeachableTooltipTriggeredEvent;                         // 0x0440(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)
	struct FScriptMulticastDelegate                    _onPowerButtonTooltipLongPressEvent;                       // 0x0450(0x0010) (ZeroConstructor, InstancedReference, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterScrollingInfoWidget");
		return ptr;
	}



	void HandleTooltipLongPressedKillerPowerEvent(const struct FInventorySlotData& ItemData, const struct FVector2D& Position);
	void HandleTooltipLongPressedEvent(const struct FTeachableData& TeachableData, const struct FVector2D& Position);
};

// Class DeadByDaylight.UMGCharacterSelectionWidget
// 0x0058 (FullSize[0x0358] - InheritedSize[0x0300])
class UUMGCharacterSelectionWidget : public UMobileBaseUserWidget
{
public:
	struct FScriptMulticastDelegate                    OnCharacterSelected;                                       // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterRoleButtonClicked;                              // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	struct FScriptMulticastDelegate                    OnCharacterInfoButtonClicked;                              // 0x0320(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable, NativeAccessSpecifierPublic)
	class UUMGCharacterPageScrollWidget*               CharacterPageScrollWidget;                                 // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterSelectSubmenu*                  CharacterSelectSubMenu;                                    // 0x0338(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UUMGCharacterInfoWidget*                     CharacterInfoWidget;                                       // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UWidgetSwitcher*                             CharacterSwitcher;                                         // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	bool                                               _isKiller;                                                 // 0x0350(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_AO3Y[0x7];                                     // 0x0351(0x0007) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterSelectionWidget");
		return ptr;
	}



	void SwitchPanel();
	void BroadcastSelectedCharacter(int characterIndex);
	void BroadcastRoleButtonClicked();
};

// Class DeadByDaylight.UMGCharacterSelectSubmenu
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UUMGCharacterSelectSubmenu : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_UA20[0x20];                                    // 0x0300(0x0020) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterSelectSubmenu");
		return ptr;
	}



	void SetInInfoPanelMode(bool isInInfoPanel);
	void SetCurrentRole(bool IsKiller);
	void BroadcastRoleButtonClicked();
	void BroadcastInfoButtonClicked();
};

// Class DeadByDaylight.UMGCharacterSelectSubmenuButton
// 0x0008 (FullSize[0x0438] - InheritedSize[0x0430])
class UUMGCharacterSelectSubmenuButton : public UUMGBaseButtonWidget
{
public:
	class UCanvasPanel*                                NotificationPanel;                                         // 0x0430(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterSelectSubmenuButton");
		return ptr;
	}



};

// Class DeadByDaylight.UMGCharacterSlideShowWidget
// 0x0070 (FullSize[0x0370] - InheritedSize[0x0300])
class UUMGCharacterSlideShowWidget : public UMobileBaseUserWidget
{
public:
	unsigned char                                      _perkCategoriesIcons[0x50];                                // 0x0300(0x0050) UNKNOWN PROPERTY: MapProperty
	float                                              SecondsBeforeNextSlide;                                    // 0x0350(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_O7M9[0x1C];                                    // 0x0354(0x001C) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCharacterSlideShowWidget");
		return ptr;
	}



	void WaitAndFadeOut();
	void SwitchCharacterSlide();
	void FadeOut();
	void FadeIn();
	void DisplayCharacterSlide(const struct FCharacterSlideData& characterSlide);
};

// Class DeadByDaylight.UMGChargeableInteractionWidget
// 0x0028 (FullSize[0x0328] - InheritedSize[0x0300])
class UUMGChargeableInteractionWidget : public UMobileBaseUserWidget
{
public:
	class UImage*                                      ItemIcon;                                                  // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               InteractionIconVisibility;                                 // 0x0308(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               ItemChargeVisibility;                                      // 0x0309(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	UMG_ESlateVisibility                               InteractionHudVisibility;                                  // 0x030A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_DN2J[0x1D];                                    // 0x030B(0x001D) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGChargeableInteractionWidget");
		return ptr;
	}



	void SetSecondaryMessage(const struct FString& secondMessage);
	void SetProgressbarValue(float value);
	void SetProgressBarColor(DBDSharedTypes_EBarColor BarColor);
	void SetProficiencyData(int Index, const struct FStatusEffectSlotData& proficiencyData);
	void SetOpacity(float Opacity);
	void SetMessage(const struct FString& Message);
	void SetItemChargeValue(float value);
	void SetItemChargeColor(DBDSharedTypes_EBarColor BarColor);
	void ClearProficienciesData();
};

// Class DeadByDaylight.UMGCloseTooltipWidget
// 0x0018 (FullSize[0x0318] - InheritedSize[0x0300])
class UUMGCloseTooltipWidget : public UMobileBaseUserWidget
{
public:
	class UButton*                                     FullScreenButton;                                          // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_5J25[0x10];                                    // 0x0308(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCloseTooltipWidget");
		return ptr;
	}



	void HandleCloseTooltipButton();
};

// Class DeadByDaylight.UMGCommandDebugButton
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UUMGCommandDebugButton : public UMobileBaseUserWidget
{
public:
	class UTextBlock*                                  CommandLabel;                                              // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UButton*                                     CommandButton;                                             // 0x0308(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	struct FString                                     CommandName;                                               // 0x0310(0x0010) (Edit, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCommandDebugButton");
		return ptr;
	}



	void TriggerCommand();
};

// Class DeadByDaylight.UMGControlTypeSelectionWidget
// 0x0040 (FullSize[0x0340] - InheritedSize[0x0300])
class UUMGControlTypeSelectionWidget : public UMobileBaseUserWidget
{
public:
	class UUMGControlTypeWidget*                       SnapOnJoystick;                                            // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UUMGControlTypeWidget*                       CameraFullScreen;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  TitleText;                                                 // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_V00Y[0x28];                                    // 0x0318(0x0028) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGControlTypeSelectionWidget");
		return ptr;
	}



	void UpdateControlType(DeadByDaylight_EAtlantaControlTypeSetting ControlType);
};

// Class DeadByDaylight.UMGControlTypeWidget
// 0x0040 (FullSize[0x0340] - InheritedSize[0x0300])
class UUMGControlTypeWidget : public UMobileBaseUserWidget
{
public:
	class UUMGBaseButtonWidget*                        Button;                                                    // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  MoveTextHalfScreenCanvas;                                  // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  AimTextHalfScreenCanvas;                                   // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  MoveTextFullScreenCanvas;                                  // 0x0318(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UTextBlock*                                  AimTextFullScreenCanvas;                                   // 0x0320(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_VZS1[0x18];                                    // 0x0328(0x0018) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGControlTypeWidget");
		return ptr;
	}



	void SetOptionChecked(bool IsChecked);
	bool IsChecked();
	void InitializeDefaultLayout(DeadByDaylight_EAtlantaControlTypeSetting ControlType);
	void HandleButtonClicked();
};

// Class DeadByDaylight.UMGCustomizationCategoriesBar
// 0x0010 (FullSize[0x0310] - InheritedSize[0x0300])
class UUMGCustomizationCategoriesBar : public UMobileBaseUserWidget
{
public:
	unsigned char                                      UnknownData_IDGZ[0x10];                                    // 0x0300(0x0010) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCustomizationCategoriesBar");
		return ptr;
	}



	void SetSelectedCategory(DeadByDaylight_ECustomizationCategory Category);
	void SetRole(bool IsKiller);
	void BroadcastCustomizationCategoryButtonPressed(DeadByDaylight_ECustomizationCategory categoryIndex);
};

// Class DeadByDaylight.UMGCustomizationInfoWidget
// 0x0180 (FullSize[0x0480] - InheritedSize[0x0300])
class UUMGCustomizationInfoWidget : public UMobileBaseUserWidget
{
public:
	class UImage*                                      Icon;                                                      // 0x0300(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UImage*                                      Background;                                                // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class URichTextBlock*                              InformationText;                                           // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	struct FSlateColor                                 BackgroundColor;                                           // 0x0318(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 TextColor;                                                 // 0x0340(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	struct FSlateColor                                 IconColor;                                                 // 0x0368(0x0028) (Edit, Protected, NativeAccessSpecifierProtected)
	unsigned char                                      DefaultIcon[0x30];                                         // 0x0390(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      KillerIcon[0x30];                                          // 0x03C0(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      SurvivorIcon[0x30];                                        // 0x03F0(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      BreakableIcon[0x30];                                       // 0x0420(0x0030) UNKNOWN PROPERTY: SoftObjectProperty
	unsigned char                                      UnbreakableIcon[0x30];                                     // 0x0450(0x0030) UNKNOWN PROPERTY: SoftObjectProperty


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.UMGCustomizationInfoWidget");
		return ptr;
	}



};

// Class DeadByDaylight.VomitStateComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UVomitStateComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_GK5A[0x8];                                     // 0x00B8(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	struct FTagStateBool                               _isCharging;                                               // 0x00C0(0x0030) (HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.VomitStateComponent");
		return ptr;
	}



	void SetVomitState(DeadByDaylight_ELinkedVomitState newVomitState);
	void SetObjectState(class UGameplayTagContainerComponent* objectState);
	bool IsVomiting();
	DeadByDaylight_ELinkedVomitState getVomitState();
};

// Class DeadByDaylight.WakerObject
// 0x0030 (FullSize[0x0358] - InheritedSize[0x0328])
class AWakerObject : public AInteractable
{
public:
	unsigned char                                      UnknownData_CU0B[0x8];                                     // 0x0328(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UCamperDreamworldComponent*                  _linkedCamperDreamworldComponent;                          // 0x0330(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               IsInteracting;                                             // 0x0338(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	bool                                               _chargeComplete;                                           // 0x0339(0x0001) (BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_97T6[0x1E];                                    // 0x033A(0x001E) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.WakerObject");
		return ptr;
	}



	void UpdateVisibilityAndOutline();
	void SetChargeComplete(bool complete);
	void OnRep_LinkedCamperChanged(class UCamperDreamworldComponent* Previous);
	void OnNewLinkedCamper(class UCamperDreamworldComponent* dreamworldComponent);
	void OnLinkedCamperDreamStateChanged(bool IsInDreamworld, bool locallyObservedChanged);
	void OnAnyCamperDreamStateChanged(bool IsInDreamworld, bool locallyObservedChanged);
	void LinkCampersOnLevelReadyToPlay();
	bool IsLinkedToCamper(class ADBDPlayer* camper);
	bool HasLinkedCamper();
	bool GetIsInteracting();
	class UPrimitiveComponent* GetInteractorPrimitiveComponent();
	float GetInteractionPercentComplete();
	bool GetChargeComplete();
	bool CanWakeUpCamper(class ADBDPlayer* camper);
	void BindToCamperDreamStateChanged(class ADBDPlayer* Player);
};

// Class DeadByDaylight.WalesCypherHandler
// 0x0010 (FullSize[0x0048] - InheritedSize[0x0038])
class UWalesCypherHandler : public ULocalPlayerSubsystem
{
public:
	class UWalesCypherParameters*                      _walesCypherParams;                                        // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_2GQG[0x8];                                     // 0x0040(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.WalesCypherHandler");
		return ptr;
	}



};

// Class DeadByDaylight.WalesCypherParameters
// 0x0018 (FullSize[0x0050] - InheritedSize[0x0038])
class UWalesCypherParameters : public UDataAsset
{
public:
	struct FString                                     AUDIO_EVENT;                                               // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                SLASHER_INDEX;                                             // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int                                                CAMPER_INDEX;                                              // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.WalesCypherParameters");
		return ptr;
	}



};

// Class DeadByDaylight.WalletHandler
// 0x0128 (FullSize[0x0158] - InheritedSize[0x0030])
class UWalletHandler : public UObject
{
public:
	unsigned char                                      UnknownData_27PB[0x128];                                   // 0x0030(0x0128) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.WalletHandler");
		return ptr;
	}



};

// Class DeadByDaylight.WeightedElement
// 0x0000 (FullSize[0x0030] - InheritedSize[0x0030])
class UWeightedElement : public UInterface
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.WeightedElement");
		return ptr;
	}



};

// Class DeadByDaylight.WiggleWidget
// 0x0020 (FullSize[0x0320] - InheritedSize[0x0300])
class UWiggleWidget : public UMobileBaseUserWidget
{
public:
	float                                              TimeBetweenAnimationStart;                                 // 0x0300(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_FQB1[0x4];                                     // 0x0304(0x0004) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UMobileBaseUserWidget*                       WiggleButtonLeft;                                          // 0x0308(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	class UMobileBaseUserWidget*                       WiggleButtonRight;                                         // 0x0310(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_6UA6[0x8];                                     // 0x0318(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.WiggleWidget");
		return ptr;
	}



	void BecomeUnavailable();
	void BecomeAvailable();
};

// Class DeadByDaylight.Window
// 0x0100 (FullSize[0x0428] - InheritedSize[0x0328])
class AWindow : public AInteractable
{
public:
	struct FNativeBlockIndicatorData                   NativeSmokeOtherIndicatorData;                             // 0x0328(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FNativeBlockIndicatorData                   NativeEntityIndicatorData;                                 // 0x0340(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	struct FNativeBlockIndicatorData                   NativeSmokeSelfIndicatorData;                              // 0x0358(0x0018) (Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, ContainsInstancedReference, Protected, NativeAccessSpecifierProtected)
	bool                                               _isBlockedByLevel;                                         // 0x0370(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData, RepNotify, NoDestructor, Protected, HasGetValueTypeHash, NativeAccessSpecifierProtected)
	unsigned char                                      UnknownData_2AGA[0x7];                                     // 0x0371(0x0007) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UChildActorComponent*                        _entityAssets;                                             // 0x0378(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UMaterialHelper*                             _materialHelper;                                           // 0x0380(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkComponent*                                _akAudioWindow;                                            // 0x0388(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               akAudioEventWindowsBlocStart;                              // 0x0390(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UAkAudioEvent*                               akAudioEventWindowsBlocStop;                               // 0x0398(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TMap<class ACamperPlayer*, struct FVaultData>      _survivorVaultData;                                        // 0x03A0(0x0050) (Transient, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_AALW[0x8];                                     // 0x03F0(0x0008) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class ULocalPlayerTrackerComponent*                _localPlayerTracker;                                       // 0x03F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	class UBlockableComponent*                         _blockableComponent;                                       // 0x0400(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_S8EP[0x10];                                    // 0x0408(0x0010) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	class UDBDNavEvadeLoopComponent*                   _navEvadeLoopComponent;                                    // 0x0418(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	unsigned char                                      UnknownData_7X3M[0x8];                                     // 0x0420(0x0008) MISSED OFFSET (PADDING)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.Window");
		return ptr;
	}



	void OnRep_blockedByLevel();
	void OnLocallyObservedChanged();
	void OnFastVault(class ADBDPlayer* Player, class UInteractionDefinition* Interaction);
	void NotifyOnFastVault(class ADBDPlayer* Player, class UInteractionDefinition* Interaction);
	bool IsWindowVaultBlockedForAnyPlayer();
	bool IsWindowVaultBlockedFor(class ADBDPlayer* Player);
	class UMaterialHelper* GetMaterialHelper();
	class UChildActorComponent* GetEntityAssets();
	bool GetBlockedByLevel();
	class UAkComponent* GetAudioComponent();
	void ForceBlockLocalWindowInteraction(bool blockInteraction);
	void Authority_SetBlockedByLevel(bool isBlockedByLevel);
	void Authority_OnVaultInternal(class ADBDPlayer* Player, bool canBlockVault);
};

// Class DeadByDaylight.XboxProfileDAL
// 0x0000 (FullSize[0x0088] - InheritedSize[0x0088])
class UXboxProfileDAL : public UPlayerProfileDAL
{
public:


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.XboxProfileDAL");
		return ptr;
	}



};

// Class DeadByDaylight.ZoneDetectorComponent
// 0x0038 (FullSize[0x00F0] - InheritedSize[0x00B8])
class UZoneDetectorComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData_5JDC[0x18];                                    // 0x00B8(0x0018) MISSED OFFSET (FIX SPACE BETWEEN PREVIOUS PROPERTY)
	TArray<class UPrimitiveComponent*>                 _zones;                                                    // 0x00D0(0x0010) (ExportObject, ZeroConstructor, Transient, ContainsInstancedReference, HasGetValueTypeHash, NativeAccessSpecifierPrivate)
	TArray<struct FName>                               _tags;                                                     // 0x00E0(0x0010) (ZeroConstructor, Transient, HasGetValueTypeHash, NativeAccessSpecifierPrivate)


	static UClass* StaticClass()
	{
		static UClass* ptr = UObject::FindClass("Class DeadByDaylight.ZoneDetectorComponent");
		return ptr;
	}



	void OnOverlapExit(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnOverlapEnter(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
